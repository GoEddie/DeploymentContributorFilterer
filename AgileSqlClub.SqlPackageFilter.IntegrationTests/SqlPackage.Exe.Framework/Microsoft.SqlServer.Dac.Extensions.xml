<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlServer.Dac.Extensions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisModelValidationMode">
            <summary>
            Determines the validation performed on the model prior to code analysis.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisModelValidationMode.Full">
            <summary>
            The TSqlModel is fully validated prior to code analysis.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisModelValidationMode.None">
            <summary>
            No validation is performed on the TSqlModel prior to code analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult">
            <summary>
            The results of Code Analysis against a particular model. Will include any
            <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>s found, in addition to any errors that occurred
            during analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.#ctor">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.Problems">
            <summary>
            Any problems discovered by the rules run during code analysis
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.AnalysisErrors">
            <summary>
            Errors and messages that occurred during analysis. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.InitializationErrors">
            <summary>
            Gets errors that occurred during initialization of code analysis, rule lookup,
            and anything other than the analysis itself.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.SuppressionErrors">
            <summary>
            Gets errors that occurred during calling of the message suppression routine.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.GetAllErrors">
            <summary>
            Gets all errors, whether during initialization or during the analysis process. This
            does not include the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.Problems"/> found during analysis since these are
            returned separately.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.AnalysisSucceeded">
            <summary>
            Was analysis completed successfully? Analysis may fail for a number of reasons, for instance
            if errors already exist in the model before processing.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.SerializeResultsToXml(System.String)">
            <summary>
            Serializes the results in XML format to an output file.
            
            Only the problems discovered during analysis are output. No errors that occurred during
            the analysis process will be output.  
            </summary>
            <param name="outputFilename">
            The filename for the output file. 
            This should be a fully qualified path to the file, or if a relative file path is used
            then the resolved path will be relative to the location of the executable running for 
            your process.
            If a relative file path is used this w
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.SerializeResultsToXml(System.IO.Stream)">
            <summary>
            Serializes the results in XML format to an output stream. For backwards compatibility 
            
            Only the problems discovered during analysis are output. No errors that occurred during
            the analysis process will be output. 
            </summary>
            <param name="output">
            An output stream to write the XML results to. This must support write
            </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings">
            <summary>
            The settings used to configure rules used during analysis. 
            
            Before analysis begins, this settings object will be applied to the rules discovered 
            by the analysis service. If DisableRulesNotInSettings is set to true then any rules 
            not included in these settings will be disabled and not run during analysis. 
            
            These settings are applied by calling the <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.ApplySettingsToRules(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration})"/> method
            on rules returned by the engine.
            
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.#ctor(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration})">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> containing a set of rules.
            </summary>
            <param name="rules">The rules to include</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="rules"/> is null</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.CreateFromSettingsString(System.String,System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> configuration based on a settings string like the one used
            inside SSDT project files. This string defines what rules should be disabled or have their problems treated as
            errors instead of warnings. Any rule not included in the settings string will be enabled by default.
            </summary>
            <param name="settingsString">
            A semicolon delimited string identifying rules to be disabled or have problems treated as errors.
            The format is "-My.Disabled.Rule;+!My.Enabled.RuleWithError;-!My.Disabled.RuleWithError". Hence disabled rules should have "-" 
            before their ID and enabled rules with errors should have "+!" before their ID. 
            Only rules that are to be disabled or have their problems treated as errors should be included in the settings string.
            
            If this parameter is null or contains no valid rules, a default empty configuration will be returned. This will result in all
            discovered rules being run.
            </param>
            <param name="errors">List of errors found when processing the list.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.ConvertToSettingsString">
            <summary>
            Converts the rule configuration info in this <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> object into a
            settings string like the one used
            inside SSDT project files. This string defines what rules should be disabled or have their problems treated as
            errors instead of warnings. Any rule not included in the settings string will be enabled by default.
            </summary>
            <returns>
            A semicolon delimited string identifying rules to be disabled or have problems treated as errors.
            The format is "-My.Disabled.Rule;+!My.Enabled.RuleWithError;-!My.Disabled.RuleWithError". Hence disabled rules have "-" 
            before their ID and enabled rules with errors have "+!" before their ID. 
            Only rules that are to be disabled or have their problems treated as errors should be included in the settings string.
            </returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.DisableRulesNotInSettings">
            <summary>
            Should rules not found in these settings be disabled? The default is "false", so that
            any rules not explicitly covered in the settings will still be run during analysis. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.AddRange(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration})">
            <summary>
            Adds multiple <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> objects to the list of rules
            </summary>
            <param name="rules">The rules to include</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="rules"/> is null</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.Add(Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration)">
            <summary>
            Adds a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> object to the list of rules
            </summary>
            <param name="item">item to be added</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.Remove(Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration)">
            <summary>
            Removes a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> object from the list of rules.
            </summary>
            <param name="item">item to be removed</param>
            <returns>true if the item was successfully removed</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.FindConfiguration(System.String)">
            <summary>
            Tries to find the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> that matches the specified
            <paramref name="ruleId"/>. If the configuration doesn't exist then null will be returned
            </summary>
            <param name="ruleId">The fully qualified rule ID</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/>, or null if none matches the <paramref name="ruleId"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.TryGetRuleConfiguration(System.String,Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration@)">
            <summary>
            Tries to find the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> that matches the specified
            <paramref name="ruleId"/>.  
            </summary>
            <param name="ruleId">The fully qualified rule ID</param>
            <param name="config">out <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/>, or null if none matches the <paramref name="ruleId"/></param>
            <returns>true if a configuration matching the specified <paramref name="ruleId"/> was found, false otherwise</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.ApplySettingsToRules(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration})">
            <summary>
            Applies these settings to another set of rules.
            </summary>
            <param name="rules">The rules the settings should be applied to</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.EnableRule(System.String)">
            <summary>
            Includes a rule for execution
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.DisableRule(System.String)">
            <summary>
            Excludes a rule from execution
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.TreatRuleProblemAsWarning(System.String)">
            <summary>
            Treat any problems found a rule as warnings
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.TreatRuleProblemAsError(System.String)">
            <summary>
            Treat any problems found a rule as errors
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.IsRuleDisabled(System.String)">
            <summary>
            Is a particular rule in the rule settings disabled?
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <returns>true if the problem is disabled; false otherwise</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings.IsRuleProblemTreatedAsError(System.String)">
            <summary>
            Is a particular rule in the rule settings treated as error?
            </summary>
            <param name="ruleId">Fully qualified Id for the rule</param>
            <returns>true if the problem is treated as error; false otherwise</returns>
            <exception cref="T:System.ArgumentException">If the <paramref name="ruleId"/> is null or whitespace</exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService">
            <summary>
            A service that runs code analysis against a model and provides results to the caller.
             
            Note that this class is not thread-safe since multiple simulataneous calls to <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Analyze(Microsoft.SqlServer.Dac.Model.TSqlModel)"/> are
            not supported. However it is possible to call <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Cancel"/> from a thread while a separate thread is
            waiting on the <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Analyze(Microsoft.SqlServer.Dac.Model.TSqlModel)"/> method to complete.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ResultsFile">
            <summary>
            Optional path to a results file. If this is specified, the analysis service will save all results to
            an XML file at the end of analysis. If no file path is specified then this will not be done automatically,
            but <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.SerializeResultsToXml(System.String)"/> can be used to output the results after
            analysis has completed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.CodeAnalysisSucceededFile">
            <summary>
            Optional path to a file that is created if analysis succeeds. This can be used to check whether analysis
            should be run or not - for instance if analyzing a dacpac, comparing the modification time for the dacpac versus
            the analysis success file can tell you whether the dacpac is more recent than the last analysis.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ValidationMode">
            <summary>
            Determines the validation performed on the model prior to code analysis. This can be used to bypass
            the requirement that a TSqlModel be valid prior to analysis by a code analysis rule.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.GetRules">
            <summary>
            Gets the rules loaded by the service. The current state of these rules (enabled, disabled, rule problem severity)
            can be queried, as can information about the rule such as its ID and metadata. 
            </summary>
            <returns>
            list of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor"/> objects representing rules discovered by the service, their metadata and status
            </returns>
            <remarks>To discover any problems loading rules, <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.GetRuleLoadErrors"/> should be called</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.GetRuleLoadErrors">
            <summary>
            Gets any errors that may have occurred during loading of the analysis rules.
            This causes rules to be loaded by the service.
            </summary>
            <returns>A list of errors that occurred during rule loading.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ApplyRuleSettings(Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings)">
            <summary>
            Applies the specified rule settings against the service's configuration. 
            </summary>
            <param name="settings"><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> describing which rules should be run</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.SetProblemSuppressor(System.Predicate{Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext})">
            <summary>
            Sets the problem suppression predicate to be applied when suppressing rules. 
            This is an optional feature that supports ignoring problems raised by a rule.
            The problem might be suppressed based on the element the problem was raised against, or the source 
            that the problem was found in. 
            </summary>
            <param name="shouldSuppressProblem">
            Predicate that should examine the suppression context and decide whether the problem needs to be suppressed
            </param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.CancellationToken">
            <summary>
            The <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.CancellationToken"/> used to indicate whether execution should be canceled. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Cancel">
            <summary>
            Cancels execution of the analysis service
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Analyze(Microsoft.SqlServer.Dac.Model.TSqlModel)">
            <summary>
            Performs the analysis of the model. This will initialize all required resources, run analysis
            and report back results to the caller. 
            
            If the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ResultsFile"/> and/or <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.CodeAnalysisSucceededFile"/>
            are specified then these will be deleted at the start of the analysis, and new files created at the
            end of the analysis
            </summary>
            <param name="model">The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> to be analyzed</param>
            <returns>
            <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult"/> describing the problems found and any errors that
            occurred during processing
            </returns>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="model"/> is null</exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.IsCanceled">
            <summary>
            Gets a value that indicates whether the analysis was canceled
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.Execute">
            <summary>
            Main entry point for task execution.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ExecuteValidateElementStatusStep">
            <summary>
            Ensure the model builds successfully - otherwise there is no point in continuing analysis
            since for SCA it's assumed that the model is valid already.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ExecuteInitializeMessageSuppressionStep">
            <summary>
            Wrap whatever message suppression logic has been defined in a routine that will
            call into that code and catch any errors thrown by customer logic
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.SuppressProblemCallback(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext)">
            <summary>
            Check if the rule in context is suppressed. Handles exceptions thrown by the problem suppression code
            so that execution does not get stopped due to issues in external code
            </summary>
            <param name="context"></param>
            <returns>Return true if rule is suppressed for modelElement; false otherwise</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory">
            <summary>
            Factory class that supports creation of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.TSqlModel)">
            <summary>
            Creates an analysis service with the standard properties and all rules turned on by default.
            
            This is a convenience method that takes the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.Version"/> from the model
            and passes it to the <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.SqlServerVersion)"/>
            method.
            </summary>
            <param name="model">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> that will be analyzed. The version of the model must be known at the
            time the service is created since only rules compatible with that <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>
            will be loaded and run.
            </param>
            <returns>
            A <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> that can analyze the contents of the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings)">
            <summary>
            Creates an analysis service and configures it using the <paramref name="settings"/> passed to the method.
            
            The settings are a convenient way to set up the service in one step, but if you wish to
            specify some settings after creating the service this is possible via methods and properties on
            the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> itself.
            
            This is a convenience method that takes the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.Version"/> from the model
            and passes it to the <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.SqlServerVersion)"/>
            method.
            </summary>
            <param name="model">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> that will be analyzed. This must be known at the time the
            service is created since only rules compatible with the <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> for the model
            will be loaded and run.
            </param>
            <param name="settings">Settings object defining how to configure the service</param>
            <returns>A <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> that can analyze the contents of the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.SqlServerVersion)">
            <summary>
            Creates an analysis service with the standard properties and all rules turned on by default.
            
            </summary>
            <param name="version">
            The expected <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> of models to be analyzed. This should be known at the time the
            service is created since only rules compatible with this <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> 
            will be loaded and run. 
            </param>
            <returns>
            A <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> that can analyze the contents of the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceFactory.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.SqlServerVersion,Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings)">
            <summary>
            Creates an analysis service and configures it using the <paramref name="settings"/> passed to the method.
            
            The settings are a convenient way to set up the service in one step, but if you wish to
            specify some settings after creating the service this is possible via methods and properties on
            the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> itself.
            </summary>
            <param name="version">
            The expected <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> of models to be analyzed. This must be known at the time the
            service is created since only rules compatible with this <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> 
            will be loaded and run. 
            </param>
            <param name="settings">Settings object defining how to configure the service</param>
            <returns>A <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> that can analyze the contents of the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings">
            <summary>
            Defines the optional configuration settings for a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/>. This can determine which
            rules are run, how to suppress certain problems, and where to save results to.
            
            These settings can also be set on the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> after it has been created, but are included
            here to make construction more convenient.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.RuleSettings">
            <summary>
            Optional rule settings define what rules should be run during analysis and the severity of the problems created. 
            If no <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings"/> are specified the default behavior is to run all discovered rules.
            
            This property is applied using <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ApplyRuleSettings(Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisRuleSettings)"/>. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.ShouldSuppressProblem">
            <summary>
            An optional predicate that can be used to suppress problems raised by rules during analysis.
            See <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.SetProblemSuppressor(System.Predicate{Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext})"/> for more information.
            
            This property is applied using <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.SetProblemSuppressor(System.Predicate{Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext})"/>. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.ResultsFile">
            <summary>
            Optional path to a results file. If this is specified, the analysis service will save all results to
            an XML file at the end of analysis. If no file path is specified then this will not be done automatically,
            but <see cref="M:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisResult.SerializeResultsToXml(System.String)"/> can be used to output the results after
            analysis has completed.
            
            This property directly maps to <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.ResultsFile"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.CodeAnalysisSucceededFile">
            <summary>
            Optional path to a file that is created if analysis succeeds. This can be used to check whether analysis
            should be run or not - for instance if analyzing a dacpac, comparing the modification time for the dacpac versus
            the analysis success file can tell you whether the dacpac is more recent than the last analysis.
            
            This property directly maps to <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService.CodeAnalysisSucceededFile"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.ValidationMode">
            <summary>
            Determines the validation performed on the model prior to code analysis. This can be used to bypass
            the requirement that a TSqlModel be valid prior to analysis by a code analysis rule.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties">
            <summary>
            Properties to use when creating a rules engine. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties.RuleSettingsString">
            <summary>
            Optional string that can be used to disable rules
            and set rule severity
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties.SuppressProblem">
            <summary>
            The predicate to suppress problems detected by a rule against an element
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties.ExecuteCanceled">
            <summary>
            Callback function that tests whether to abort executing rules
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.ElementsListFormat">
            <summary>
              Looks up a localized string similar to {0}, {1}.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.InvalidRuleStatusPrefix">
            <summary>
              Looks up a localized string similar to Invalid prefix for rule key: {0}. Ignored..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.MissingSupportedElements">
            <summary>
              Looks up a localized string similar to Rule &apos;{0}&apos; in assembly &apos;{1}&apos; was ignored because it is missing SupportedElementTypes. This is required for Element scope rules.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.NoSupportedElementsFound">
            <summary>
              Looks up a localized string similar to Rule &apos;{0}&apos; in assembly &apos;{1}&apos; was ignored because it has no SupportedElementTypes that are top-level types. Only top-level types are processed during analysis. The following types were ignored: [{2}].
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.MefRuleEngineResources.UnsupportedElementsFound">
            <summary>
              Looks up a localized string similar to Rule &apos;{0}&apos; in assembly &apos;{1}&apos; has one or more SupportedElementTypes that are not top-level types. These following types will be ignored during analysis: [{2}].
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine">
            <summary>
            Responsible for executing rules against a SQLModel.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine.AllRuleDescriptions">
            <summary>
            Used for testing purposes
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine.ModelRuleDescriptions">
            <summary>
            Used for testing purposes
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine.ElementRuleDescriptions">
            <summary>
            Used for testing purposes
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleEngine.ExecuteRules(Microsoft.SqlServer.Dac.Model.TSqlModel,System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Execute all enabled rules against the specified model and each model element found in the model
            </summary>
            <param name="schemaModel">The model against which the rules are executed</param>
            <param name="errors">The errors that occurred when executing rules</param>
            <returns>The problems detected by executing the rules</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1.CreateStandardProperties">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties"/> that uses standard extension lookup 
            properties and returns this to the caller
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1.SetRuleStoreFactory(Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStoreFactory{`0})">
            <summary>
            For testing purposes only - injects a new rulestore factory for use when finding rules
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties)">
            <summary>
            Initializes the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1"/> 
            </summary>
            <param name="engineProperties"><see cref="T:Microsoft.SqlServer.Dac.Extensibility.CompositionProperties"/> defining how rules should be loaded</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1.GetAllRules(System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Gets all rules.
            </summary>
            <param name="typeLoadErrors">Output <see cref="T:System.Collections.Generic.List`1"/> containing all errors that occurred during load. This will include general load errors
            for all contributors on the machine, plus load errors relating to version mismatch between requested contributor version
            and the available contributors on the machine</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleLoader`1.CreateRuleEngine(System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Creates a RuleEngine.
            </summary>
            <param name="errors">Errors found while processing rules - are there duplicate rules or rules that do not include required metadata</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStore">
            <summary>
            A RuleStore that stores analysis rules and their metadata. Rules are accessible in their original form
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStore.GetRuleDescriptors(System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Gets the Code Analysis rules and their metadata wrapped inside RuleDescriptorImpl objects. The EngineProperties are used to
            filter rules by platform and to run a rule descriptor updater (if present), which can flag the rule as enabled/disabled
            and update the severity 
            </summary>
            <param name="errors">Errors found while processing rules - are there duplicate rules or rules that do not include required metadata</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleStore">
            <summary>
            For now only ISqlCodeAnalysisRule is supported via MEF - can change in the future if other rule types are required.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleStore.GetRuleDescriptors(System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Gets the Code Analysis rules and their metadata wrapped inside RuleDescriptorImpl objects. The EngineProperties are used to
            filter rules by platform and to run a rule descriptor updater (if present), which can flag the rule as enabled/disabled
            and update the severity 
            </summary>
            <param name="errors">Errors found while processing rules - are there duplicate rules or rules that do not include required metadata</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStoreFactory`1">
            <summary>
            Factory for loading rules via MEF extensibility. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.IRuleStoreFactory`1.CreateRuleStore(Microsoft.SqlServer.Dac.CodeAnalysis.Engine.EngineProperties,System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Creates an IRuleStore with rules found by MEF
            </summary>
            <param name="properties">Properties defining the configuration for extensibility loading etc</param>
            <param name="errors">Errors found while loading rule extensions </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.RuleStoreFactory`1.SetExtensionManagerFactory(Microsoft.SqlServer.Dac.Extensibility.IExtensionManagerFactory)">
            <summary>
            For testing purposes only - injects a new IExtensionManagerFactory which supplies types
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.SourceCodePositionProvider.TryGetSourceInformation(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.SourceInformation@)">
            <summary>
            Tries to find source information for a given TSqlObject
            </summary>
            <returns>true if source information was found</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Engine.SourceCodePositionProvider.TryGetSourceInformation(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.SourceInformation@)">
            <summary>
            Tries to find source information for a given TSqlObject
            </summary>
            <returns>true if source information was found</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute">
            <summary>
            Attribute defining a rule export, and the metadata about that rule. Implements ISqlAnalysisRuleMetadata,
            which should be used on the importer side to ensure type consistency
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute.Description">
            <summary>
            The description of the rule. This should be a short human readable description of what the
            rule is intended to warn against or block. This field is localizable, but this should be done
            be subclassing <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute"/> and overriding the Description property. 
            </summary>
            <example>
            <code>
            // Example of an Attribute class that supports localized descriptions:
            public class TestLocalizedExportCodeAnalysisRuleAttribute : ExportCodeAnalysisRuleAttribute
            {
                private readonly string _descriptionResourceName;
                private string _descriptionValue;
            
                public TestLocalizedExportCodeAnalysisRuleAttribute(string id, string displayName, string descriptionResourceName)
                    : base(id, displayName)
                {
                    _descriptionResourceName = descriptionResourceName;
                }
            
                public override string Description
                {
                    get
                    {
                        if (_descriptionValue == null)
                        {
                            // Using the descriptionResourceName as the key for looking up the description in the resources file. 
                            // MyResources is a resource file in the same project as the LocalizedExportCodeAnalysisRuleAttribute class. 
                            // For each rule, and entry should be added to the resources file with the descriptionResourceName as the
                            // key and the description as the value
                            _descriptionValue = MyResources.ResourceManager.GetString(_descriptionResourceName);
                        }
                        return _descriptionValue;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute.RuleScope">
            <summary>
            <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata.RuleScope"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute.Category">
            <summary>
            <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata.Category"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique ID used to identify this rule. Required parameter, rule will not load if this is missing or empty</param>
            <param name="displayName">Display name to show in the Visual Studio UI. Required parameter, rule will not load if this is missing or empty</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils">
            <summary>
            Internal rule utilities that will never meet the conditions for sharing with the public via an open API
            or inclusion in a sample project
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils.TryGetTSqlObject(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.Data.Tools.Schema.Sql.SchemaModel.ISqlModelElement,Microsoft.SqlServer.Dac.Model.TSqlObject@)">
            <summary>
            Tries to map an internal element to a public element. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils.GetSchemaObjectName(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Get the schema object name in EscapedFullyQualifiedName format from an ISqlModelElement
            </summary>
            <param name="model"></param>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils.GetSchemaObjectName(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            Get the schema object name in EscapedFullyQualifiedName format from a Sql element Descriptor
            </summary>
            <param name="model"></param>
            <param name="elementDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils.GetSchemaObjectName(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.ElementDescriptor,Microsoft.SqlServer.Dac.Model.ElementNameStyle)">
            <summary>
            Get the schema object name in user's choice of format from a Sql element Descriptor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.RuleUtils.GetSchemaObjectName(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.Model.ElementNameStyle)">
            <summary>
            Get the schema object name in user's choice of format from an ISqlModelElement
            </summary> 
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.TsqlScriptDomUtils">
            <summary>
            Utility class for TransactSql.ScriptDom functionality. These functions will not be
            part of the public API, but they may be added to the public samples project so that users can
            understand how we use the ScriptDom APIs for writing rules.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.TsqlScriptDomUtils.IsSubroutineViewOrTrigger(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            Checks if a fragment represents the body of a subroutine, a view, 
            or a trigger. These have similar characteristics, for instance the ability to
            include select statements against tables. 
            </summary>
            <param name="fragment"><see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> representing part of a TSQL object definition</param>
            <returns>true if this is a subroutine, a view or a trigger body</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Internal.TsqlScriptDomUtils.RemoveParenthesis(Microsoft.SqlServer.TransactSql.ScriptDom.ScalarExpression)">
            <summary>
            recursively remove parenthesises of an TSql parser expression
            </summary>
            <param name="expression">Expression to parse</param>
            <returns>Expression without parenthesis</returns>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlCodeAnalysisConstants.StaticCodeAnalysisProblemCategory">
            <summary>
            Error category for static code analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata">
            <summary>
            The metadata describing a rule - its namespace, id, scope etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata.Description">
            <summary>
            The description of the rule. This should be a short human readable description of what the
            rule is intended to warn against or block.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata.RuleScope">
            <summary>
            The scope of this rule. Choose between <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Element"/> and <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Model"/>.
            Note that for element scoped rules, the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule.SupportedElementTypes"/> property must return
            one or more element types that can are supported for analysis by the rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata.Category">
            <summary>
            (Optional) Category used to group the rule in Visual Studio UI. This should never be localized
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException">
            <summary>
            Represents an exception that occurred when running the rule problem suppression test.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException.#ctor">
            <summary>
             Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException.#ctor(System.String)">
            <summary>
            Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException"/> class with the specified error message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException"/> class with the specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor">
            <summary>
            Represents the problem suppressor used by SSDT projects. The <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.ShouldSuppressProblem"/> method
            can be passed to <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisServiceSettings.ShouldSuppressProblem"/> in order to use this 
            class.
            
            This reads suppression information from a file with a name matching
            <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.SuppressionFilename"/> ("StaticCodeAnalysis.SuppressMessages.xml") in the root directory.
            
            All relative paths will be resolved relative to the project folder defined in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.SuppressionFilename">
            <summary>
            The default file name for a message suppression file within a project.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.CreateSuppressor(Microsoft.Data.Tools.Schema.Sql.RuleEngine.MessageSuppressionFileManager)">
            <summary>
            Internal factory method that creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/>.
            </summary>
            <param name="suppressionFileManager">
            The file manager to use for loading/saving suppression rules. 
            </param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/></returns>
            <exception cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException">
            Thrown if there was a problem parsing the XML
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.CreateSuppressor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/>.
            </summary>
            <param name="projectFolder">
            The folder in which the XML Message suppression file is found. 
            Any rule suppressed using a relative file path will base the full path off
            this folder location. 
            </param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/> </returns>
            <exception cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException">
            Thrown if the Path to the XML file was invalid or if there was a problem parsing the XML
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.CreateSuppressor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/>.
            </summary>
            <param name="projectFolder">
            The folder in which the XML Message suppression file is found. 
            Any rule suppressed using a relative file path will base the full path off
            this folder location. 
            </param>
            <param name="suppressionFilename">'
            The name of the XML message suppression file. This is expected to be under the project folder.
            </param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor"/> </returns>
            <exception cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ProblemSuppressionException">
            Thrown if the Path to the XML file was invalid or if there was a problem parsing the XML
            </exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.ShouldSuppressProblem">
            <summary>
            Gets the predicate that can be used to
            
            If any errors occur during
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.ResetSuppressedProblems">
            <summary>
            Resets the suppressed problems to their default state. If an XML suppression file for the
            project existed already then the state will be reloaded from there, otherwise it will
            be reset so that no problems are suppressed.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.UnsuppressRulesFromFile(System.String)">
            <summary>
            Removes all problem suppression directives for a particular filename.
            
            The updated set of problems to suppress will be immediately written out to the backing XML file that describes what
            rules should be suppressed for a given file. 
            </summary>
            <param name="fileName">path to the file</param>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="fileName"/> is null</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.GetSuppressedProblems">
            <summary>
            Gets information on what problems will be suppressed. Specifically, a set of
            <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo"/> objects will be returned that defines each combination of a
            rule being suppressed and the file name for which the rule is suppressed.
            </summary>
            <returns>A list of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo"/> objects defining each combination of a
            rule being suppressed and the file name for which the rule is suppressed</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.ProjectProblemSuppressor.AddSuppressedProblems(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo})">
            <summary>
            Adds one or more instances of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo"/> to the set of suppressed problems.
            The full set of suppressed problems will be immediately written out to the backing XML file.
            </summary>
            <param name="suppressedProblems">
            An IEnumerable of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo"/> objects defining each combination of a 
            file for which some problems should be suppressed, and the specific rule whose problems should be
            suppressed.
            </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration">
            <summary>
            Specifies how a rule should be configured - should this be enabled or disabled? What severity should be applied
            for the rule?
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> for a rule, using the default settings for <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.Enabled"/>
            and <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.Severity"/>.
            </summary>
            <param name="ruleId">ID of the rule this configuration specifies. Cannot be null or whitespace.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.#ctor(System.String,System.Boolean,Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> for a rule.
            </summary>
            <param name="ruleId">ID of the rule this configuration specifies. Cannot be null or whitespace.</param>
            <param name="enabled">Is this rule enabled or disabled?</param>
            <param name="severity">What is the severity of problems identified by this rule? Should be either 
            <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Warning"/> or <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Error"/>.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.RuleId">
            <summary>
            Gets the unique Id used to identify the rule. This is the fully qualified ID, which would usually be
            in the form "My.Org.MyRuleName".
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.Namespace">
            <summary>
            Gets the namespace for the rule. This is the part of the rule that precedes the final "." in the ID name.
            For instance for a rule ID "My.Org.MyRuleName", the namespace would be "My.Org".
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.ShortRuleId">
            <summary>
            Gets the last part of the rule ID. This is the part of the rule that follows the final "." in the ID name.
            For instance for a rule ID "My.Org.MyRuleName", the short rule ID would be "MyRuleName".
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.Enabled">
            <summary>
            Specifies if the rule is enabled and should be included in the code analysis.
            
            The default value is true
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration.Severity">
            <summary>
            What severity should problems created by the rule have?
            
            The default severity is <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Warning"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor">
            <summary>
            Describes a rule discovered by the rule engine and supports configuration of its properties.
            Descriptors inherit properties from <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/>, to support enabling/disabling the rule during
            analysis and specifying the severity for problems created by the rule. 
            
            This class is not intended to be subclasses by external users - instances of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor"/> are created
            by the analysis service.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.#ctor(System.String)">
            <summary>
            Protected constructor to be called by implementing classes.
            </summary>
            <param name="ruleId">ID of the rule being described</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.DisplayDescription">
            <summary>
            The description of the rule. This should be a short human readable description of what the
            rule is intended to warn against or block.
            
            This is automatically read from the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.Metadata"/> property
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.DisplayName">
            <summary>
            Display name describing the rule.
            
            This is automatically read from the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.Metadata"/> property
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.Rule">
            <summary>
            The actual instance of the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor.Metadata">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ISqlAnalysisRuleMetadata"/> describing the rule.
            This is a required property that must be defined by subclasses.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException">
            <summary>
            Represent an exception that may occur during a code analysis run
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException"/> 
            Exception message and inner exceptions are set to null
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException"/>  with a message
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleException"/> with a message and an inner exception
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception to attached to this exception</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.ElementNameAstLocatorSchemaAnalyzer">
            <summary>
            The class to locate the accurate AST that defines the name for a model element
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.ElementNameAstLocatorSchemaAnalyzer.NameAstNode">
            <summary>
            The TSqlFragment referring to the name of the element
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.CommonUtilities.ElementNameAstLocatorSchemaAnalyzer.ElementAstNode">
            <summary>
            The TSqlFragment referring to the element itself
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.DataTypeCompatibilityRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.DataTypeCompatibilitySchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker">
            <summary>
            Note: This class relies on internal code that is shared with the internal validation rules. In order to minimize code 
            reuse and avoid unnecessarily duplicating code, some parts of this class directly use and call into the internal model.
            This is viewed as acceptable as upgrading to the public API isn't really necessary and would not provide significant
            benefits to external users.
            
            In addition, some internal objects such as dynamic column sources cannot be mapped to the public model and hence
            it is necessary to use the internal object model in cases where those objects might have issues
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.CollectLocalColumnDefinitions(System.Collections.Generic.Dictionary{Microsoft.SqlServer.Dac.Model.ElementDescriptor,Microsoft.SqlServer.TransactSql.ScriptDom.ColumnDefinition})">
            <summary>
            convert TSql.DataType to TSqlDataTypeInfo
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.CheckVariableAssignment(Microsoft.SqlServer.TransactSql.ScriptDom.VariableReference,Microsoft.Data.Tools.Schema.Sql.Common.TypeEvaluator.TSqlDataTypeInfo,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            This method is used to check variable assignment from proc/function return value to a variable
            Use this if you know the type of proc/function return value
            </summary>
            <param name="variable"></param>
            <param name="fromDataType"></param>
            <param name="fragmentToReport"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.CheckAssignmentSetClause(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            we currently support
              column_name = expression, 
              @variable = expression, and
              @variable = column = expression  
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.CollectParameterInfo(Microsoft.SqlServer.Dac.Model.TSqlObject,System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.ExecuteParameter},Microsoft.SqlServer.Dac.Model.ModelCollationComparer,System.Collections.Generic.Dictionary{System.String,Microsoft.Data.Tools.Schema.Sql.Common.TypeEvaluator.TSqlDataTypeInfo}@,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Data.Tools.Schema.Sql.SchemaModel.ParameterValueInfo}@)">
            <summary>
            Return a dictionary with parameter name key and type info value
            Return a list of parameter value info that is resolved using parameters from subroutine and execute statement
            </summary>
            <param name="subroutine"></param>
            <param name="executeParameterList"></param>
            <param name="comparer"></param>
            <param name="parameterNameToTypeMap"></param>
            <param name="parameterValueInfo"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.TryGetParameters(Microsoft.SqlServer.Dac.Model.TSqlObject,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Model.TSqlObject}@)">
            <summary>
            All object types that match a subroutine are expected to have a "Parameters" relationship which we can read.
            We look up the relationship class dynamically since it will vary between Procedures, ScalarFunctions and other
            types
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.TryGetReturnType(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.Data.Tools.Schema.Sql.Common.TypeEvaluator.TSqlDataTypeInfo@)">
            <summary>
            Attempts to look up the return type for a function
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.GetTypeInfoForInsertTarget(Microsoft.SqlServer.TransactSql.ScriptDom.InsertStatement)">
            <summary>
            Must use the internal model here since dynamic object column sources aren't modelable in the public model,
            and this is a situation where those appear.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.GetTypeInfoForAllColumnsOfTable(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement)">
            <summary>
            This method heavily uses the internal implementation - again this whole class struggles to use the
            public model
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.GetTypeInfoForColumn(Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            Note: This method uses internal methods
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.GetTypeInfoForUdtUddt(Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            get TSqlDataTypeInfo for the acutal data type of a UDT and UDDT based on its 
            SqlElementDescriptor.
            </summary>
            <param name="uddtDescriptor">ElementDescriptor for the UDDT or UDT</param>
            <returns>actual data type if found, null otherwise</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.TryGetFunctionDefinition(Microsoft.SqlServer.TransactSql.ScriptDom.FunctionCall,Microsoft.SqlServer.TransactSql.ScriptDom.FunctionStatementBody@,System.Collections.Generic.List{Microsoft.Data.Tools.Schema.Sql.Common.TypeEvaluator.TSqlDataTypeInfo}@)">
            <summary>
            Again we've failed to fully use the public model in this method, if this can be reviewed
            at a future date then perhaps this can be fixed.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.IsAScalarModule(Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            Verifies a descriptor is a type of scalar module (ScalarFunctions and Aggregates count as this) 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.TypeCompatibilityChecker.GetTypeInfoForSequenceName(Microsoft.SqlServer.TransactSql.ScriptDom.SchemaObjectName)">
            <summary>
            This method heavily uses the internal implementation - again this whole class struggles to use the
            public model
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.IdentitySchemaAnalyzer">
            <summary>
            The SchemaAnalyzer checks for the usages of system function @@IDENTITY
            and reports its possibe misuse.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.IdentitySchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Constructor with SqlAnalysisRule, SqlSchemaModel, and ISqlModelElement provided
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.OldStyleJoinSyntaxAnalysisRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.OldStyleJoinSyntaxSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.PopulateOutputParametersRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.PopulateOutputParametersSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SelectAsteriskSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SelectAsteriskSchemaAnalyzer"/> to analyze a particular element in the model.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SmallVariableLengthTypesRule">
            <summary>
            This rule checks if a small length (less than three) is used for variable-length types, 
            which include VARCHAR, NVARCHAR, and VARBINARY
            Such data types can be used in various scenarios:
                column of regular tables
                column of temporary tables
                column of common table expressions
                subroutine parameter 
                variable
                scalar function return type
                user defined data types
                
            TODO, yangg: we currently dont' handle temporary table columns, cte columns, and variables, 
                         since interpretation is not ready yet
            
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Design.SmallVariableLengthTypesRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary> 
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.LocalizedExportCodeAnalysisRuleAttribute.GetAssembly">
            <summary>
            Rules in a different assembly would need to overwrite this
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.ReservedWordsForTypeNameAnalysisRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.ReservedWordsForTypeNameSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Constructor with comparison manager 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.SpecialCharactersInObjectNameRule.DynamicObjectsLookup">
            <summary>
            Provides getters for the types that need to access dynamic objects - there's no clean way to do this.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.SpecialCharactersInObjectNameRule.ProcessBodyScriptElements(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject,System.Collections.Generic.IList{Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem})">
            <summary>
            A subset of top-level types such as Procedures have a body script containing
            dynamic objects. We don't want to miss flagging errors in these, but these
            aren't accessible via the public model. To work around this we use the internal
            model implementation for this work
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Naming.SpPrefixForStoredProceduresRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ExtractDeterministicFunctionCallRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ExtractDeterministicFunctionCallSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentRule">
            <summary>
            The base rule for checking LikePredicate, we suggest using "m%" instead of "%m".
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentSchemaAnalyzer">
            <summary>
            This rule checks whether the patterns of the LIKE predicate from WHERE clauses start
            with "%" while match expression is a column, which can cause a table scan and degrade
            performance
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.LikePercentSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.ColumnInsideExpressionChecker">
            <summary>
            the class is to find out all the columns participating in an expression but not part of function call or ISNULL
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.MoveColumnToOneSideRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.MoveColumnToOneSideSchemaAnalyzer">
            <summary>
            This rule suggests moving columns to one side of en expression in the WHERE clause, 
            thus to avoid table scan. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.MoveColumnToOneSideSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateRule">
            <summary>
            When we see an In Predicate, we want to check whether there is Table Index
            that it could use to boost the performance. If not, we give a warning. This
            is because In Predicate is executed by a Table Scan instead of Index Seek, which
            hugely slows down the SQL query performance.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateSchemaAnalyzer">
            <summary>
            This checks whether a column test expression of the IN predicate has an
            index or not. If it does not, the evaluation of the predicate can cause
            a table scan and degrade the performance.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NonIndexedColumnFromInPredicateSchemaAnalyzer.ColumnHasIndex(Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Check whether the specified column has index or not.
            </summary>
            <returns>true when the column has index; false, otherwise</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.CheckNullableColumnHelper">
            <summary>
            the class is to check whether a nullable column exists in an expression
            other than ISNULL function and IS NULL / IS NOT NULL operators
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NullableColumnRule">
            <summary>
            The base rule for Nullable Column Performance Rule.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NullableColumnRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            perform actual analysis
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.Performance.NullableColumnSchemaAnalyzer">
            <summary>
            This rule is to find out all the nullable columns used in WHERE predicates which
            do not act as operands of IS NULL / IS NOT NULL or arguments of ISNULL function
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription">
            <summary>
              Looks up a localized string similar to Data types of {0}({1}) and {2}({3}) are incompatible..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription_CompatibleCasting">
            <summary>
              Looks up a localized string similar to Expression is cast from {0} to {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription_DataLossCasting">
            <summary>
              Looks up a localized string similar to Data loss might occur when casting from {0} to {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription_ExplicitConversionReqruied">
            <summary>
              Looks up a localized string similar to Data types of {0} and {1} are not implicitly compatible. You must use the CONVERT or CAST function..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription_IncompatibleCasting">
            <summary>
              Looks up a localized string similar to Data types of {0} and {1} are incompatible..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_ProblemDescription_IncorrectDataType">
            <summary>
              Looks up a localized string similar to The following data type is not valid in this context: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.DataTypeCompatibility_RuleName">
            <summary>
              Looks up a localized string similar to Maintain compatibility between data types..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ExtractDeterministicFunctionCall_ProblemDescription">
            <summary>
              Looks up a localized string similar to Deterministic function call ({0}) might cause an unnecessary table scan..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ExtractDeterministicFunctionCall_RuleName">
            <summary>
              Looks up a localized string similar to Extract deterministic function calls from WHERE predicates..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.Identity_ProblemDescription">
            <summary>
              Looks up a localized string similar to Potential misuse of system function @@IDENTITY..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.Identity_RuleName">
            <summary>
              Looks up a localized string similar to Consider using SCOPE_IDENTITY instead of @@IDENTITY..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.LikePercent_ProblemDescription">
            <summary>
              Looks up a localized string similar to Avoid using patterns that start with &quot;%&quot; in LIKE predicates.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.LikePercent_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using patterns that start with “%” in LIKE predicates..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.MoveColumnToOneside_ProblemDescription">
            <summary>
              Looks up a localized string similar to A column in an expression to be compared in a predicate might cause a table scan and degrade performance..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.MoveColumnToOneside_RuleName">
            <summary>
              Looks up a localized string similar to In the comparison, simplify the expression that includes indexed columns..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.NonIndexedColumnFromInPredicate_ProblemDescription">
            <summary>
              Looks up a localized string similar to A column without an index that is used as an IN predicate test expression might degrade performance..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.NonIndexedColumnFromInPredicate_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using columns that do not have an index as test expressions in IN predicates..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.NullableColumn_ProblemDescription">
            <summary>
              Looks up a localized string similar to Nullable columns can cause final results to be evaluated as NULL for the predicate..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.NullableColumn_RuleName">
            <summary>
              Looks up a localized string similar to Use ISNULL(column, default value) on nullable columns in expressions..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.OldStyleJoinSyntax_ProblemDescription">
            <summary>
              Looks up a localized string similar to Old-style JOIN syntax is used..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.OldStyleJoinSyntax_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using deprecated syntax when you join tables or views..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.PopulateOutputParameters_ProblemDescription">
            <summary>
              Looks up a localized string similar to Output parameter ({0}) is not populated in all code paths..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.PopulateOutputParameters_RuleName">
            <summary>
              Looks up a localized string similar to Specify values for output parameters in all code paths..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ReservedWordsForTypeName_FutureKeyword">
            <summary>
              Looks up a localized string similar to A future keyword.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ReservedWordsForTypeName_Keyword">
            <summary>
              Looks up a localized string similar to A keyword.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ReservedWordsForTypeName_OdbcKeyword">
            <summary>
              Looks up a localized string similar to An ODBC keyword.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ReservedWordsForTypeName_ProblemDescription">
            <summary>
              Looks up a localized string similar to {0}({1}) is used as a type name..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.ReservedWordsForTypeName_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using reserved words for type names..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SelectAsterisk_ProblemDescription">
            <summary>
              Looks up a localized string similar to The shape of the result set produced by a SELECT * statement will change if the underlying table or view structure changes..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SelectAsterisk_RuleName">
            <summary>
              Looks up a localized string similar to Avoid SELECT * in stored procedures, views, and table-valued functions..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SmallVariableLengthTypes_OneElement">
            <summary>
              Looks up a localized string similar to one element.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SmallVariableLengthTypes_ProblemDescription">
            <summary>
              Looks up a localized string similar to Avoid {0} of only {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SmallVariableLengthTypes_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using types of variable length that are size 1 or 2..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SmallVariableLengthTypes_TwoOrMoreElements">
            <summary>
              Looks up a localized string similar to {0} elements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SpecialCharactersInObjectName_ProblemDescription">
            <summary>
              Looks up a localized string similar to Object name({0}) contains special characters..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SpecialCharactersInObjectName_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using special characters in object names..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SpPrefixForStoredProcedures_ProblemDescription">
            <summary>
              Looks up a localized string similar to Stored procedure({0}) includes sp_ prefix in its name..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.Rules.SqlRulesResourceString.SpPrefixForStoredProcedures_RuleName">
            <summary>
              Looks up a localized string similar to Avoid using sp_ as a prefix for stored procedures..
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer">
            <summary>
            A type of <see cref="T:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer"/> that can be used by code analysis 
            rules to examine the internal structure of a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>.
            This analyzer works against the <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>s that represents 
            the exact DDL language describing an object.
            
            This makes it easier to examine the actual script/fragment structure that represents an object.
            </summary>
            <remarks>
            For some data sources such as dacpacs, the backing script and <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>s 
            will be auto-generated by DacFx. Any analyzer that tries to enforce stylistic rules such as
            blocking the use of brackets to escape object names should be disabled when running against 
            those sources - they would be raising issues about the default DacFx style conventions rather
            than the actual code contents of a project.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer"/> that helps analyze an element on behalf of a rule
            </summary>
            <param name="rule">
            <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor"/> defining a rule and its metadata properties.
            This can be used to get the description for a rule and add it to any <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>, among other things
            being created, or query any other metadata information about the rule
            </param>
            <param name="schemaModel">The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> being analyzed</param>
            <param name="element">A specific <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> whose backing <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>
            is to be analyzed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.BeginBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.EndBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.BeginDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.EndDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.BeginDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.EndDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.IdentifiedElement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.IdentifiedElement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.VisitFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor,Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance)">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.VisitFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor,Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.VisitAmbiguousFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor})">
            <summary>
            <see cref="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.VisitAmbiguousFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor})"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.Problems">
            <summary>
            Get all problems identified by this analyzer
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.AnalyzeScriptForSqlRule(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,System.Collections.Generic.List{Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem})">
            <summary>
            Runs rule analysis against a fragment and adds any problems found to the 
            <paramref name="problems"/> list.
            </summary>
            <param name="sqlFragment">A fragment whose contents should be analyzed</param>
            <param name="problems">Problems found by the analyzer are added to this list</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.TryGetModelElementFromPossibilities(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor},Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.Model.TSqlObject@,Microsoft.SqlServer.Dac.Model.ElementDescriptor@,Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance@)">
            <summary>
            Tries to determine the correct model element from a set of possible matching element descriptors.
            </summary>
            <param name="possibilities">Descriptors for  </param>
            <param name="model">The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/></param>
            <param name="element">out <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> that matches the best possibility, or null if lookup failed</param>
            <param name="elementDescriptor">out <see cref="T:Microsoft.SqlServer.Dac.Model.ElementDescriptor"/> for the element that was matched, or
            null if the lookup failed</param>
            <param name="relevance">out <see cref="T:Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance"/> describing the relavance of the 
            <paramref name="elementDescriptor"/> to the <paramref name="element"/></param>
            <returns>true if the lookup succeeded</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.AddProblem(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem)">
            <summary>
            add a problem found by the current analyzer
            </summary>
            <param name="problem"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.ClearProblems">
            <summary>
            clean up all the problems
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.SchemaModel">
            <summary>
            get the SQL schema manager used by the current analyzer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.Rule">
            <summary>
            Get the the rule associated with the current analyzer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.ModelElement">
            <summary>
            Get the element for which the current analyzer works
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.RuleSchemaAnalyzer.DebugWriteLine(System.String)">
            <summary>
            Print a message to debug window in Debug mode
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysis_ModelIsNotScriptBacked">
            <summary>
              Looks up a localized string similar to Static Code Analysis: Some rules may not run as expected because the model being analyzed does not contain scripts representing your schema objects. When analyzing code from a data source such as a Dacpac it is recommended that the source should be loaded as script-backed model to ensure correct rule operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_InvalidElement">
            <summary>
              Looks up a localized string similar to {0} elements are in an error state.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_MultipleProblemsFound">
            <summary>
              Looks up a localized string similar to Static Code Analysis: {0} problems have been detected..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_NoProblemsFound">
            <summary>
              Looks up a localized string similar to Static Code Analysis: No problems have been detected..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_OneProblemFound">
            <summary>
              Looks up a localized string similar to Static Code Analysis: One problem has been detected..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_ProblemFormat">
            <summary>
              Looks up a localized string similar to {0}: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.CodeAnalysisTask_ResultsSavedIn">
            <summary>
              Looks up a localized string similar to The results are saved in {0}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.SqlCodeAnalysisTask_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.ScaResources.SqlCodeAnalysisTask_Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule">
            <summary>
            Base class for all types of analysis rule. An analysis rule analyzes a model / model element and returns a list of
            problems found during analysis. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule.SupportedElementTypes">
            <summary>
            Types of elements checked by this rule. Required if the rule scope is <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Element"/>,
            for <see cref="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Model"/> scoped rules this is not relevant
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SqlAnalysisRule.Analyze(Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext)">
            <summary>
            Performs analysis and returns a list of problems detected
            </summary>
            <param name="ruleExecutionContext">Contains the schema model and model element to analyze</param>
            <returns>The problems detected by the rule in the given element</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlCodeAnalysisRule">
            <summary>
            Base class for SQL static code analysis rules. An analysis rule analyzes a model / model element and returns a list of
            problems found during analysis.
            
            Implementing classes must have a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.ExportCodeAnalysisRuleAttribute"/> defined on the
            class definition to be discovered and used during code analysis. 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext">
            <summary>
            Defines the fields necessary for analysis, including the schema model and 
            model element to analyze.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext.SchemaModel">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> being analyzed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext.ModelElement">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> being analyzed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext.RuleDescriptor">
            <summary>
            Describes the rule being executed, and can be used to access the 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext.ScriptFragment">
            <summary>
            Gets the script fragment which defines the element being analyzed, if this is available. 
            May be null. 
            
            Tries to get the most suitable <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> for use during the rule analysis process.
            If the TSqlObject was originally built from a scripted source then the original source fragment will be returned.
            Otherwise a new AST will be generated from the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleExecutionContext.ModelElement"/>/>.
            This ensures that when reporting <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>s the most accurate source information can be included
            in the error messages. 
            </summary>
            <remarks>
            See <see cref="M:Microsoft.SqlServer.Dac.TSqlModelUtils.TryGetFragmentForAnalysis(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment@)"/> for implementation details
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem">
            <summary>
            Describes a problem found by a rule during analysis. Contains relevant information
            such as the Rule that found the problem, the SqlObject causing the problem, 
            the severity, and the error message to display.
            
            Source position information (source name, start line and column) are initially inferred based on
            the <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.ModelElement"/> and <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Fragment"/> passed into the constructor. Note that if
            a <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Fragment"/> is passed in then the start line/column for that <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>
            will be used (if present), otherwise the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>'s values will be used (if present).
            Note that certain models such as those generated from a dacpac may not have source position
            information.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Rule">
            <summary>
            Description of the rule used to detect the current problem. Does not need to be set by the rule itself
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.RuleId">
            <summary>
            Id of the rule that created this <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.ModelElement">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> causing the current problem
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Fragment">
            <summary>
            <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> causing the problem
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Description">
            <summary>
            Problem description
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.Severity">
            <summary>
            The severity of this problem, can be error, warning.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.ErrorMessageString">
            <summary>
            The string for displaying the error message, based on rule information
            and the problem description
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.SourceName">
            <summary>
            Name of the source this problem was found in. This is determined based on the 
            model element passed into the constructor. May be null if no source information
            was available. For instance models loaded from Dacpac files may not have source
            information available
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.StartLine">
            <summary>
            The line the problem begins at, if known
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.StartColumn">
            <summary>
            The column the problem begins at, if known
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.#ctor(System.String,Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Constructs a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>. Source position information
            (source name, start line and column) is inferred based on the <paramref name="modelElement"/>
            parameter, as long as this information is present in the model.
            </summary>
            <param name="description">Description of the problem</param>
            <param name="modelElement">The element that caused the problem  </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.#ctor(System.String,Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            Constructs a new <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>. Source position information
            (source name, start line and column) is inferred based on the <paramref name="modelElement"/>
            and <paramref name="fragment"/> parameters, as long as this information is present in the model.
            </summary>
            <param name="description">Description of the problem</param>
            <param name="modelElement">The element that caused the problem</param>
            <param name="fragment"><see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> specifying the precise </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.SetSourceInformation(Microsoft.SqlServer.Dac.SourceInformation)">
            <summary>
            Sets source position information (source name, start line and column) for this <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>,
            overriding any position information inferred when the rule was created. 
            </summary>
            <param name="sourceInformation"><see cref="T:Microsoft.SqlServer.Dac.SourceInformation"/> specifying the values to set for the
            <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.SourceName"/>, <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.StartLine"/> and <see cref="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem.StartColumn"/> fields</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity">
            <summary>
            The type of message for reporting problems
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Unknown">
            <summary>
            Unknown severity
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSeverity.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext">
            <summary>
            The context information for suppressing a SCA problem
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext.ModelElement">
            <summary>
            The element for which a problem was discovered
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext.SchemaModel">
            <summary>
            The Schema Model the rule is checking against
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext.Problem">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/> discovered by an analysis rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext.Rule">
            <summary>
            The Rule detecting the problem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblemSuppressionContext.#ctor(Microsoft.SqlServer.Dac.CodeAnalysis.RuleDescriptor,Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem,Microsoft.SqlServer.Dac.Model.TSqlModel)">
            <summary>
            Initialize a new instance of SqlRuleProblemSuppressionContext
            </summary>
            <param name="rule">The Rule detecting the problem</param>
            <param name="problem">The problem</param>
            <param name="schemaModel">The Schema Model being analyzed</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope">
            <summary>
            The scope examined by a static code analysis rule.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Element">
            <summary>
            The rule examines a single element.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleScope.Model">
            <summary>
            The rule examines the entire model.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo">
            <summary>
            Information about a problem being suppressed for a particular source. 
            This information includes the source name and the rule whose problems should be suppressed.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo.#ctor(System.String,Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo"/> for a given source name and rule
            </summary>
            <param name="sourceName">
            Name of the source to be suppressed. This is commonly the path to a file on disk.
            </param>
            <param name="rule">Information about the rule whose problems should be suppressed</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo.SourceName">
            <summary>
            Gets the name of the source to be suppressed. This is commonly the path to a file on disk.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo.Rule">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.RuleConfiguration"/> with information about the rule 
            whose problems should be suppressed
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.CodeAnalysis.SuppressedProblemInfo.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.SqlServer.Dac.Compare.DacExtractTargetUtils.ConvertExtractTargetToInternal(Microsoft.SqlServer.Dac.DacExtractTarget)" -->
        <member name="T:Microsoft.SqlServer.Dac.Compare.DacSchemaComparisonMessage">
            <summary>
            Represents a problem encountered during schema comparison.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.DacSchemaComparisonMessage.Exception">
            <summary>
            Exception associated with the error, or null
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.DacSchemaComparisonMessage.ToString">
            <summary>
            Returns failure information along with the base message
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.ComparisonResultStateDoesNotAllowPublish">
            <summary>
              Looks up a localized string similar to Performing publish is not possible for this comparison result..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.ComparisonResultStateDoesNotAllowScriptGeneration">
            <summary>
              Looks up a localized string similar to Performing script generation is not possible for this comparison result..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.InvalidConnectionString">
            <summary>
              Looks up a localized string similar to The specified connection string is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.InvalidDifferenceNode">
            <summary>
              Looks up a localized string similar to The node selected is not part of the model selected for dependencies lookup..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.InvalidUpdateAction">
            <summary>
              Looks up a localized string similar to Upate action has a type other than CHANGE, ADD, or DELETE..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToAnUnexpectedException">
            <summary>
              Looks up a localized string similar to The operation failed..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToException0">
            <summary>
              Looks up a localized string similar to The operation failed. The error was: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToSourceDrift">
            <summary>
              Looks up a localized string similar to The operation could not continue because the source database was modified after schema comparison was completed..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToSourceModelErrors">
            <summary>
              Looks up a localized string similar to The operation could not continue because the source model contains errors..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToTargetDrift">
            <summary>
              Looks up a localized string similar to The operation could not continue because the target database was modified after schema comparison was completed..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.OperationFailedDueToTargetModelErrors">
            <summary>
              Looks up a localized string similar to The operation could not continue because the target model contains errors..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.Path0DoesntContainValidScmpFile">
            <summary>
              Looks up a localized string similar to The path &apos;{0}&apos; does not contain a valid schema compare file (.scmp file)..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.SchemaComparisonOnlySupportsDacpacAndDatabase">
            <summary>
              Looks up a localized string similar to SchemaComparison only supports database and dacpac endpoint types..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.UnableToDeserializeScmpFile">
            <summary>
              Looks up a localized string similar to The specified file could not be opened as a schema comparison file.  The file might be corrupt or it might refer to a target or source endpoint that is not of type database or dacpac or sqlproj. Only database endpoints, dacpac endpoints and sqlproj endpoints are supported..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareApiResources.UpdateScriptsForDacpacsRequireDbName">
            <summary>
              Looks up a localized string similar to A non-empty database name must be specified in order to generate an update script for a SchemaCompareDacpacEndpoint..
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareDacpacEndpoint">
            <summary>
            Refers to a dacpac file as either a source or target for schema comparison
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareDacpacEndpoint.#ctor(System.String)">
            <summary>
            Constructs a schema compare endpoint that refers to a dacpac file
            </summary>
            <param name="dacpacFilePath">Path to a dacpac file</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareDacpacEndpoint.FilePath">
            <summary>
            The dacpac file path
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint">
            <summary>
            Refers to a database as either a source or target for schema comparison
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint.#ctor(System.String)">
            <summary>
            Constructs a schema compare endpoint that refers to a database
            </summary>
            <param name="connectionString">A connection string to a database instance</param>
            <exception cref="T:System.ArgumentNullException">The supplied connection string is null.</exception>
            <exception cref="T:System.FormatException">Invalid value within the connection string (for example, when a Boolean or numeric value was expected but not supplied).</exception>
            <exception cref="T:System.ArgumentException">The supplied connectionString is not valid.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Constructs a schema compare endpoint that refers to a database
            </summary>
            <param name="connectionString">A connection string to a database instance</param>
            <param name="password"><see cref="T:System.Security.SecureString"/> that supplies the password for the database connection used by this instance.</param>
            <exception cref="T:System.ArgumentNullException">The supplied connection string or password is null.</exception>
            <exception cref="T:System.FormatException">Invalid value within the connection string (for example, when a Boolean or numeric value was expected but not supplied).</exception>
            <exception cref="T:System.ArgumentException">The supplied connectionString is not valid.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint.#ctor(System.String,Microsoft.SqlServer.Dac.IUniversalAuthProvider)">
            <summary>
            Constructs a schema compare endpoint that refers to a database
            </summary>
            <param name="connectionString">A connection string to a database instance</param>
            <param name="authProvider">Provide the up-to-date access token for AAD Universal Login (smartcard, phone, etc) </param>
            <exception cref="T:System.ArgumentNullException">The supplied connection string or auth provider is null.</exception>
            <exception cref="T:System.FormatException">Invalid value within the connection string (for example, when a Boolean or numeric value was expected but not supplied).</exception>
            <exception cref="T:System.ArgumentException">The supplied connectionString is not valid.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint.#ctor(Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory)">
            <summary>
            Constructs a schema compare endpoint that refers to a database
            </summary>
            <param name="connectionFactory">A connection string to a database instance</param>
            <exception cref="T:System.ArgumentNullException">The supplied connection factory is null.</exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareDatabaseEndpoint.DatabaseName">
            <summary>
            The database name
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint">
            <summary>
            Refers to a source or target for schema comparison
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint">
            <summary>
            Refers to a project as either a source or target for schema comparison
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint.#ctor(System.String,System.String[],System.String,Microsoft.SqlServer.Dac.DacExtractTarget)">
            <summary>
            Constructs a schema compare endpoint that refers to a project
            </summary>
            <param name="projectFilePath">path of the .sqlproj file</param>
            <param name="targetScripts">.sql files included in the project</param>
            <param name="dsp">Database schema provider of the project</param>
            <param name="extractTarget">Extract target of the project used when extracting a database to file system, with the default of SchemaObjectType</param>
            <exception cref="T:System.ArgumentNullException">One of the supplied params is null</exception>
            <exception cref="T:System.IO.FileNotFoundException">The .sqlproj file cannot be found</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint.#ctor(System.String,System.String[],System.String,Microsoft.SqlServer.Dac.DacExtractTarget,System.Boolean)">
            <summary>
            Constructs a schema compare endpoint that refers to a project
            </summary>
            <param name="projectFilePath">path of the .sqlproj file</param>
            <param name="targetScripts">.sql files included in the project</param>
            <param name="dsp">Database schema provider of the project</param>
            <param name="extractTarget">Extract target of the project used when extracting a database to file system</param>
            <param name="refreshModelBeforeCompare">Whether the model should be refreshed before comparing</param>
            <exception cref="T:System.ArgumentNullException">One of the supplied params is null</exception>
            <exception cref="T:System.IO.FileNotFoundException">The .sqlproj file cannot be found</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint.#ctor(Microsoft.Data.Tools.Schema.Sql.SchemaCompare.SchemaCompareParticipantForProject)">
            <summary>
            Constructs a schema compare endpoint that refers to a project
            </summary>
            <param name="projectParticipant">project participant</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareProjectEndpoint.ProjectFilePath">
            <summary>
            The .sqlproj full path
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaComparison">
            <summary>
            Class that allows comparing schema between two types of entities: databases and dacpac files
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.#ctor(System.String)">
            <summary>
            SchemaComparison constructor that uses a schema compare file (.scmp file) for
            all comparison settings.  Only dacpac and/or database and/or sql project endpoints may be compared.
            </summary>
            <param name="scmpFilePath">The path to a schema compare file (.scmp file)</param>
            <exception cref="T:System.ArgumentException">If either the source or the target endpoint is not a database or a dacpac file or a sqlproj file.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.#ctor(Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint,Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint)">
            <summary>
            SchemaComparison constructor that takes endpoints that specify the source and target for comparison.
            </summary>
            <param name="source">A <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint"/> that refers to a schema source.</param>
            <param name="target">An <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint"/> that refers to a target.  Comparison will update the target to match the source.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.Source">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint"/> that refers to a schema source.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.Target">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareEndpoint"/> that refers to a target.  Comparison will update the target to match the source.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.ExcludedSourceObjects">
            <summary>
            Elements in the source database model to exclude from comparison.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.ExcludedTargetObjects">
            <summary>
            Elements in the target database model to exclude from comparison.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.Options">
            <summary>
            Options that affect the behavior of package deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparison.DataModel">
            <summary>
            Data Model for the schema compare operation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.Compare">
            <summary>
            Performs schema comparison, populating comparison results.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.Compare(System.Threading.CancellationToken)">
            <summary>
            Performs schema comparison, populating comparison results.
            </summary>
            <param name="cancellationToken">Cancellation token to send cancellation signal to the operation</param>
            <returns>Schema comparison result containing differences</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.SaveToFile(System.String,System.Boolean)">
            <summary>
            Saves the SchemaComparison as an scmp file.
            </summary>
            <param name="filePath"></param>
            <param name="overwrite">When true, any existing file at filePath will be overwritten. If false, save will throw an
            IOException if a file already exists at filePath.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparison.SaveToStream(System.IO.Stream)">
            <summary>
            Saves the SchemaComparison as an scmp file into a stream
            </summary>
            <param name="stream">A stream that supports writing.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId">
            <summary>
            Represents an object by name and type for use in <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaComparison" /> operations.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.#ctor(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Constructs an identifier that refers to an object by type and name.
            </summary>
            <param name="typeClass">The type of an object</param>
            <param name="identifier">The ObjectIdentifier (name) of an object</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.#ctor(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Constructs an identifier that refers to an object by type and name.
            </summary>
            <param name="typeClass">The type of an object</param>
            <param name="identifier">The ObjectIdentifier (name) of an object</param>
            <param name="parentTypeClass">The type of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.</param>
            <param name="parentIdentifier">The name of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.#ctor(System.String,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Constructs an identifier that refers to an object by type and name.
            </summary>
            <param name="typeName">The type name used by schema comparison</param>
            <param name="identifier">The possibly null ObjectIdentifier (name) of an object</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.#ctor(System.String,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,System.String,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Constructs an identifier that refers to an object by type and name.
            </summary>
            <param name="typeName">The type name used by schema comparison</param>
            <param name="identifier">The possibly null ObjectIdentifier (name) of an object</param>
            <param name="parentTypeName">The type name of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.</param>
            <param name="parentIdentifier">The name of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.TypeName">
            <summary>
            The type name used by schema comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.Identifier">
            <summary>
            Specifies the name of an object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.ParentTypeName">
            <summary>
            The type name of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonExcludedObjectId.ParentIdentifier">
            <summary>
            Specifies the name of the parent object. This is used to refer to an unnamed object by reference to its (named) parent.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult">
            <summary>
            Class that provides information about the differences between a source and target database.
            Differences are represented in a tree structure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.IsValid">
            <summary>
            Indicates whether comparison resulted in a valid, usable result
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.IsEqual">
            <summary>
            Indicates whether the source and target endpoints are equal
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.SourceModel">
            <summary>
            The source database model
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.TargetModel">
            <summary>
            The target database model
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.Differences">
            <summary>
            A tree that contains results of schema comparison of source and target endpoints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.DataModel">
            <summary>
            Data Model for the schema compare operation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.Include(Microsoft.SqlServer.Dac.Compare.SchemaDifference)">
            <summary>
            Used to try to include a difference as part of the set of update actions that are scripted or published.
            </summary>
            <param name="node">The tree node to (possibly) modify</param>
            <returns>Returns true if, after completion, the node's state is included</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.Exclude(Microsoft.SqlServer.Dac.Compare.SchemaDifference)">
            <summary>
            Used to try to exclude a difference as part of the set of update actions that are scripted or published.
            </summary>
            <param name="node">The tree node to (possibly) modify</param>
            <returns>Returns true if, after completion, the node's state is not included</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GetErrors">
            <summary>
            Provides an enumeration of errors that prevent successful schema compare operations.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GenerateScript(System.String)">
            <summary>
            Generates a T-SQL update script that makes the target schema consistent with the source schema.
            </summary>
            <param name="databaseName">The name of the target database.</param>
            <returns>SchemaCompareScriptGenerationResult </returns>
            <exception cref="T:System.ArgumentException">If the target is a dacpac and a null or empty databaseName value was provided.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GenerateScript(System.String,System.Threading.CancellationToken)">
            <summary>
            Generates a T-SQL update script that makes the target schema consistent with the source schema.
            </summary>
            <param name="databaseName">The name of the target database.</param>
            <param name="cancellationToken"> cancellation token to cancel this operation</param>
            <returns>SchemaCompareScriptGenerationResult containing script</returns>
            <exception cref="T:System.ArgumentException">If the target is a dacpac and a null or empty databaseName value was provided.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GetExcludeDependencies(Microsoft.SqlServer.Dac.Compare.SchemaDifference)">
            <summary>
            Get Dependencies to cost Exclude operation on a node
            </summary>
            <param name="node">Difference node</param>
            <returns>List of difference that can block the operation</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GetIncludeDependencies(Microsoft.SqlServer.Dac.Compare.SchemaDifference)">
            <summary>
            Get Dependencies to cost Include operation on a node
            </summary>
            <param name="node">Difference node</param>
            <returns>List of difference that can block the operation</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.GetDependencies(Microsoft.SqlServer.Dac.Compare.SchemaDifference,Microsoft.SqlServer.Dac.Compare.SchemaNodeAction)">
            <summary>
            Get Dependencies to cost Exclude or Include operations. 
            for exclude operation this will calculate what depends on the current node
            for include operation this is calculate what the node depends on
            </summary>
            <param name="node">Difference node</param>
            <param name="action">Include or Exclude action in context of which dependencies should be calculated.</param>
            <returns>List of difference that can block the operation</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.PublishChangesToTarget">
            <summary>
            Generates and then executes a T-SQL update script that makes the target schema consistent with the source schema.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.PublishChangesToTarget(System.Threading.CancellationToken)">
            <summary>
            Generates and then executes a T-SQL update script that makes the target schema consistent with the source schema.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.PublishChangesToDatabase">
            <summary>
            Generates and then executes a T-SQL update script that makes the target database schema consistent with the source schema.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.PublishChangesToDatabase(System.Threading.CancellationToken)">
            <summary>
            Generates and then executes a T-SQL update script that makes the target database schema consistent with the source schema.
            </summary>
            <param name="cancellationToken"> cancellation token to cancel this operation</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.PublishChangesToProject(System.String,Microsoft.SqlServer.Dac.DacExtractTarget)">
            <summary>
            Updates the target project schema to be consistent with the source schema
            </summary>
            <param name="projectFolder"> path of the folder of the project to be updated</param>
            <param name="folderStructure"> folder structure of the project to be updated</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.ChangeProjectElement(Microsoft.SqlServer.Dac.Compare.SchemaDifference,Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSchemaModel,Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.HashSet{System.String},System.Collections.Generic.HashSet{System.String},System.String)">
            <summary>
            Updates a schema element and its children in the target project if it is different from the source
            </summary>
            <param name="diff"> schema difference object with change action </param>
            <param name="sourceService">Sql schema model service of the comparison source </param>
            <param name="schemaModel">Schema this changed element originates from</param>
            <param name="targetService">Sql schema model service of the comparison target </param>
            <param name="changedFiles">HashSet of changed files to update as needed</param>
            <param name="addedFiles">HashSet of added files to update as needed</param>
            <param name="deletedFiles">HashSet of deleted files to update as needed</param>
            <param name="projectFolder">path of the project's folder</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.AddProjectElement(System.String,Microsoft.SqlServer.Dac.DacExtractTarget,Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSchemaModel,Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService,Microsoft.SqlServer.Dac.Compare.SchemaDifference,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.HashSet{System.String},System.String)">
            <summary>
            Adds a schema element to a local project if it is present in the source
            </summary>
            <param name="projectFolder">Path of the project's folder </param>
            <param name="folderStructure">Folder structure of the local project </param>
            <param name="sourceObject">TSql object of the comparison source </param>
            <param name="schemaModel">Schema this added element originates from</param>
            <param name="sourceService">Sql schema model service of the comparison source </param>
            <param name="diff">Schema difference object with add action </param>
            <param name="addedFiles">HashSet of added files to update as needed</param>
            <param name="changedFiles">HashSet of changed files to update as needed</param>
            <param name="targetFile">optional path of file to add the element to</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.getAggregatedScript(Microsoft.SqlServer.Dac.Compare.SchemaDifference,Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService,System.Boolean)">
            <summary>
            Gets the aggregated script of an object and its children
            </summary>
            <param name="diff">Schema difference object to get the script of</param>
            <param name="sourceService">Sql schema model service of the comparison source </param>
            <param name="getSourceScript">Whether to get the source or target script</param>
            <returns>aggregated script of the diff object</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.DeleteProjectElement(Microsoft.SqlServer.Dac.Compare.SchemaDifference,Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.HashSet{System.String})">
            <summary>
            Remove a schema element from a local project if it is not present in the source database
            </summary>
            <param name="diff"> schema difference object with add action </param>
            <param name="targetService">Sql schema model service of the comparison target</param>
            <param name="deletedFiles">HashSet of deleted files to update as needed</param>
            <param name="changedFiles">HashSet of changed files to update as needed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Compare.SchemaComparisonResult.BuildTargetPath(System.String,Microsoft.SqlServer.Dac.DacExtractTarget,Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSchemaModel)">
            <summary>
            Build a target path for a new file to be added to a project
            </summary>
            <param name="targetProjectFolder"> Target project folder </param>
            <param name="folderStructure"> folder structure of the local project </param>
            <param name="sourceObject"> diff's source object </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult">
            <summary>
            Result of generating scripts
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult.Script">
            <summary>
            The generated script
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult.MasterScript">
            <summary>
            When needed (e.g. for Azure SQL Database), a separate script to be executed against the master database on the target server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult.Success">
            <summary>
            Indicates whether generating the script was successful.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult.Message">
            <summary>
            Provides context information in the event of an error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaCompareScriptGenerationResult.Exception">
            <summary>
            Provides error information in the event of an exception.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult">
            <summary>
            Result of publishing comparison result to database
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult.Script">
            <summary>
            The generated script
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult.MasterScript">
            <summary>
            When needed (e.g. for Azure SQL Database), a separate script to be executed against the master database on the target server
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult.Success">
            <summary>
            Indicates whether generating the script was successful.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishResult.Errors">
            <summary>
            Any errors encountered while publishing
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult">
            <summary>
            Result of publishing comparison result to database
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult.ChangedFiles">
            <summary>
            Files that were changed by operation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult.AddedFiles">
            <summary>
            Files that were added by operation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult.DeletedFiles">
            <summary>
            Files that were deleted by operation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult.Success">
            <summary>
            Whether the operation was a success
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaComparePublishProjectResult.ErrorMessage">
            <summary>
            Error message if the operation was a failure
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaDifference">
            <summary>
            Represents an object or property difference found during comparison of two database models.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.DifferenceType">
            <summary>
            Represents the type of this <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaDifference"/> node
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.UpdateAction">
            <summary>
            The update action required to make the schema of the target equal to the source schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.Included">
            <summary>
            Indicates whether this node and all of its children will be included during script generation or publish of the comparison result.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.IsExcludable">
            <summary>
            Indicates whether this node can be excluded from script generation and publish of the comparison result.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.Parent">
            <summary>
            The parent difference (of type <see cref="F:Microsoft.SqlServer.Dac.Compare.SchemaDifferenceType.Object"/>), if any, of this difference
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.Children">
            <summary>
            Object or property differences, if any, that relate to this difference.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.SourceObject">
            <summary>
            Object from the source database model
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.TargetObject">
            <summary>
            Object from the target database model
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Compare.SchemaDifference.Name">
            <summary>
            Node name
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaDifferenceType">
            <summary>
            Represents the different possible types of <see cref="T:Microsoft.SqlServer.Dac.Compare.SchemaDifference"/>
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaDifferenceType.Object">
            <summary>
            A model object (for example: column, parameter)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaDifferenceType.Property">
            <summary>
            A property of a model object (for example: Name, Collation)
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaUpdateAction">
            <summary>
            Represents a schema update action
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaUpdateAction.Delete">
            <summary>
            Delete - removing an object from the database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaUpdateAction.Change">
            <summary>
            Change - modifying an object in the database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaUpdateAction.Add">
            <summary>
            Add - adding an object to the database
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Compare.SchemaNodeAction">
            <summary>
            Represents a schema include/exclude action
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaNodeAction.Include">
            <summary>
            Include a node
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Compare.SchemaNodeAction.Exclude">
            <summary>
            Exclude a node
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.DacPackageExtensions">
            <summary>
            Provides extension methods to support manipulation of DacPackage objects.
            These extension methods work on an existing <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.DacPackageExtensions.UpdateModel(Microsoft.SqlServer.Dac.DacPackage,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata)">
            <summary>
            Updates the model in a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/>, replacing the current model with a new one.
            
            Before updating, the model will be validated and if errors are encountered a <see cref="T:Microsoft.SqlServer.Dac.DacServicesException"/> 
            will be thrown. If callers wish to block on warnings as well as errors, they must validate the model by calling
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.Validate"/> and checking if any errors or warnings are included in the messages returned.
            
            Note: only the model is replaced - all other artifacts such as refactor log, pre-deployment script,
            post-deployment script and and contributor artifacts are not altered. If any of these artifacts
            rely on elements that are no longer in the updated model then deployment may fail. It is the 
            responsibility of the caller to ensure that these artifacts are consistent with the new model.
            The <see cref="T:System.IO.Packaging.Package"/> API can be used to update other artifacts such as the refactor log and scripts
            and keep them consistent with the updated model.
            These artifacts are stored as package parts and are identified by their URI. 
            Package parts can be examined using <see cref="M:System.IO.Packaging.Package.GetParts"/>. Please refer to the 
            <see cref="T:System.IO.Packaging.Package"/> API for further information about updating package parts.
            
            </summary>
            <param name="dacPackage"><see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> to be updated</param>
            <param name="newModel"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> representing the model to save into the package.</param>
            <param name="packageMetadata"><see cref="T:Microsoft.SqlServer.Dac.PackageMetadata"/> describing the name, version and description to use
            for the <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/>, or null if the package information should remain the same. </param>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If the <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> contains data.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If there are any errors saving the model to the package,
            including errors validating the model.
            </exception>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If the <paramref name="dacPackage"/> was not loaded with <see cref="F:System.IO.FileAccess.ReadWrite"/>.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="dacPackage"/> or <paramref name="newModel"/> parameters are null.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.DacPackageExtensions.BuildPackage(System.String,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata)">
            <summary>
            Creates a package with the specified <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> and saves it to the specified location.
            </summary>
            <param name="packageFilePath">Path to the package file.</param>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> representing the model to save into the package.</param>
            <param name="packageMetadata">Metadata information that describes the package.</param>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If there are any errors during package serialization, including errors validating the model.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="packageFilePath"/> or <paramref name="model"/> parameters are null.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.DacPackageExtensions.BuildPackage(System.String,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata,Microsoft.SqlServer.Dac.PackageOptions)">
            <summary>
            Creates a package with the specified <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> and saves it to the specified location.
            In addition to the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>, other artifacts such as refactor log and deployment contributors can be specified in <paramref name="packageOptions"/>.
            </summary>
            <param name="packageFilePath">Path to the package file.</param>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> representing the model to save into the package.</param>
            <param name="packageMetadata">Metadata information that describes the package.</param>
            <param name="packageOptions"><see cref="T:Microsoft.SqlServer.Dac.PackageOptions"/> defining advanced options and additional artifacts.</param>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If there are any errors during package serialization, including errors validating the model.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="packageFilePath"/> or <paramref name="model"/> parameters are null.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.DacPackageExtensions.BuildPackage(System.IO.Stream,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata)">
            <summary>
            Creates a package with the specified <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> and saves it to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> to which the package content will be serialized.</param>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> representing the model to save into the package.</param>
            <param name="packageMetadata">Metadata information that describes the package.</param>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If there are any errors during package serialization, including errors validating the model.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="stream"/> or <paramref name="model"/> parameters are null.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.DacPackageExtensions.BuildPackage(System.IO.Stream,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata,Microsoft.SqlServer.Dac.PackageOptions)">
            <summary>
            Creates a package with the specified <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> and saves it to the specified <see cref="T:System.IO.Stream"/>.
            In addition to the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>, other artifacts such as refactor log and deployment contributors can be specified in <paramref name="packageOptions"/>.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> to which the package content will be serialized.</param>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> representing the model to save into the package.</param>
            <param name="packageMetadata">Metadata information that describes the package.</param>
            <param name="packageOptions"><see cref="T:Microsoft.SqlServer.Dac.PackageOptions"/> defining advanced options and additional artifacts.</param>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">If there are any errors during package serialization, including errors validating the model.</exception>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="stream"/> or <paramref name="model"/> parameters are null.</exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.BuildContributor">
            <summary>
            Derivatives of the BuildContributor extension are executed during a 
            project build after the project's model has been constructed and verified.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.BuildContributor.OnExecute(Microsoft.SqlServer.Dac.Deployment.BuildContributorContext,System.Collections.Generic.IList{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError})">
            <summary>
            Called after the project's model has been completely built giving the build
            contributor an opportunity to examine the model and possible output
            additional files.
            </summary>
            <param name="context"><see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext"/> object</param>
            <param name="messages">Any messages to be published as part of the build process can be added to this List. 
            May relate to errors or can also be informational</param>
            <exception cref="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException">This type of exception should be thrown if the build cannot continue.</exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext">
            <summary>
            Provides the context for the build process that is used by <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributor"/> objects
            during project build. See documentation for the <see cref="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.Arguments"/> and <see cref="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.ExtensionFiles"/>
            properties for information on how to specify these inside a project file.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.Build.Framework.ITaskItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext"/> class.
            </summary>
            <param name="buildProperties">A <see cref="T:System.Collections.Generic.Dictionary`2"/> of named property values. Canno be null</param>
            <param name="arguments">A <see cref="T:System.Collections.Generic.Dictionary`2"/> of command-line arguments and values. Cannot be null.</param>
            <param name="buildModel">A reference to the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> of the project. Cannot be null.</param>
            <param name="extensionFiles">An array of <see cref="T:Microsoft.Build.Framework.ITaskItem"/> objects.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.BuildProperties">
            <summary>
            Gets a dictionary of named properties and their values
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.Arguments">
            <summary>
            Gets a dictionary of command-line arguments and their values.
            When building in SSDT, arguments are available when found in a .sqlproj file or a referenced .targets file. 
            For instance to add a "RunMyContributor" argument with a value of 
            "true", the following would be added:
            
            &lt;PropertyGroup&gt;
                &lt;ContributorArguments Condition="'$(Configuration)' == 'Debug''"&gt;
                    $(ContributorArguments);RunMyContributor=True;
                &lt;/ContributorArguments&gt;
            &lt;/PropertyGroup&gt;
            
            
            In this case the argument is only added for Debug configuration.
            Using the above configuration it is possible to collect information from the MSBuild environment
            and pass it to the contributor. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.Model">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> of the project
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.BuildContributorContext.ExtensionFiles">
            <summary>
            Gets an array of <see cref="T:Microsoft.Build.Framework.ITaskItem"/> representing 
            Files from the project system which influence the build contributors.
            
            Input configuration files can be defined in a .sqlproj file as part of the MSBuild process. 
            Inside a .sqproj file, Build Configuration files are specified as follows:
            
            &lt;ItemGroup&gt;
              &lt;BuildExtensionConfiguration Include="MyContributorName.MyFileName1.sql" /&gt;
              &lt;BuildExtensionConfiguration Include="MyContributorName.MyFileName2.sql" /&gt;
            &lt;/ItemGroup&gt;
            
            
            Note that configuration files are accessible to all contributors. Contributors may employ a
            file naming pattern to identify which input files related to that contributor.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException">
            <summary>
            A BuildFailedException should be thrown to indicate that the build cannot continue.
            This will stop the build process.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.BuildFailedException.#ctor(System.String)">
            <summary>
            Constructs a <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException"/> with a string exception message
            </summary>
            <param name="message">string describing the cause of the failure</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.BuildFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException"/> with a string exception message
            and an inner <see cref="T:System.Exception"/> providing more information about the failure
            </summary>
            <param name="message">string describing the cause of the failure</param>
            <param name="innerException"><see cref="T:System.Exception"/> that is the root cause of the failure</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration">
            <summary>
            Instances of this class are created by Build and Deployment contributors during design-time to 
            initialize arguments that are passed to them at runtime. 
            
            In SSDT, these arguments must be specified using a ContributorArguments property
            in a .sqlproj file or a referenced .targets file. For instance to add a "RunMyContributor" argument with a value of 
            "true", the following would be added:
            &lt;PropertyGroup&gt;
                &lt;ContributorArguments Condition="'$(Configuration)' == 'Debug''"&gt;
                    $(ContributorArguments);RunMyContributor=True;
                &lt;/ContributorArguments&gt;
            &lt;PropertyGroup&gt;
            
            
            In this case the argument is only added for Debug configuration.
            Using the above configuration it is possible to collect information from the MSBuild environment
            and pass it to the contributor. 
            
            It is also possible to specify these when creating a package by using <see cref="M:Microsoft.SqlServer.Dac.DacPackageExtensions.BuildPackage(System.String,Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.Dac.PackageMetadata,Microsoft.SqlServer.Dac.PackageOptions)"/> 
            and specifying <see cref="T:Microsoft.SqlServer.Dac.PackageOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration"/> class.
            </summary>
            <param name="name">The name of the argument.</param>
            <param name="value">The value of the argument.</param>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="name"/> or <paramref name="value"/> parameters are null</exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration.Name">
            <summary>
            Gets or sets the name of the argument.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ContributorArgumentConfiguration.Value">
            <summary>
            Gets or sets the value of the argument expressed as a string.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor">
            <summary>
            The base class for deployment contributors.  Subclasses of this class
            participate in a deployment by modifying a deployment plan or by executing
            the plan
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.Dispose">
            <summary>
            Inherited from <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.Canceled">
            <summary>
            Gets a value that indicates whether the contributor was canceled
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.CancellationToken">
            <summary>
            The <see cref="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.CancellationToken"/> used to indicate whether contributor execution should be canceled
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.PublishMessage(Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError)">
            <summary>
            Publishes a message to the deployment engine. The deployment engine will process and report the message to consumers.
            </summary>
            <param name="message">A <see cref="T:Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError"/> that contains the message to publish</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.OnEstablishDeploymentConfiguration(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup)">
            <summary>
            Called by the build process in DacFx to give your code an opportunity to modify deployment configuration.
            </summary>
            <param name="setup">The current <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup"/> object.</param>
            <exception cref="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException">If there is a critical error that should stop the build process
            from continuing, implementing contributors may throw a <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildFailedException"/>.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.OnApplyDeploymentConfiguration(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext,System.Collections.Generic.ICollection{Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream})">
            <summary>
            Called by the deployment process in DacFx to give your code an opportunity to collect configuration information from the provided files.
            At the end of the method all streams will be disposed. 
            Contributors that need to obtain data from the streams must read and cache the data during this method -
            attempts to read from the stream during a later method such as the <see cref="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor.OnExecute(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext)"/> method
            will fail.
            </summary>
            <param name="context">A <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext"/> object</param>
            <param name="configurationStreams">An <see cref="T:System.Collections.Generic.ICollection`1"/> of <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream"/> objects</param>
            <exception cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException">If there is a critical error that should stop the deployment process
            from continuing, implementing contributors may throw a <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/>.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.Cancel">
            <summary>
            Cancels execution of the contributor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup">
            <summary>
            Represents the current setup for <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor"/> objects. 
            The setup object can be used by deployment contributors during build operations to cause files 
            to be copied as outputs that are stored in the generated dacpac, or to create new files 
            that are stored in the dacpac. See the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream"/> API
            for more information about specifying inputs.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup.EnumerateInputs">
            <summary>
            Returns an enumerable collection of <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream"/> objects.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup.Properties">
            <summary>
            Gets a dictionary that contains the current properties and settings.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup.SqlCmdVariables">
            <summary>
            Gets the SqlCmd variables defined
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup.OpenNewOutput(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Returns a new output configuration file stream that is open for read and write.
            </summary>
            <param name="fileName">A partial file name.</param>
            <param name="metadata">The metadata to be saved to the file.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup.CopyInputToOutput(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream)">
            <summary>
            Copies an input stream's contents into an output stream that is stored inside a package
            </summary>
            <param name="stream"><see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream"/> to be copied</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream">
            <summary>
            Represents a streamable version of a configuration file that is used by DacFx in the deployment and build processes. 
            These streams enable deployment extensions to enhance and extend the design and deployment experience.
            
            Input configuration files can be defined in a .sqlproj file as part of the MSBuild process.
            The files are treated as streams, and will be passed to contributors
            via the <see cref="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.EstablishDeploymentConfiguration(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationSetup)"/> method, where they can
            be copied as outputs that are stored in the generated dacpac. 
            
            These streams will then be made available 
            in the <see cref="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.ApplyDeploymentConfiguration(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext,System.Collections.Generic.ICollection{Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream})"/>, where they can be
            consumed for configuration and data during deployment. At the end of the 
            <see cref="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor.ApplyDeploymentConfiguration(Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext,System.Collections.Generic.ICollection{Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream})"/> method all streams will be disposed. 
            Contributors that need to obtain data from the streams must read and cache the data during this method -
            attempts to read from the stream during the <see cref="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor.OnExecute(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext)"/> method
            will fail.
            
            Inside a .sqproj file, Deployment Configuration files are specified as follows:
            &lt;ItemGroup&gt;
              &lt;DeploymentExtensionConfiguration Include="MyContributorName.MyFileName1.sql" /&gt;
              &lt;DeploymentExtensionConfiguration Include="MyContributorName.MyFileName2.sql" /&gt;
            &lt;/ItemGroup&gt;
            
            Note that configuration streams are accessible to all contributors. Contributors may employ a
            file naming pattern to identify which input files related to that contributor.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream"/>
            </summary>
            <param name="filePath">A file path for which a stream can be created</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream.Filename">
            <summary>
            The filename used to represent this stream
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorConfigurationStream.GetStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/>
            </summary>
            <returns><see cref="T:System.IO.Stream"/></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext">
            <summary>
            Provides a context for <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributor"/> objects in DacFx
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Arguments">
            <summary>
            Gets or sets a dictionary of named arguments and their values.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Options">
            <summary>
            Gets the options being used for this deployment
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.IsAzureSource">
            <summary>
            Does the <see cref="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Source"/> model a SQL Azure database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.IsAzureTarget">
            <summary>
            Does the <see cref="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Target"/> model a SQL Azure database.
            
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Source">
            <summary>
            Gets the Source <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext.Target">
            <summary>
            Gets the Target <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorInformation">
            <summary>
            Information that identifies a deployment contributor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorInformation.ExtensionId">
            <summary>
            Id of the extension that implements the 
            deployment contributor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorInformation.Version">
            <summary>
            Version of the deployment contributor extension (optional).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException">
            <summary>
            Represents an exception that occurs during deployment.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/> class
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/> class
            </summary>
            <param name="message">Indicates the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/> class 
            </summary>
            <param name="message">Indicates the reason for the exception.</param>
            <param name="innerException">Indicates a nested exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan">
            <summary>
            Represents the plan that is generated for Deployment. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.StepCount">
            <summary>
            Total number of steps in the plan
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.Head">
            <summary>
            Gets the first deployment step
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.Tail">
            <summary>
            Gets the last deployment step
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.AddFirst(Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            
            </summary>
            <param name="newStep"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.AddBefore(Microsoft.SqlServer.Dac.Deployment.DeploymentStep,Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="newStep"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.AddAfter(Microsoft.SqlServer.Dac.Deployment.DeploymentStep,Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="newStep"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.AddLast(Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            
            </summary>
            <param name="newStep"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.AddLast(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Deployment.DeploymentStep})">
            <summary>
            
            </summary>
            <param name="steps"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlan.Remove(Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            
            </summary>
            <param name="step"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor">
            <summary>
            Represents a contributor to the deployment process
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor.OnExecute(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext)">
            <summary>
            Called by the deployment engine to allow custom contributors to execute their unique tasks
            </summary>
            <param name="context">A <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentContributorContext"/> object</param>
            <exception cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException">If there is a critical error the should stop the deployment process
            from continuing, implementing contributors may throw a <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/>.</exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext">
            <summary>
            Provides a context for <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributor"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext.ComparisonResult">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext.PlanHandle">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext.DeploymentMasterPath">
            <summary>
            Set if a deployment script is also being generated against an Azure target
            (which requires that the portion executed against master be its own script)
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanContributorContext.DeploymentScriptPath">
            <summary>
            Set if a deployment script is also being generated.  This
            enables other deployment contributors to correlate error messages back to a script/file
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanExecutor">
            <summary>
            This class represents a deployment constributor that executes the deployment plan.  An
            example of a constributor would be one who executes deployment steps to create a 
            report about actions performed during a deployment
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle.Head">
            <summary>
            Returns the head on the plan or null if the plan is empty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle.Tail">
            <summary>
            Returns the tail of the plan or null if the plan is empty
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier">
            <summary>
            Represents a constributor that can modify a deployment plan
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier.AddBefore(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle,Microsoft.SqlServer.Dac.Deployment.DeploymentStep,Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            Provides a way for subclasses to modify the plan by adding a
            step after the specified step
            </summary>
            <param name="handle">The <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle"/> for the plan</param>
            <param name="step">Identifies the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep"/> before which the <paramref name="newStep"/> will be added.</param>
            <param name="newStep">The <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep"/> to be added</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier.AddAfter(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle,Microsoft.SqlServer.Dac.Deployment.DeploymentStep,Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            Provides a way to modify the existing plan by adding a step after the existing step
            </summary>
            <param name="handle">The <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle"/> for the plan</param>
            <param name="step">Identifies the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep"/> after which the <paramref name="newStep"/> will be added.</param>
            <param name="newStep">The <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep"/> to be added</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier.Remove(Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle,Microsoft.SqlServer.Dac.Deployment.DeploymentStep)">
            <summary>
            Provides a way to remove the specified step from the plan
            </summary>
            <param name="handle">The <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanHandle"/> for the plan</param>
            <param name="step">Identifies the <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep"/> to be removed.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStep">
            <summary>
            Represents a step in a deployment plan.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentStep.Next">
            <summary>
            Gets the next step in the container, which is a <see cref="T:System.Collections.Generic.LinkedListNode`1"/> of type DeploymentStep.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentStep.Previous">
            <summary>
            Gets the previous step in the container, which is a <see cref="T:System.Collections.Generic.LinkedListNode`1"/> of type DeploymentStep.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStep.ToString">
            <summary>
            Returns a string that describes this step.  The base returns the
            type of the step
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStep.GenerateTSQL">
            <summary>
            Returns a list of strings that represent a set of TSQL script batches to be applied
            during deployment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStep.GenerateBatchScript(System.IO.TextWriter)">
            <summary>
            Helper that writes the set of batch scripts to the provided writer
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal">
            <summary>
            Base class for implementing deployment step types.
            It should not be used for writing extensions. Extensions
            must directly implement DeploymentStep
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal.#ctor">
            <summary>
            Internal custructor as class is meant for internal purpose
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal.#ctor(Microsoft.Data.Tools.Schema.Sql.Deployment.DeploymentStep)">
            <summary>
            Internal custructor as class is meant for internal purpose
            </summary>
            <param name="internalStep"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal.GenerateTSQL">
            <summary>
            Returns a list of strings that represent a set of TSQL script batches to be applied
            during deployment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentStepInternal.ToString">
            <summary>
            Returns a string that describes this step.  The base returns the
            type of the step
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.AlterElementStep">
            <summary>
            A step in a deployment plan that represent an alter to an element. 
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.AlterElementStep.SourceElement">
            <summary>
            Get the source element in the alter step
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.AlterElementStep.TargetElement">
            <summary>
            Gets the target element in the alter step
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.BeginPostDeploymentScriptStep">
            <summary>
            A step in the deployment plan that represents script deployment at the beginning the post-deployment.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.BeginPreDeploymentScriptStep">
            <summary>
             A step in the deployment plan that represents script deployment at the beginning of pre-deployment.
             This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.CreateElementStep">
            <summary>
            The step in a deployment plan that represents a create of an element.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.CreateElementStep.SourceElement">
            <summary>
            Get the source element of the create element step
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacBulkCopyStep">
            <summary>
            The DacBulkCopyStep uploads / streams data from the dac package to the target db.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacDeleteFromTablesStep">
            <summary>
            The step in deployment plan that represents delete from table.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacDropSystemVersioningStep">
            <summary>
            The step in deployment plan that represents drop of a temporal system-versioning clause
            and system-time PERIOD.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacRestoreSystemVersioningStep">
            <summary>
            The step in deployment plan that represents creation of a temporal system-versioning clause
            and system-time PERIOD on the appropriate temporal columns.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlAddSystemVersioningStep">
            <summary>
            The step in deployment plan that represents creation of a temporal system-versioning clause
            and system-time PERIOD on the appropriate temporal columns.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDropSystemVersioningStep">
            <summary>
            The step in deployment plan that represents drop of a temporal system-versioning clause
            and system-time PERIOD.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacDropTemporalSchemaBoundElementStep">
            <summary>
            The step in deployment plan that represents drop of an temporal table schema-bound objects
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacDisableForeignKeysStep">
            <summary>
            The step in deployment plan that represents disabling foreign keys.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacRestoreConstraintsStep">
            <summary>
            The step in deployment plan that represents restoring constraints.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DacSaveConstraintsStep">
            <summary>
            The step in deployment plan that represents saving constraints.
            This class is for read-only purpose.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep">
            <summary>
            Base class for script based deployment steps.
            Represents a deployment step that consists of an Abstract Syntax Tree (AST) and reference to a script Domain Object Model (DOM) generator.
            This class is for read-only purpose.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep.Message">
            <summary>
            Gets an optional message describing the step
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep.IsMessageInFirstBatch">
            <summary>
            Returns true if the step's message will be the first batch when calling
            GenerateTSql()
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep.Script">
            <summary>
            Gets the script for this step.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptDomStep.ScriptGenerator">
            <summary>
            Gets the ScriptGenerator for this step
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep">
            <summary>
            The step in deployment plan that represents deploying scripts.
            This class can be instantiated and used by extensions.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep"/>
            </summary>
            <param name="text">script to deploy</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentScriptStep"/> with multiple TSQL scripts
            </summary>
            <param name="batches"><see cref="T:System.Collections.Generic.IEnumerable`1"/> of strings representing
            TSQL scripts</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.DropElementStep">
            <summary>
            A step in deployment step that represents dropping a sql object.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.DropElementStep.TargetElement">
            <summary>
            Gets the target element
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.EmptyStep">
            <summary>
            Represents an empty step in deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.EndPostDeploymentScriptStep">
            <summary>
            A step in the deployment plan that represents script deployment at the end of post-deployment.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.EndPreDeploymentScriptStep">
            <summary>
            A step in the deployment plan that represents script deployment at the end of pre-deployment.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlBeginAltersStep">
            <summary>
            Instances of this class mark the portion of the deployment plan where
            ALTERs (and CREATEs) are performed.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlBeginDropsStep">
            <summary>
            An instance of this class marks the beginning of the "drops" portion of the
            deployment plan.  Drops occur in the plan before Alters.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlBeginPreservationStep">
            <summary>
            This class marks the start (in a deployment plan) of the preservation of intent section of the
            plan.  These operations are ones taken to affect refactoring changes.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlBeginTransactionStep">
            <summary>
            This step marks the beginning of the transactional section of a deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlChangeDatabaseStep">
            <summary>
            The step in deployment step that represents change database.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlChangeDatabaseStep.DatabaseName">
            <summary>
            Gets the database name
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlCreateDatabaseStep">
            <summary>
            The step in deployment that represents database creation.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDropDatabaseStep">
            <summary>
            The step in deployment that represents database drop.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlCreateTrackingTableStep">
            <summary>
            The step in deployment that represents the creation of the tracking table (__ScriptTrackingLogs).
            This table is used to improve the reliability of deployment to SQL Azure.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDropTrackingTableStep">
            <summary>
            The step in deployment that represents drop of the tracking table (__ScriptTrackingLogs).
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlEndAltersStep">
            <summary>
            Instances of this class mark the portion of the deployment plan where
            ALTERs (and CREATEs) are completed.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlEndDropsStep">
            <summary>
            An instance of this class marks the end of the "drops" portion of the
            deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlEndPreservationStep">
            <summary>
            This class marks the end (in a deployment plan) of the preservation of intent section of the
            plan.  These operations are ones taken to affect refactoring changes.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlEndTransactionStep">
            <summary>
            This step marks the end of the transactional section of a deployment script.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlFinalizeDatabaseAccessStep">
            <summary>
            This step is represents a step in the SQL deployment plan that finalizes the access settings to the database.  These
            settings include Read-Only or Read-Write access, restricted, single user or multi-user, and online versus offline.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlMoveSchemaStep">
            <summary>
            In the deployment plan, instances of this step represent moving the element from a previous schema to
            the new one.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlMoveSchemaStep.MovedElement">
            <summary>
            Gets the moved element
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlMoveSchemaStep.NewSchema">
            <summary>
            Gets the new schema
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlMoveSchemaStep.PreviousName">
            <summary>
            Gets the previous name
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlPrintStep">
            <summary>
            A type of step in a Sql deployment plan that signifies a SQL "print" statement.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlRenameStep">
            <summary>
            Represents a step in the deployment plan that renames a element.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlRenameStep.RenamedElement">
            <summary>
            Gets the renamed object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlRenameStep.OldName">
            <summary>
            Gets the old name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlRenameStep.NewName">
            <summary>
            Gets the new name of the object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlTableMigrationStep">
            <summary>
            Represents a data motion step in a sql deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlTableMigrationStep.SourceTable">
            <summary>
            Gets the source table object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlTableMigrationStep.TargetTable">
            <summary>
            Gets the target table object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionMigrationStep">
            <summary>
            Represents a data motion step for column encryption in a sql deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionMigrationStep.SourceTable">
            <summary>
            Gets the source table object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionMigrationStep.TargetTable">
            <summary>
            Gets the target table object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlEnableDatabaseChangeTrackingStep">
            <summary>
            Represents a step which will enable change tracking on the database
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDisableDatabaseChangeTrackingStep">
            <summary>
            Represents a step which will disable change tracking on the database
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionSPRefreshStep">
            <summary>
            Represents a step which will execute sp_refresh stored procedures
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionRenameToOriginalStep">
            <summary>
            Represents a rename back to original step for column encryption in a sql deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionRenameToOriginalStep.SourceTable">
            <summary>
            Gets the source table object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlColumnEncryptionRenameToOriginalStep.TargetTable">
            <summary>
            Gets the target table object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlCreateTableAsSelectStep">
            <summary>
            Represents a CTAS step in a sql deployment plan.
            This class is for read-only purpose and cannot be instantiated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlCreateTableAsSelectStep.SourceTable">
            <summary>
            Gets the source table object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlCreateTableAsSelectStep.TargetTable">
            <summary>
            Gets the target table object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute">
            <summary>
            Concrete classes implementing <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributor"/> must add the 
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute"/> attribute to their class definition. This ensures 
            they will be detected and available for use during build.
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributor"/>s require a unique ID which can be based on their fully qualified type name, or explicitly
            passed as a string
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute"/>
            </summary>
            <param name="id">Unique Id used to identify the export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute.#ctor(System.Type,System.String)">
            <summary>
            Intializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportBuildContributorAttribute"/>
            </summary>
            <param name="implementingType">The Concrete type that extends <see cref="T:Microsoft.SqlServer.Dac.Deployment.BuildContributor"/> - this is used
            to generate the unique Id for this Export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute">
            <summary>
            Concrete classes implementing <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanExecutor"/> must add the 
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute"/> attribute to their class definition. This ensures 
            they will be detected and available for use during SQL Deployment.
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanExecutor"/>s require a unique ID which can be based on their fully qualified type name, or explicitly
            passed as a string
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute"/>
            </summary>
            <param name="id">Unique Id used to identify the export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute.#ctor(System.Type,System.String)">
            <summary>
            Intializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanExecutorAttribute"/>
            </summary>
            <param name="implementingType">The Concrete type that extends <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanExecutor"/> - this is used
            to generate the unique Id for this Export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute">
            <summary>
            Concrete classes implementing <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier"/> must add the 
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute"/> attribute to their class definition. This ensures 
            they will be detected and available for use during SQL Deployment.
            <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier"/>s require a unique ID which can be based on their fully qualified type name, or explicitly
            passed as a string
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute"/>
            </summary>
            <param name="id">Unique Id used to identify the export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute.#ctor(System.Type,System.String)">
            <summary>
            Intializes a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ExportDeploymentPlanModifierAttribute"/>
            </summary>
            <param name="implementingType">The Concrete type that extends <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier"/> - this is used
            to generate the unique Id for this <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentPlanModifier"/> Export </param>
            <param name="version">Optional string defining the version number of the extension. 
            Must be a valid version string </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1.CreateLoader">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1"/> that uses standard extension lookup 
            properties and returns this to the caller
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1.#ctor(Microsoft.SqlServer.Dac.Extensibility.CompositionProperties)">
            <summary>
            Initializes the <see cref="T:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1"/> 
            </summary>
            <param name="compositionProperties"><see cref="T:Microsoft.SqlServer.Dac.Extensibility.CompositionProperties"/> defining how contributors should be loaded</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1.GetMatchingExtensions(System.Collections.Generic.IEnumerable{Microsoft.Data.Tools.Schema.Sql.Deployment.ContributorInfo},System.Collections.Generic.List{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Gets all matching extensions for a set of required contributors.
            </summary>
            <param name="requiredContributors"><see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying contributos to load and any version matching requirements</param>
            <param name="typeLoadErrors">Output <see cref="T:System.Collections.Generic.List`1"/> containing all errors that occurred during load. This will include general load errors
            for all contributors on the machine, plus load errors relating to version mismatch between requested contributor version
            and the available contributors on the machine</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1.GetAllExtensions(System.Collections.Generic.List{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Gets all extensions matching the Contributor type.
            </summary>
            <param name="typeLoadErrors">Output <see cref="T:System.Collections.Generic.List`1"/> containing all errors that occurred during load. This will include general load errors
            for all contributors on the machine, plus load errors relating to version mismatch between requested contributor version
            and the available contributors on the machine</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.ContributorLoader`1.LoadSupportedContributorIds(System.Collections.Generic.IEnumerable{Microsoft.Data.Tools.Schema.Sql.Deployment.ContributorInfo},System.Collections.Generic.Dictionary{System.String,`0}@,System.Collections.Generic.List{Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError}@)">
            <summary>
            Finds and loads all contributors that match the expected <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.ContributorInfo"/> data
            </summary>
            <param name="expectedContributors">Input enumerable of <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.ContributorInfo"/>s defining the contributors being queried</param>
            <param name="loadedContributors"><see cref="T:System.Collections.Generic.Dictionary`2"/> mapping contributor ID to an instance of the contributor</param>
            <param name="loadErrors">Any <see cref="T:Microsoft.SqlServer.Dac.Extensibility.ExtensibilityError"/>s encountered while loading the contributors</param>
            <returns>List of <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.ContributorInfo"/>s describing the contributors that matched the query</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentContributorHelper`1">
            <summary>
            Helper class that converts and relays calls from Internal <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.DeploymentContributor"/> API
            to public external API
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentContributorHelper`1.ProcessContributorMethodCall(System.String,`0,System.Action{`0})">
            <summary>
            Calls a method on a contributor, handling message passing requirements. 
            Rethrows public <see cref="T:Microsoft.SqlServer.Dac.Deployment.DeploymentFailedException"/>s as internal
            <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.DeploymentFailedException"/>s.
            </summary>
            <param name="contributorId">Id of the contributor to be called </param>
            <param name="contributor">contributor to be called</param>
            <param name="contributorMethodCall">Action that </param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanContributorHelper`1">
            <summary>
            Helper class that converts and relays calls from Internal <see cref="T:Microsoft.Data.Tools.Schema.Sql.Deployment.DeploymentPlanContributor"/> API
            to public external API
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanExecutor">
            <summary>
            A shim between the public API and the internal DacFx API. Responsible for loading all public DeploymentPlanExecutor contributors, and 
            relaying the calls from the internal API to the public API
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanModifier">
            <summary>
            A shim between the public API and the internal DacFx API. Responsible for loading all public DeploymentPlanModifier contributors, and 
            relaying the calls from the internal API to the public API
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanRelay">
            <summary>
            Acts as a relay between the internal and public DeploymentPlans. Converts
            Internal DeploymentStep objects to Public objects, and vice versa. 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.Internal.InternalDeploymentPlanRelay.InternalStep">
            <summary>
            Wraps a step from the public API, ensuring it can be used by the internal API
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinitionService">
            <summary>
            Service that provides data about a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinition"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinition">
            <summary>
            Contains change details for a TSqlObject.
            Including changed properties, added/dropped/ordinal changed relationship entries,
            added/dropped/changed/ordinal changed composing children and 
            added/dropped/changed/ordinal changed hierarchical children.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinition.#ctor(Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinitionService)">
            <summary>
            Constructs a ModelComparisonChangeDefinition that uses a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinitionService"/>
            to retrive definition data
            </summary>
            <param name="definitionService"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonChangeDefinition.TargetObject">
            <summary>
            Gets the target object of the change definition
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService">
            <summary>
            Service providing data required for a ModelComparisonResult
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.IsEqual">
            <summary>
            If compared elements are equal
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsEqual">
            <summary>
            List of elements that have no changes
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementGroupsEqual">
            <summary>
            List of element groups that are equal
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsToAdd">
            <summary>
            List of elements exists in source, does not exist in target
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsToDrop">
            <summary>
            List of elements exists in target, does not exist in source
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsChanged">
            <summary>
            List of elements are changed.
            The result will keyed by elements in source, and it will have
            what are the changes together with that changed element.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsPropertyChanged">
            <summary>
            List of elements changed because of properties are changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsRelationshipEntryChanged">
            <summary>
            List of elements changed because of relationship entries are added or dropped
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsComposingChildrenChanged">
            <summary>
            List of elements changed because of composed children are changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService.ElementsHierarchicalChildrenChanged">
            <summary>
            List of elements changed because of hierarchical dhildren are changed.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult">
            <summary>
            SchemaModel compare result.
            Contains same elements list, elements needed to add to target list,
            elements needed to drop in target list, and changed elements list.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.#ctor(Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService)">
            <summary>
            Constructs a ModelComparisonResult using a <see cref="T:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResultService"/>
            to obtain the result data
            </summary>
            <param name="resultService"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.IsEqual">
            <summary>
            If compared elements are equal
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsEqual">
            <summary>
            List of elements that have no changes
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementGroupsEqual">
            <summary>
            List of element groups that are equal
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsToAdd">
            <summary>
            List of elements exists in source, does not exist in target
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsToDrop">
            <summary>
            List of elements exists in target, does not exist in source
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsChanged">
            <summary>
            List of elements are changed.
            The result will keyed by elements in source, and it will have
            what are the changes together with that changed element.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsPropertyChanged">
            <summary>
            List of elements changed because of properties are changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsRelationshipEntryChanged">
            <summary>
            List of elements changed because of relationship entries are added or dropped
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsComposingChildrenChanged">
            <summary>
            List of elements changed because of composed children are changed.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.ModelComparisonResult.ElementsHierarchicalChildrenChanged">
            <summary>
            List of elements changed because of hierarchical dhildren are changed.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SchemaDeploymentResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SchemaDeploymentResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SchemaDeploymentResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SchemaDeploymentResources.DeployPlan_StepDoesNotHaveInternalMapping">
            <summary>
              Looks up a localized string similar to This step has no mapping in the internal deployment plan..
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService">
            <summary>
            Service that provides data about a <see cref="T:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.AllowDropBlockingAssemblies">
            <summary>
            Get boolean that specifies whether CLR deployment will cause blocking assemblies to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.AllowExternalLanguagePaths">
            <summary>
            Get boolean that specifies whether file paths are allowed for external languages.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.AllowExternalLibraryPaths">
            <summary>
            Get boolean that specifies whether file paths are allowed for external libraries.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.AllowIncompatiblePlatform">
            <summary>
            Get boolean that specifies whether deployment will block due to platform compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.BackupDatabaseBeforeChanges">
            <summary>
            Get boolean that specifies whether a database backup will be performed before proceeding 
            with the actual deployment actions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreIndexesStatisticsOnEnclaveEnabledColumns">
            <summary>
            Get boolean that specifies whether to drop Indexes and Statistics before exporting DB 
            Export New Option
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.BlockOnPossibleDataLoss">
            <summary>
            Get boolean that specifies whether deployment should stop if the operation could cause data loss.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.BlockWhenDriftDetected">
            <summary>
            Get boolean that specifies whether the system will check for differences between the 
            present state of the database and the registered state of the database and block deployment 
            if changes are detected.  Even if this option is set to true, drift detection will only occur 
            on a database if it was previously deployed with the <see cref="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.RegisterDataTierApplication"/> option enabled.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.CommentOutSetVarDeclarations">
            <summary>
            Get boolean that specifies whether the declaration of SQLCMD variables are commented 
            out in the script header.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.CompareUsingTargetCollation">
            <summary>
            Get boolean that specifies whether the target collation will be used for identifier 
            comparison.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.CreateNewDatabase">
            <summary>
            Get boolean that specifies whether the existing database will be dropped
            and a new database created before proceeding with the actual deployment actions.
            Acquires single-user mode before dropping the existing database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DeployDatabaseInSingleUserMode">
            <summary>
            Get boolean that specifies whether the system will acquire single-user mode on the target
            database during the duration of the deployment operation.
            </summary>
            <remarks>
            The database will be returned to multi-user mode after all changes are applied.
            Database may remain in single-user mode if an error occurs during execution.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DoNotEvaluateSqlCmdVariables">
            <summary>
            Specifies the names of SQLCMD variables to not replace with values
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DisableAndReenableDdlTriggers">
            <summary>
            Get boolean that specifies if all DDL triggers will be disabled for the duration of the 
            deployment operation and then re-enabled after all changes are applied.  
            </summary>
            <remarks>
            Triggers may remain disabled if an error occurs during execution.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DoNotAlterChangeDataCaptureObjects">
            <summary>
            Get boolean that specifies whether items configured for Change Data Capture (CDC)
            should be altered during deployment.  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DoNotAlterReplicatedObjects">
            <summary>
            Get boolean that specifies whether items configured for Replication
            should be altered during deployment.  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropConstraintsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all constraints that do not
            exist in the source model.  
            </summary>
            <remarks>
            This applies to check, default, foreign key, primary key, and unique constraints.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropDmlTriggersNotInSource">
            <summary>
            Get boolean that specifies whether to drop all DML triggers that do not
            exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropExtendedPropertiesNotInSource">
            <summary>
            Get boolean that specifies whether to drop all extended properties that do 
            not exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropIndexesNotInSource">
            <summary>
            Get boolean that specifies whether to drop all indexes that do not
            exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropObjectsNotInSource">
            <summary>
            Get boolean that specifies whether objects that exist in the target but not source should be dropped during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DoNotDropDatabaseWorkloadGroups">
            <summary>
            Get boolean that specifies whether Database Workload groups that exist in the target but not source should be dropped during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DoNotDropWorkloadClassifiers">
            <summary>
            Get boolean that specifies whether Workload classifiers that exist in the target but not source should be dropped during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDatabaseWorkloadGroups">
            <summary>
            Get boolean that specifies whether to exclude Database Workload groups that exist in the target during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreWorkloadClassifiers">
            <summary>
            Get boolean that specifies whether to exclude Workload classifiers that exist in the target during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropPermissionsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all permissions that do not
            exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropRoleMembersNotInSource">
            <summary>
            Get boolean that specifies whether to drop all role memberships that do not
            exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.DropStatisticsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all statistics that do not
            exist in the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.GenerateSmartDefaults">
            <summary>
            Get boolean that specifies whether default values should be generated to populate NULL columns that are constrained to NOT NULL values.
            </summary>
            <remarks>
            This is useful when needing to add a new NOT NULL column to an existing table with data.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.HashObjectNamesInLogs">
            <summary>
            Get boolean that specifies whether to replace all object names in logs with a random hash value
            </summary>
            <remarks>
            This is useful for scrubbing potentially sensitive data from logs
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreAnsiNulls">
            <summary>
            Get boolean that specifies whether to exclude the ANSI_NULL option from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreAuthorizer">
            <summary>
            Get boolean that specifies whether to exclude the AUTHORIZATION option from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreColumnCollation">
            <summary>
            Get boolean that specifies whether to exclude the collation specifier from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreColumnOrder">
            <summary>
            Get boolean that specifies whether to exclude from consideration 
            the order of columns in tables when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreComments">
            <summary>
            Get boolean that specifies whether to exclude comments from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreCryptographicProviderFilePath">
            <summary>
            Get boolean that specifies whether to exclude the file specification 
            of a cryptographic provider from consideration when comparing the source and 
            target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDdlTriggerOrder">
            <summary>
            Get boolean that specifies whether to exclude DDL trigger order from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDdlTriggerState">
            <summary>
            Get boolean that specifies whether to exclude DDL trigger state from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDefaultSchema">
            <summary>
            Get boolean that specifies whether to exclude the DEFAULT_SCHEMA option from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDmlTriggerOrder">
            <summary>
            Get boolean that specifies whether to exclude DML trigger order from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreDmlTriggerState">
            <summary>
            Get boolean that specifies whether to exclude DML trigger state from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreExtendedProperties">
            <summary>
            Get boolean that specifies whether to exclude all extended properties from 
            consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreFileAndLogFilePath">
            <summary>
            Get boolean that specifies whether to exclude the FILENAME option of 
            FILE objects from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreFilegroupPlacement">
            <summary>
            Get boolean that specifies whether to exclude the filegroup specifier 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreFileSize">
            <summary>
            Get boolean that specifies whether to exclude the SIZE option of FILE objects 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreFillFactor">
            <summary>
            Get boolean that specifies whether to exclude the FILLFACTOR option
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreFullTextCatalogFilePath">
            <summary>
            Get boolean that specifies whether to exclude the path specification of 
            FULLTEXT CATALOG objects from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreIdentitySeed">
            <summary>
            Get boolean that specifies whether to exclude the seed value of IDENTITY columns 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreIncrement">
            <summary>
            Get boolean that specifies whether to exclude the increment value of IDENTITY columns 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreIndexOptions">
            <summary>
            Get boolean that specifies whether to exclude differences in index options 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreIndexPadding">
            <summary>
            Get boolean that specifies whether to exclude the PAD_INDEX option 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreKeywordCasing">
            <summary>
            Get boolean that specifies whether to exclude difference in the casing of keywords 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreLockHintsOnIndexes">
            <summary>
            Get boolean that specifies whether to exclude the ALLOW_ROW_LOCKS and 
            ALLOW_PAGE_LOGKS options from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreLoginSids">
            <summary>
            Get boolean that specifies whether to exclude the SID option of the LOGIN object 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreNotForReplication">
            <summary>
            Get boolean that specifies whether to exclude the NOT FOR REPLICATION option 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreObjectPlacementOnPartitionScheme">
            <summary>
            Get boolean that specifies whether to exclude the partition scheme object
            from consideration when comparing the source and target model for the following
            objects: Table, Index, Unique Key, Primary Key, and Queue.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnorePartitionSchemes">
            <summary>
            Get boolean that specifies whether to exclude the parameter type and 
            boundary VALUES of a PARTITION FUNCTION from consideration when comparing the 
            source and target model.  Also excludes FILEGROUP and partition function of a 
            PARTITION SCHEMA from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreTablePartitionOptions">
            <summary>
            Get or set boolean that specifies whether to exclude the RANGE and BOUNDARY VALUES
            of a table partition option from consideration when comparing the source and target
            model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnorePermissions">
            <summary>
            Get boolean that specifies whether to exclude all permission statements 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreQuotedIdentifiers">
            <summary>
            Get boolean that specifies whether to exclude the QUOTED_IDENTIFIER option 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreRoleMembership">
            <summary>
            Get boolean that specifies whether to exclude all ROLE MEMBERSHIP objects 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreRouteLifetime">
            <summary>
            Get boolean that specifies whether to exclude the LIFETIME option of ROUTE objects 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreSemicolonBetweenStatements">
            <summary>
            Get boolean that specifies whether to exclude the existence or absence of semi-colons 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreSensitivityClassifications">
            <summary>
            Get boolean that specifies whether to exclude data sensitivity classifications of columns
            from consideration when comparing the source and target model.
            </summary>
            <remarks>
            This option only works for sensitivity classifications added with ADD SENSITIVITY CLASSIFICATION on newer versions of SQL Server.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreTableOptions">
            <summary>
            Get boolean that specifies whether the options on the target table are updated 
            to match the source table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreUserSettingsObjects">
            <summary>
            Get boolean that specifies whether to exclude user settings 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreWhitespace">
            <summary>
            Get boolean that specifies whether to exclude whitespace 
            from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreWithNocheckOnCheckConstraints">
            <summary>
            Get boolean that specifies whether to exclude the CHECK|NO CHECK option of a CHECK 
            constraint object from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IgnoreWithNocheckOnForeignKeys">
            <summary>
            Get boolean that specifies whether to exclude the CHECK|NO CHECK option of a FOREIGN KEY  
            constraint object from consideration when comparing the source and target model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IncludeCompositeObjects">
            <summary>
            Get boolean that specifies whether to include referenced, external elements that also 
            compose the source model and then update the target database in a single deployment operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IncludeTransactionalScripts">
            <summary>
            Get boolean that specifies whether to use transations during the deployment operation 
            and commit the transaction after all changes are successfully applied.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.IsAlwaysEncryptedParameterizationEnabled">
            <summary>
            Set Always Encrypted Parameterization Mode
            </summary>
            <value>
            True to enable parameterization variables in post/pre deployment scripts
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.NoAlterStatementsToChangeClrTypes">
            <summary>
            Get boolean that specifies whether to force a change to CLR assemblies by dropping and recreating them.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.PopulateFilesOnFileGroups">
            <summary>
            Get boolean that specifies whether files are supplied for filegroups defined in the deployment source.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.PreserveIdentityLastValues">
            <summary>
            Get boolean that specifies whether the last values used for identity columns should be preserved.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.RegisterDataTierApplication">
            <summary>
            Get boolean that specifies whether the database will be registered as a Data-Tier Application.  
            If the target database is already a registered Data-Tier Application, then the registration will be updated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptDatabaseCollation">
            <summary>
            Get boolean that specifies whether the target database should be altered to match the 
            source model's collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptDatabaseCompatibility">
            <summary>
            Get boolean that specifies whether the target database should be altered to match the 
            source model's compatibility level.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptDatabaseOptions">
            <summary>
            Get boolean that specifies whether the database options in the target database should 
            be updated to match the source model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptDeployStateChecks">
            <summary>
            Get boolean that specifies whether the target database should be checked to ensure that 
            it exists, is online and can be updated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptFileSize">
            <summary>
            Get boolean that specifies whether a file size is specified when adding files to file groups.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptNewConstraintValidation">
            <summary>
            Get boolean that specifies whether constraints are validated after all changes are applied.
            </summary>
            <remarks>
            Constraints are always added with NOCHECK option; as a result their validation is skipped during creation.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.ScriptRefreshModule">
            <summary>
            Get boolean that specifies whether referencing procedures are refreshed when referenced objects are updated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.TargetConnectionString">
            <summary>
            Get string that specifies the target connection string
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.TargetDatabaseExists">
            <summary>
            Gets boolean that if set specifies whether the target database exists
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.TargetDatabaseName">
            <summary>
            Gets string that specifies the target database name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.TargetingServerless">
            <summary>
            Get boolean that specifies whether the target server is LocalDB
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.TreatVerificationErrorsAsWarnings">
            <summary>
            Get boolean that specifies whether the deployment operation should proceed when errors are 
            generated during plan verification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.UnmodifiableObjectWarnings">
            <summary>
            Get boolean that specifies whether the deployment operation should proceed when errors are 
            generated during plan verification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.VerifyCollationCompatibility">
            <summary>
            Get boolean that specifies whether deployment will verify that the collation specified in the 
            source model is compatible with the collation specified in the target model.
            </summary>
            <value>
            True to continue if errors are generated during plan verification; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.VerifyDeployment">
            <summary>
            Get boolean that specifies whether the plan verification phase is executed or not.
            </summary>
            <value>
            True to perform plan verification; otherwise, false to skip it.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptionsService.SqlCommandVariableValues">
            <summary>
            Get dictionary of SQL command variable values, keyed by variable name.
            </summary>
            <value>
            Dictionary of SQL command variable values, keyed by variable name.
            </value>
            <remarks>
            Valid values must be provided for every variable before deployment, or failures may occur during deployment.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions">
            <summary>
            Contains deployment options values used for deployment
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.AllowDropBlockingAssemblies">
            <summary>
            Get boolean that specifies whether CLR deployment will cause blocking assemblies to be dropped.
            </summary>
            <value>
            True to drop blocking assemblies during CLR deployment; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.AllowIncompatiblePlatform">
            <summary>
            Get boolean that specifies whether deployment will block due to platform compatibility.
            </summary>
            <value>
            True to allow deployment to incompatible platforms; otherwise, deployment will not proceed for incompatible platforms.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.BackupDatabaseBeforeChanges">
            <summary>
            Get boolean that specifies whether a database backup will be performed before proceeding 
            with the actual deployment actions.
            </summary>
            <value>
            True to perform a database backup prior to deployment; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreIndexesStatisticsOnEnclaveEnabledColumns">
            <summary>
            Get boolean that specifies whether to drop Indexes and Statistics before exporting DB 
            Export New Option
            </summary>
            <value>
            True to perform Drop Indexes and Statistics
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.BlockOnPossibleDataLoss">
            <summary>
            Get boolean that specifies whether deployment should stop if the operation could cause data loss.
            </summary>
            <value>
            True to stop deployment if possible data loss if detected; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.BlockWhenDriftDetected">
            <summary>
            Get boolean that specifies whether the system will check for differences between the 
            present state of the database and the registered state of the database and block deployment 
            if changes are detected.  Even if this option is set to true, drift detection will only occur 
            on a database if it was previously deployed with the <see cref="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.RegisterDataTierApplication"/> option enabled.
            </summary>
            <value>
            True to error is drift is detected; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.CommentOutSetVarDeclarations">
            <summary>
            Get boolean that specifies whether the declaration of SQLCMD variables are commented 
            out in the script header.
            </summary>
            <value>
            True to comment out these declarations; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.CompareUsingTargetCollation">
            <summary>
            Get boolean that specifies whether the source collation will be used for identifier 
            comparison.
            </summary>
            <value>
            False to use the source collation; otherwise, true to use the target collation.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.CreateNewDatabase">
            <summary>
            Get boolean that specifies whether the existing database will be dropped
            and a new database created before proceeding with the actual deployment actions.
            Acquires single-user mode before dropping the existing database.
            </summary>
            <value>
            True to drop and re-create the database; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DeployDatabaseInSingleUserMode">
            <summary>
            Get boolean that specifies whether the system will acquire single-user mode on the target
            database during the duration of the deployment operation.
            </summary>
            <value>
            True to acquire single-user mode during deployment; otherwise, false.
            Default is false.
            </value>
            <remarks>
            The database will be returned to multi-user mode after all changes are applied.
            Database may remain in single-user mode if an error occurs during execution.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DisableAndReenableDdlTriggers">
            <summary>
            Get boolean that specifies if all DDL triggers will be disabled for the duration of the 
            deployment operation and then re-enabled after all changes are applied.  
            </summary>
            <value>
            True to disable DDL triggers during deployment; otherwise, false.
            Default is true.
            </value>
            <remarks>
            Triggers may remain disabled if an error occurs during execution.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DoNotAlterChangeDataCaptureObjects">
            <summary>
            Get boolean that specifies whether items configured for Change Data Capture (CDC)
            should be altered during deployment.  
            </summary>
            <value>
            True to not alter objects configured for CDC; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DoNotAlterReplicatedObjects">
            <summary>
            Get boolean that specifies whether items configured for Replication
            should be altered during deployment.  
            </summary>
            <value>
            True to not alter objects configured for Replication; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropConstraintsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all constraints that do not
            exist in the source model.  
            </summary>
            <value>
            True to drop constraints not in the source model; otherwise, false.
            Default is true.
            </value>
            <remarks>
            This applies to check, default, foreign key, primary key, and unique constraints.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropDmlTriggersNotInSource">
            <summary>
            Get boolean that specifies whether to drop all DML triggers that do not
            exist in the source model.
            </summary>
            <value>
            True to drop DML triggers not in the source model; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropExtendedPropertiesNotInSource">
            <summary>
            Get boolean that specifies whether to drop all extended properties that do 
            not exist in the source model.
            </summary>
            <value>
            True to drop extended properties not in the source model; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropIndexesNotInSource">
            <summary>
            Get boolean that specifies whether to drop all indexes that do not
            exist in the source model.
            </summary>
            <value>
            True to drop indexes not in the source model; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropObjectsNotInSource">
            <summary>
            Get boolean that specifies whether objects that exist in the target but not source should be dropped during deployment.
            </summary>
            <value>
            True if objects that exist in the target but not source should be dropped; otherwise false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropPermissionsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all permissions that do not
            exist in the source model.
            </summary>
            <value>
            True to drop permissions not in the source model; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropRoleMembersNotInSource">
            <summary>
            Get boolean that specifies whether to drop all role memberships that do not
            exist in the source model.
            </summary>
            <value>
            True to drop role memberships not in the source model; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DropStatisticsNotInSource">
            <summary>
            Get boolean that specifies whether to drop all statistics that do not
            exist in the source model.
            </summary>
            <value>
            True to drop statistics not in the source model; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.GenerateSmartDefaults">
            <summary>
            Get boolean that specifies whether default values should be generated to populate NULL columns that are constrained to NOT NULL values.
            </summary>
            <value>
            True if default values should be generated; otherwise false.
            Default is false.
            </value>
            <remarks>
            This is useful when needing to add a new NOT NULL column to an existing table with data.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.HashObjectNamesInLogs">
            <summary>
            Get boolean that specifies whether to replace all object names in logs with a random hash value
            </summary>
            <value>
            True to replace all object names with random hash values; otherwise, false.
            Default is false
            </value>
            <remarks>
            This is useful for scrubbing potentially sensitive data from logs
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreAnsiNulls">
            <summary>
            Get boolean that specifies whether to exclude the ANSI_NULL option from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the ANSI_NULL option; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreAuthorizer">
            <summary>
            Get boolean that specifies whether to exclude the AUTHORIZATION option from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the AUTHORIZATION option; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreColumnCollation">
            <summary>
            Get boolean that specifies whether to exclude the collation specifier from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the collation specifier; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreColumnOrder">
            <summary>
            Get boolean that specifies whether to exclude from consideration 
            the order of columns in tables when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in column order; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreComments">
            <summary>
            Get boolean that specifies whether to exclude comments from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in comments; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreCryptographicProviderFilePath">
            <summary>
            Get boolean that specifies whether to exclude the file specification 
            of a cryptographic provider from consideration when comparing the source and 
            target model.
            </summary>
            <value>
            True to ignore differences in a cryptographic provider's  file specification; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDdlTriggerOrder">
            <summary>
            Get boolean that specifies whether to exclude DDL trigger order from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in DDL trigger order; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDdlTriggerState">
            <summary>
            Get boolean that specifies whether to exclude DDL trigger state from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in DDL trigger state; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDefaultSchema">
            <summary>
            Get boolean that specifies whether to exclude the DEFAULT_SCHEMA option from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the DEFAULT_SCHEMA options; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDmlTriggerOrder">
            <summary>
            Get boolean that specifies whether to exclude DML trigger order from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in DDL trigger order; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDmlTriggerState">
            <summary>
            Get boolean that specifies whether to exclude DML trigger state from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in DML trigger state; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreExtendedProperties">
            <summary>
            Get boolean that specifies whether to exclude all extended properties from 
            consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in extended properties; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreFileAndLogFilePath">
            <summary>
            Get boolean that specifies whether to exclude the FILENAME option of 
            FILE objects from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the FILENAME option of FILE objects; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreFilegroupPlacement">
            <summary>
            Get boolean that specifies whether to exclude the filegroup specifier 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the filegroup specifier; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreFileSize">
            <summary>
            Get boolean that specifies whether to exclude the SIZE option of FILE objects 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the SIZE option of FILE objects; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreFillFactor">
            <summary>
            Get boolean that specifies whether to exclude the FILLFACTOR option
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the FILLFACTOR option; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreFullTextCatalogFilePath">
            <summary>
            Get boolean that specifies whether to exclude the path specification of 
            FULLTEXT CATALOG objects from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the path specification of FULLTEXT CATALOG objects; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreIdentitySeed">
            <summary>
            Get boolean that specifies whether to exclude the seed value of IDENTITY columns 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the seed value of IDENTITY columns; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreIncrement">
            <summary>
            Get boolean that specifies whether to exclude the increment value of IDENTITY columns 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the increment value of IDENTITY columns; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreIndexOptions">
            <summary>
            Get boolean that specifies whether to exclude differences in index options 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in index options; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreIndexPadding">
            <summary>
            Get boolean that specifies whether to exclude the PAD_INDEX option 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the PAD_INDEX option; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreKeywordCasing">
            <summary>
            Get boolean that specifies whether to exclude difference in the casing of keywords 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in the casing of keywords; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreLockHintsOnIndexes">
            <summary>
            Get boolean that specifies whether to exclude the ALLOW_ROW_LOCKS and 
            ALLOW_PAGE_LOGKS options from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the ALLOW_ROW_LOCKS and ALLOW_PAGE_LOGKS options; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreLoginSids">
            <summary>
            Get boolean that specifies whether to exclude the SID option of the LOGIN object 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the SID option of the LOGIN object; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreNotForReplication">
            <summary>
            Get boolean that specifies whether to exclude the NOT FOR REPLICATION option 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the NOT FOR REPLICATION option; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreObjectPlacementOnPartitionScheme">
            <summary>
            Get boolean that specifies whether to exclude the partition scheme object
            from consideration when comparing the source and target model for the following
            objects: Table, Index, Unique Key, Primary Key, and Queue.
            </summary>
            <value>
            True to ignore partition schemes; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.DoNotEvaluateSqlCmdVariables">
            <summary>
            Specified whether SQLCMD variable names should be used when comparing schema or their values
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnorePartitionSchemes">
            <summary>
            Get boolean that specifies whether to exclude the parameter type and 
            Get boolean that specifies whether to exclude the parameter type and 
            boundary VALUES of a PARTITION FUNCTION from consideration when comparing the 
            source and target model.  Also excludes FILEGROUP and partition function of a 
            PARTITION SCHEMA from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore aspects of partition functions and schemes; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreTablePartitionOptions">
            <summary>
            Get or set boolean that specifies whether to exclude the RANGE and BOUNDARY VALUES
            of a table partition option from consideration when comparing the source and target
            model.
            </summary>
            <value>
            True to ignore aspects of table partition; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnorePermissions">
            <summary>
            Get boolean that specifies whether to exclude all permission statements 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore all permission statements; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreQuotedIdentifiers">
            <summary>
            Get boolean that specifies whether to exclude the QUOTED_IDENTIFIER option 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the QUOTED_IDENTIFIER option; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreRoleMembership">
            <summary>
            Get boolean that specifies whether to exclude all ROLE MEMBERSHIP objects 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore ROLE MEMBERSHIP objects; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreRouteLifetime">
            <summary>
            Get boolean that specifies whether to exclude the LIFETIME option of ROUTE objects 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the LIFETIME option of ROUTE objects; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreSemicolonBetweenStatements">
            <summary>
            Get boolean that specifies whether to exclude the existence or absence of semi-colons 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore semi-colons; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreSensitivityClassifications">
            <summary>
            Get boolean that specifies whether to exclude data sensitivity classifications of columns
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore sensitivity classifications; otherwise, false.
            Default is false.
            </value>
            <remarks>
            This option only works for sensitivity classifications added with ADD SENSITIVITY CLASSIFICATION on newer versions of SQL Server.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreTableOptions">
            <summary>
            Get boolean that specifies whether the options on the target table are updated 
            to match the source table.
            </summary>
            <value>
            True to ignore difference in table options and not update the target table; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreUserSettingsObjects">
            <summary>
            Get boolean that specifies whether to exclude user settings 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences in user settings; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreWhitespace">
            <summary>
            Get boolean that specifies whether to exclude whitespace 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore differences whitespace; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreWithNocheckOnCheckConstraints">
            <summary>
            Get boolean that specifies whether to exclude the CHECK|NO CHECK option of a CHECK 
            constraint object from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the CHECK|NO CHECK option of a CHECK constraint object; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreWithNocheckOnForeignKeys">
            <summary>
            Get boolean that specifies whether to exclude the CHECK|NO CHECK option of a FOREIGN KEY  
            constraint object from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore the CHECK|NO CHECK option of a FOREIGN KEY constraint object; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IncludeCompositeObjects">
            <summary>
            Get boolean that specifies whether to include referenced, external elements that also 
            compose the source model and then update the target database in a single deployment operation.
            </summary>
            <value>
            True to include composite objects; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IncludeTransactionalScripts">
            <summary>
            Get boolean that specifies whether to use transations during the deployment operation 
            and commit the transaction after all changes are successfully applied.
            </summary>
            <value>
            True to use transactions during deployment; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IsAlwaysEncryptedParameterizationEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.NoAlterStatementsToChangeClrTypes">
            <summary>
            Get boolean that specifies whether to force a change to CLR assemblies by dropping and recreating them.
            </summary>
            <value>
            True if CLR assemblies should be dropped; otherwise false to allow ALTER statements to change CLR assemblies.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.PopulateFilesOnFileGroups">
            <summary>
            Get boolean that specifies whether files are supplied for filegroups defined in the deployment source.
            </summary>
            <value>
            True to specify files for filegroups; otherwise false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.PreserveIdentityLastValues">
            <summary>
            Get or set boolean that specifies whether the last values used for identity columns should be preserved.
            </summary>
            <value>
            True to specify that source identity last values should be used in target.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.RegisterDataTierApplication">
            <summary>
            Get boolean that specifies whether the database will be registered as a Data-Tier Application.  
            If the target database is already a registered Data-Tier Application, then the registration will be updated.
            </summary>
            <value>
            True to register the database as a Data-Tier Application; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.RestoreSequenceCurrentValue">
            <summary>
            Get boolean that specifies whether the target database should update the sequence current value 
            </summary>
            <value>
            Default is True
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptDatabaseCollation">
            <summary>
            Get boolean that specifies whether the target database should be altered to match the 
            source model's collation.
            </summary>
            <value>
            True to alter the target database's collation; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptDatabaseCompatibility">
            <summary>
            Get boolean that specifies whether the target database should be altered to match the 
            source model's compatibility level.
            </summary>
            <value>
            True to alter the target database's compatibility level; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptDatabaseOptions">
            <summary>
            Get boolean that specifies whether the database options in the target database should 
            be updated to match the source model.
            </summary>
            <value>
            True to alter the target database's options; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptDeployStateChecks">
            <summary>
            Get boolean that specifies whether the target database should be checked to ensure that 
            it exists, is online and can be updated.
            </summary>
            <value>
            True to perform state checks on the target database; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptFileSize">
            <summary>
            Get boolean that specifies whether a file size is specified when adding files to file groups.
            </summary>
            <value>
            True to specify a file size when adding files to file groups; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptNewConstraintValidation">
            <summary>
            Get boolean that specifies whether constraints are validated after all changes are applied.
            </summary>
            <value>
            True to validate check constraints; otherwise, false.
            Default is true.
            </value>
            <remarks>
            Constraints are always added with NOCHECK option; as a result their validation is skipped during creation.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.ScriptRefreshModule">
            <summary>
            Get boolean that specifies whether referencing procedures are refreshed when referenced objects are updated.
            </summary>
            <value>
            True to refresh referencing procedures; otherwise false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.TargetConnectionString">
            <summary>
            Get string that specifies the target connection string
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.TargetDatabaseExists">
            <summary>
            Gets boolean that if set specifies whether the target database exists
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.TargetDatabaseName">
            <summary>
            Gets string that specifies the target database name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.TargetingServerless">
            <summary>
            Get boolean that specifies whether the target server is LocalDB
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.TreatVerificationErrorsAsWarnings">
            <summary>
            Get boolean that specifies whether to treat errors that occur during publish verification as warnings. 
            The check is performed against the generated deployment plan before the plan is executed against the target database. 
            Plan verification detects problems, such as the loss of target-only objects (for example, indexes), that must be 
            dropped to make a change. Verification also detects situations where dependencies (such as tables or views) exist 
            because of a reference to a composite project, but do not exist in the target database. You might choose to treat 
            verification errors as warnings to get a complete list of issues instead of allowing the publish 
            action to stop when the first error occurs.
            </summary>
            <value>
            True to treat errors as warnings; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.UnmodifiableObjectWarnings">
            <summary>
            Get boolean that specifies whether warnings should be generated when differences are found 
            in objects that cannot be modified, for example, if the file size or file paths were different for a file.
            </summary>
            <value>
            True to generate warnings; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.VerifyCollationCompatibility">
            <summary>
            Get boolean that specifies whether deployment will verify that the collation specified in the 
            source model is compatible with the collation specified in the target model.
            </summary>
            <value>
            True to continue if errors are generated during plan verification; otherwise, false.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.VerifyDeployment">
            <summary>
            Get boolean that specifies whether the plan verification phase is executed or not.
            </summary>
            <value>
            True to perform plan verification; otherwise, false to skip it.
            Default is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.SqlCommandVariableValues">
            <summary>
            Get dictionary of SQL command variable values, keyed by variable name.
            </summary>
            <value>
            Dictionary of SQL command variable values, keyed by variable name.
            </value>
            <remarks>
            Valid values must be provided for every variable before deployment, or failures may occur during deployment.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreWorkloadClassifiers">
            <summary>
            Get or set boolean that specifies whether to exclude the Workload Classifiers 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore workload classifiers; otherwise, false.
            Default is false.
            </value>
            <summary>
            Get boolean that specifies whether to exclude Workload classifiers that exist in the target during deployment.
            </summary>
            <value>
            True to ignore workload classifiers; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Deployment.SqlDeploymentOptions.IgnoreDatabaseWorkloadGroups">
            <summary>
            Get or set boolean that specifies whether to exclude the Database Workload Groups 
            from consideration when comparing the source and target model.
            </summary>
            <value>
            True to ignore database workload groups; otherwise, false.
            Default is false.
            </value>
            <summary>
            Get boolean that specifies whether to exclude Workload Groups that exist in the target during deployment.
            </summary>
            <value>
            True to ignore workload groups; otherwise, false.
            Default is false.
            </value>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes">
            <summary>
            Defines the type of objects to query from the model.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.None">
            <summary>
            Filter out all elements.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.UserDefined">
            <summary>
            Query user defined objects.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.BuiltIn">
            <summary>
            Query built in system objects
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.SameDatabase">
            <summary>
            Query user defined objects from referenced models where the referenced model is for the same database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.System">
            <summary>
            Query System objects that are not treated as built in. These are objects that appear when the master
            database is referenced
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.DifferentDatabaseSameServer">
            <summary>
            Query references to external objects that are from a different database on the same server.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.DifferentDatabaseDifferentServer">
            <summary>
            Query references to external objects that are from a different database on a different same server.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.Default">
            <summary>
            Default query scope is to query both <see cref="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.UserDefined"/>
            and <see cref="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.BuiltIn"/> query scopes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.All">
            <summary>
            All elements in the model, including references to external elements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacModelError">
            <summary>
            Represents a model blocking error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.ErrorType">
            <summary>
            Type of model blocking error
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.ErrorCode">
            <summary>
            DacModelError error code
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.Line">
            <summary>
            Line Number of the error
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.Column">
            <summary>
            Column Number of the error
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.Prefix">
            <summary>
            DacModelError prefix
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.Message">
            <summary>
            Message from DacModelError
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.SourceName">
            <summary>
            The TSqlObject with error. 
            Can be null if the object creation failed completely.
            Could be a partially constructed object in case of partial failures in object creation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.SourceType">
            <summary>
            Type of the TSqlObject associated with the error
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelError.Severity">
            <summary>
            Severity of the error
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            <summary>
            Exception throw from DAC model errors.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelException.Messages">
            <summary>
            Get collection of additional error, warning, and informational messages associated with this exception.
            </summary>
            <value>
            Collection of additional messages associated with this exception.
            </value>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DacModelException.#ctor">
            <summary>
             Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DacModelException.#ctor(System.String)">
            <summary>
            Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelException"/> class with the specified error message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DacModelException.#ctor(System.String,System.Exception)">
            <summary>
            Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelException"/> class with the specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DacModelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
            
             </summary>
             <param name="info"></param>
             <param name="context"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DacModelException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Write exception information to the supplied <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object.
            </summary>
            <param name="info">
            <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data.
            </param>
            <param name="context">
            <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="info"/> is a null reference.
            </exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacModelMessage">
            <summary>
            Represents an error or a warning raised during model validation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacModelResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.AddObjectsErrorAddingObjects">
            <summary>
              Looks up a localized string similar to Add or update objects failed due to the following errors: .
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.AddObjectsModelErrorsExist">
            <summary>
              Looks up a localized string similar to Cannot add or update objects. The model has build blocking errors:.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.AstNotRetrieved">
            <summary>
              Looks up a localized string similar to The AST could not be retrieved for the specified object..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.AstNotSupportedError">
            <summary>
              Looks up a localized string similar to AST retrieval not supported for the specified object..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.AutoGeneratedCommentedScriptBodyText">
            <summary>
              Looks up a localized string similar to \nAuto generated text: The original script body has been commented in order to add this object to the model.\n.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ConvertObject_SourceNameDifferentFromObjectSource">
            <summary>
              Looks up a localized string similar to Cannot convert object to script. The source name &apos;{0}&apos; does not match existing source name &apos;{1}&apos;. Changing source names is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ConvertObject_SourceNameExists">
            <summary>
              Looks up a localized string similar to Cannot convert object to script. The source name &apos;{0}&apos; is already in use in this model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ConvertObject_WhitespaceNotAllowed">
            <summary>
              Looks up a localized string similar to Source name cannot consist of whitespace.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.DacpacLoadReferenceError">
            <summary>
              Looks up a localized string similar to Cannot load package &apos;{0}&apos;. Required references are missing..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.DeleteObjectsErrorDeletingObjects">
            <summary>
              Looks up a localized string similar to Delete objects failed due to the following errors: .
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.DeleteObjectsModelErrorsExist">
            <summary>
              Looks up a localized string similar to Cannot delete objects from the model. The model has build blocking errors:.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ErrorScriptNameValidation">
            <summary>
              Looks up a localized string similar to {0}: parameter {1} cannot be null, the empty string, all whitespace, or end in &quot;.xsd&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.GetObjectsTopLevelTypesRequiredError">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not a top-level type. Only top-level types can be queried for using the TSqlModel GetObject(s) methods..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InconsistentPropertyTypes">
            <summary>
              Looks up a localized string similar to Not all property types match expected type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InternalPropertyMappingInvalid">
            <summary>
              Looks up a localized string similar to Internal Error. No internal property mapped on internal type {0} for public property {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InternalPropertyTypeMismatchErrorMessage">
            <summary>
              Looks up a localized string similar to Internal Error. Data types for internal properties &apos;{0}.{1}&apos; and &apos;{2}.{3}&apos; do not match..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InternalRelationshipMappingInvalid">
            <summary>
              Looks up a localized string similar to No internal relationship mapped on internal type {0} for public relationship {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InternalTypeMappingInvalid">
            <summary>
              Looks up a localized string similar to Internal Error. No public type mapping was found for internal type {0}, for element with id {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidContextObjectErrorMessage">
            <summary>
              Looks up a localized string similar to Internal Error. Context object must implement ISqlModelElement..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidContextObjectForDefaultErrorMessage">
            <summary>
              Looks up a localized string similar to Internal Error. There is no context object to derive a default from..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidMetadataContextErrorMessage">
            <summary>
              Looks up a localized string similar to Metadata {0} has an invalid context type..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidMetadataTypeErrorMessage">
            <summary>
              Looks up a localized string similar to Data type {1} for metadata {0} cannot be cast to {2}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidModelElementErrorMessage">
            <summary>
              Looks up a localized string similar to Internal Error. Internal elements must implement IModelElement..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidNavigationPathRelationship">
            <summary>
              Looks up a localized string similar to Relationship &apos;{0}.{1}&apos; cannot be used for type collapsing navigation as it is a one-to-many relationship..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidPropertyContextErrorMessage">
            <summary>
              Looks up a localized string similar to Property {0} has an invalid context type..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidPropertyTypeErrorMessage">
            <summary>
              Looks up a localized string similar to Data type {1} for property {0} cannot be cast to {2}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidRelationshipContextErrorMessage">
            <summary>
              Looks up a localized string similar to Relationship {0} has an invalid context type..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidTypeErrorMessage">
            <summary>
              Looks up a localized string similar to Data type {0} cannot be cast to {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.InvalidTypeNameErrorMessage">
            <summary>
              Looks up a localized string similar to The type name {0} is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.LoadScriptBackedModelFailed">
            <summary>
              Looks up a localized string similar to Loading source as a script-backed model failed due to the following errors:.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MetadataDoesNotMapEnumErrorMessage">
            <summary>
              Looks up a localized string similar to Internal error. Type &apos;{0}&apos; is not an Enum, expected Enum for GetMetadata.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MetadataNotSupportedOnTypeErrorMessage">
            <summary>
              Looks up a localized string similar to ModelMetadataClass {0} is not supported on type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MissingMetadataMappingErrorMessage">
            <summary>
              Looks up a localized string similar to Metadata context must be mapped to at least one internal property..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MissingPropertyMappingErrorMessage">
            <summary>
              Looks up a localized string similar to Internal Error. Property context must be mapped to at least one internal property..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MissingReference">
            <summary>
              Looks up a localized string similar to No file was supplied for reference {0}; model load might fail. When {1} was created, the original referenced file was located {2}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MissingReference_NoPackagePath">
            <summary>
              Looks up a localized string similar to No file was supplied for reference {0}; model load might fail. When package was created, the original referenced file was located {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MissingRelationshipMappingErrorMessage">
            <summary>
              Looks up a localized string similar to Context must include at least one internal relationship mapping.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ModelDisposedError">
            <summary>
              Looks up a localized string similar to The underlying model has been disposed..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ModelErrorsExist">
            <summary>
              Looks up a localized string similar to The model has build blocking errors:.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.MoreThanOneObjectMatchedId">
            <summary>
              Looks up a localized string similar to More than one object matched the ID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.NoValidEnumForMetadata">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not have a mapping for the int value &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.PropertiesNotSupportedForRelationshipError">
            <summary>
              Looks up a localized string similar to Properties are not supported on ModelRelationshipInstances for Relationship {0}.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.PropertyNotSupportedOnRelationshipErrorMessage">
            <summary>
              Looks up a localized string similar to ModelPropertyClass {0} is not supported on relationship {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.PropertyNotSupportedOnTypeErrorMessage">
            <summary>
              Looks up a localized string similar to ModelPropertyClass {0} is not supported on type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.PublicContributorThrewExceptionMessage">
            <summary>
              Looks up a localized string similar to DeploymentContributor &apos;{0}&apos; threw exception. Message is: &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.RelationshipNotSupportedOnTypeErrorMessage">
            <summary>
              Looks up a localized string similar to ModelRelationshipClass {0} is not supported on type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.SaveModelErrorsExist">
            <summary>
              Looks up a localized string similar to Cannot save package to file. The model has build blocking errors:.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ScriptNotRetrieved">
            <summary>
              Looks up a localized string similar to The script could not be retrieved for the specified object..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ScriptNotSupportedError">
            <summary>
              Looks up a localized string similar to Script retrieval not supported for the specified object..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.ServiceDisposedError">
            <summary>
              Looks up a localized string similar to The underlying model service has been disposed..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.UpdateModelErr">
            <summary>
              Looks up a localized string similar to Error updating model..
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.UpdateModelErr_PackageContainsData">
            <summary>
              Looks up a localized string similar to Cannot update the model as the package contains data. This is not supported since it could cause errors during deployment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DacModelResources.UpdateModelErr_UnsupportedDacpacVersion">
            <summary>
              Looks up a localized string similar to Updating package with version &apos;{0}&apos; is not supported. Only packages with version 3.0 or higher are supported for update..
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes">
            <summary>
            Defines the type of objects to query from the model.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.None">
            <summary>
            Filter out all elements.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined">
            <summary>
            Query user defined objects.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.BuiltIn">
            <summary>
            Query built in system objects
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.SameDatabase">
            <summary>
            Query user defined objects from referenced models where the referenced model is for the same database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.System">
            <summary>
            Query System objects that are not treated as built in. These are objects that appear when the master
            database is referenced
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default">
            <summary>
            Default query scope is to query both <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/>
            and <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.BuiltIn"/> query scopes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.All">
            <summary>
            All elements in the model, not including references to external elements in non-system databases.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DisplayServices">
            <summary>
            Provides a set of services for providing user-visible values for objects in the public model API.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DisplayServices.GetEscapedNameString(System.String)">
            <summary>
            Pass in a short name string, return back an escaped version of the name string.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DisplayServices.GetElementName(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.Model.ElementNameStyle)">
            <summary>
            Get element name string using different display style.
            </summary>
            <param name="element"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> </param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.DisplayServices.GetDisplayName(Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.EscapeStyle,System.Boolean)">
            <summary>
            Get display name of an identifier, with the option to configure use of full/short name and whether to escape name parts.
            </summary>
            <param name="identifier">The name identifier that can contain multiple parts.</param>
            <param name="escapeStyle"><see cref="T:Microsoft.SqlServer.Dac.Model.EscapeStyle"/> defining whether the parts of the name should be escaped or not</param>
            <param name="fullName">Indicates if the name is constructed in full or only the significant last part is used.</param>
            <returns>Display name</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ElementNameStyle">
            <summary>
            Defines the different naming styles supported by the display services
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementNameStyle.Unknown">
            <summary>
            Unknown or undefined style - should be avoided
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementNameStyle.SimpleName">
            <summary>
            A non-escaped short name style.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementNameStyle.EscapedSimpleName">
            <summary>
            An escaped short name style.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementNameStyle.FullyQualifiedName">
            <summary>
            A non-escaped fully qualified name style.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementNameStyle.EscapedFullyQualifiedName">
            <summary>
            An escaped fully qualified name style.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EscapeStyle">
            <summary>
            Enum to specify escape style for displaying model name
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EscapeStyle.Escape">
            <summary>
            Names should be escaped
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EscapeStyle.DontEscape">
            <summary>
            Names should not be escaped
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EscapeStyle.EscapeIfNecessary">
            <summary>
            Names should be escaped if not doing so would cause errors
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ElementDescriptor">
            <summary>
            Describes a SQL model element without instantiating a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> in the
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.IsEmpty">
            <summary>
            Returns if descriptor is empty (doesn't contain any identifiers).  It is possible for
            a descriptor to have a generated name - i.e. based on the context of a statement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.HasUsableName">
            <summary>
            Helper to signify whether this descriptor has a name that is usable - i.e. the
            name parts represent the name of a SQL object.  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.IgnoreName">
            <summary>
            Gets if name should be ignored for this descriptor.  It is possible for a
            descriptor to have no name AND IgnoreName == false
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.TypeClass">
            <summary>
            Returns back the type class that maps to the ElementType.  
            
            If there is no public mapping for the internal type then null will be returned.
            
            If the internal type maps to more than one element class the first element class
            is returned.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.Identifiers">
            <summary>
            The parts of the elements name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementDescriptor.ExternalReferenceParts">
            <summary>
            Returns external parts for elements name
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ElementDescriptor.GetModelElement(Microsoft.SqlServer.Dac.Model.TSqlModel)">
            <summary>
            Gets the corresponding <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> that matches this descriptor from a model.
            If no object matches the descriptor then null will be returned
            </summary>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> the object should be found in</param>
            <returns>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> that this <see cref="T:Microsoft.SqlServer.Dac.Model.ElementDescriptor"/> maps to, or null
            if no object definitively matches this descriptor
            </returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance">
            <summary>
            Specifies how a fragment being visited is related to a descriptor
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance.None">
            <summary>
            No relevance or unknown relevance
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance.ContainerId">
            <summary>
            The descriptor is related to an object that contains the fragment 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance.SelfId">
            <summary>
            The descriptor represents the same concept as the fragment 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalDefinitionMetadataContext">
            <summary>
            <see cref="T:Microsoft.SqlServer.Dac.Model.ModelMetadataContext"/> implementation that handles external definition actions. These
            define a mapping from an internal <see cref="T:Microsoft.Data.Tools.Schema.SchemaModel.ModelElementClass"/> to a value in a public Enum type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.InternalModelUtils.IsInlineConstraintOrIndex(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement)">
            <summary>
            Checks if an internal element represents an inline constraint or annotation
            </summary>
            <param name="element">The element to check</param>
            <returns>True if the element is an inline constraint or index. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.InternalModelUtils.TryGetSingleReferencedElementInfo(Microsoft.Data.Tools.Schema.SchemaModel.ModelRelationshipClass,Microsoft.Data.Tools.Schema.SchemaModel.IModelElement,Microsoft.Data.Tools.Schema.SchemaModel.IModelElement@,Microsoft.Data.Tools.Schema.SchemaModel.ModelIdentifier@)">
            <summary>
            Tries to get info from a relationship on an element. The relationship must have single cardinality.
            If successful the information returned will at a minimum be the <see cref="T:Microsoft.Data.Tools.Schema.SchemaModel.ModelIdentifier"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelAnnotationPropertyContext">
            <summary>
            Property context for properties that are converted from annotations in the internal model.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor">
            <summary>
            This class represents an ambigous element descriptor, where it's not fully clear which
            element in the model a descriptor might map to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor.Relevance">
            <summary>
            Gets the Relevance associated with the potential descriptor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SchemaAnalysisService">
            <summary>
            Internal service that links the public <see cref="T:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer"/> code to the internal
            analyzer codebase
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalysisService.CreateAnalysisService(Microsoft.SqlServer.Dac.Model.SchemaAnalyzer)">
            <summary>
            Factory method to construct a service. May want to move this into the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/>
            if we ever wanted to abstract away implementation details even further
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer">
            <summary>
            The base class that defines analysis events. 
            
            This analyzer works against the <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>s that represent 
            the exact DDL language describing an object.
            
            This makes it easier to examine the actual script/fragment structure that represents 
            an object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)">
            <summary>
            This method handles pre-batchprocessing
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndBatch(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlBatch)">
            <summary>
            This method handles post-batchprocessing
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            This method handles pre-DDL statement processing 
            </summary>
            <param name="fragment">Node that will be processed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndDdlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            This method handles post-DDL statement processing
            </summary>
            <param name="fragment">Node that was processed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.IdentifiedElement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            This method handles the discovery of a new Symbol
            </summary>
            <param name="fragment">Fragment the symbol belongs to</param>
            <param name="elementDescriptor">The element descriptor</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.BeginDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            This method handles the pre-DML statement processing
            </summary>
            <param name="fragment">Node that will be processed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.EndDmlStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            This method handles the post-DML statement processing
            </summary>
            <param name="fragment">Node that will be processed</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.VisitFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor,Microsoft.SqlServer.Dac.Model.ElementDescriptorRelevance)">
            <summary>
            This method handles additional processing required for a node/schemaidentifier
            </summary>
            <param name="fragment">Node to be processed</param>
            <param name="elementDescriptor">Descriptor to be processed</param>
            <param name="relevance">Relevance</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.VisitAmbiguousFragment(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Dac.Model.PotentialElementDescriptor})">
            <summary>
            This method handles additional processing required for a node/schemaidentifier
            </summary>
            <param name="fragment">Node to be processed</param>
            <param name="possibilities">An enumerable of possible hits</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.IdentifiedSupportingStatement(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.SqlServer.Dac.Model.ElementDescriptor)">
            <summary>
            This method handles the discovery of a new supporting statement
            </summary>
            <param name="fragment">Node to be processed</param>
            <param name="elementDescriptor"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SchemaAnalyzer.AnalyzeScript(Microsoft.SqlServer.Dac.Model.TSqlModel,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            Runs the schema analysis against a fragment
            </summary>
            <param name="model"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> the fragment is linked to</param>
            <param name="sqlFragment">the fragment to analyze</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ScriptPropertyContext">
            <summary>
            Customized Context object for properties of type <see cref="T:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlScriptProperty"/>.    
            </summary>
            <remarks>
            Returns the value of the script string.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SimpleModelPropertyContext">
            <summary>
            Default Property context for all properties.
            </summary>
            <remarks>
            Provides default implementation for property access through the public model.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SimpleModelRelationshipContext">
            <summary>
            Default Property context for all properties.
            </summary>
            <remarks>
            Provides default implementation for relationship access through the public model.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SimpleModelRelationshipContext.CollapsedRelationshipClasses">
            <summary>
            The possible relationships for the collapsed reference lookup
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlElementDescriptor.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlElementDescriptor.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlModelCollationComparer">
            <summary>
            Internal SQL implementation of the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelCollationComparer"/>. Uses the
            comparer built into an internal model for the comparison
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelCreator.GetCollationToUse(System.String,Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatforms)">
            <summary>
            Internal for test use only
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlSchemaModelLoader">
            <summary>
            Responsible for loading a model from a dacpac
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlSchemaModelLoader.ModelHeaderDataLoader">
            <summary>
            Loads references, SqlCmd variables, and refactor log data from a dacpac
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.#ctor(Microsoft.SqlServer.Dac.Model.TSqlModelSchema,Microsoft.Data.Tools.Schema.SchemaModel.DataSchemaModel)">
            <summary>
            Internal for testing purposes only. Use SqlSchemaModelObjectService(InternalModel.DataSchemaModel model)for
            product code.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.#ctor(Microsoft.Data.Tools.Schema.SchemaModel.DataSchemaModel)">
            <summary>
            Public constructor to be used by product code
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.CreateParserRepository">
            <summary>
            Initialize TSqlParserRepository
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.SetScriptBacked(System.Boolean)">
            <summary>
            Internal method that enables setting whether the model is script-backed or not. This can be used to
            warn about code analysis running against a non-scripted model, for instance.
            </summary>
            <param name="isScriptBacked"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ModelBuilder">
            <summary>
            Internal for testing purposes only
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.DataSchemaModel">
            <summary>
            Internal, only to be accessed by internal services as required.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.TryGetObject(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement,Microsoft.SqlServer.Dac.Model.TSqlObject@)">
            <summary>
            Internal utility method - wraps an internal model element in a public TSqlObject. Should never be exposed as part of the service.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetObjects(System.String,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])">
            <summary>
            Retrieves all TSqlObjects in a given source document filtered by ModelTypeClass specified by the types parameter
            </summary>
            <param name="sourceName">Name of the source document</param>
            <param name="types">Array of ModelTypeClass that the resulting TSqlObject should be filtered on. 
            If the parameter is a empty list, all objects will be returned.</param>
            <returns>List of TSqlObjects</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetModelErrors">
            <summary>
            Retrieves all model errors.
            </summary>
            <returns>List of model errors</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetModelIdForNamedObjectId(Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Gets the internal that matches a public ID
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetAsValidIModelElement(System.Object)">
            <summary>
            Converts an object to an IModelElement, throwing if the cast is invalid
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.IsToplevelObject(Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Returns if an object's create script is a top level T-SQL statement.
            </summary>
            <param name="tSqlObject"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> to query.</param>
            <returns>True if object's create statement is a top level statement.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="tSqlObject"/> is null.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.TryGetAst(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)">
            <summary>
            Generates the AST for the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>.
            </summary>
            <returns>True is AST generated.</returns>
            <param name="ast">Generated AST.</param>
            <param name="tSqlObject"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> to query.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="tSqlObject"/> is null.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">Thrown if the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlObject.ContextObject"/> property of <paramref name="tSqlObject"/> does not implement correct type.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.TryGetScript(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String@)">
            <summary>
            Generates the script for the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>.
            </summary>
            <returns>True is script generated.</returns>
            <param name="tSqlObject">The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> to be scripted</param>
            <param name="script">Generated script.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="tSqlObject"/> is null.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">Thrown if the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlObject.ContextObject"/> property of <paramref name="tSqlObject"/> does not implement correct type.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.CreateCacheIdentifier(System.String)">
            <summary>
            Creates an identifier that is compatible with the internal model's treatment of source names.
            Internally the ScriptCache checks for "MSSQLL::" at the beginning of a source name. 
            
            This indicates that the name isn't a path and shouldn't be auto-expanded based on the current working directory.
            We don't want to treat source names passed into the public API as paths, especially since this would result in 
            the current working directory being added in front of any source name that wasn't a fully qualified path. 
            
            The tradeoff is external users of the API don't get the benefit of us auto-resolving relative paths for them,
            but that's an acceptable tradeoff
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetSourceNameFromCacheId(System.String)">
            <summary>
            Removes the "MSSQL::" string from the beginning of a cache identifier to get the source name.
            see <see cref="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.CreateCacheIdentifier(System.String)"/> for more information on why this behavior is needed
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ExecutePackageOperationWithErrorHandling(System.Action)">
            <summary>
            Performs error handling around an operation on a DacPackage, such as creating or updating
            the package. There are a standard set of exceptions that can be thrown in this case
            </summary>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">Thrown if any error occurs when operating on the package</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.GetSourceInformationInternal(Microsoft.Data.Tools.Schema.SchemaModel.ISourceInformation)">
            <summary>
            Gets source info from an internal source by stripping any cache ID info from the source name
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ConvertToScriptedObject(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String)">
            <summary>
            Converts a specific top-level object in the model into a scripted representation of itself. This is done
            by scripting out the element, then dropping this element, and finally adding it back in and resolving the model
            </summary>
            <returns>New copy of the TSqlObject, which will now be script-backed</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">If the object could not be scripted out, this class of object is never scriptable,
            or errors were found in the model during the script process </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ConvertToScriptedObject(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String,System.String)">
            <summary>
            For simplicity, keeping this method private for now. Consider exposing publicly as a perf improvement in scenarios where 
            caller clearly knows that they want to directly replace an unscripted model element (e.g. a table) with a new definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ConvertToScriptedModel(System.Threading.CancellationToken)">
            <summary>
            Converts all user-defined objects in the model into scripted representations of themselves. This is done
            by scripting out the elements we're going to drop, then dropping all these elements, and finally adding them
            back in and resolving the model
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.CollectObjectsToBeRecreated(System.Collections.Generic.Dictionary{System.String,System.Tuple{Microsoft.SqlServer.Dac.Model.TSqlObject,System.String}},System.Threading.CancellationToken)">
            <summary>
            One step in converting objects to a scripted model: Must create script representations of each object to be deleted, 
            since we would like to remove them all and re-add them with only one Resolve operation. Otherwise we would have to 
            resolve after each delete and recreation to avoid unresolved references causing problems during scripting
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.DropAndRecreateElements(System.Collections.Generic.Dictionary{System.String,System.Tuple{Microsoft.SqlServer.Dac.Model.TSqlObject,System.String}},System.Threading.CancellationToken)">
            <summary>
            One step in converting objects to a scripted model: 
            for each of the objects to be dropped and recreated the element, its composed children and inline hierarchical 
            children are all deleted. Then they are added back into the model via the scripted representation of the objects.
            
            Note that this does not call Resolve on the model in order to support multiple updates followed by a single
            resolve, hence the caller must ensure the model is resolved once all these operations are completed.  
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.DoAddOrUpdateSubstitutedObject(Microsoft.Data.Tools.Schema.Sql.SchemaModel.ISqlModelElement,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions,System.String,System.String)">
            <summary>
            If adding an object to the model fails due to model blocking errors and if the ModelLoadOption is set to not throw on errors,
            the original object is substituted with a replacement object whose errant parts are removed. These errors are common in case of objects with
            old deprecated syntax. 
            This method substitutes stored procedures and views with equivalent new objects that has commented out script body.
            In case of other types of objects, an empty element with just the name of the errant object is added to the model.
            </summary>
            <param name="element">The element that originally failed to add to the model.</param>
            <param name="sourceName">source name of the object</param>
            <param name="options">TSqlObjectOptions for the object</param>
            <param name="script">Script of the object</param>
            <param name="cacheIdentifier">cache identifier for the object</param>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeAll">
            <summary>
            If query scope includes all elements, even externals
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeAllNonExternal">
            <summary>
            If query scope includes all elements, except
            non-Composite external
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeUserDefined">
            <summary>
            If query scope includes user defined elements
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeBuiltIn">
            <summary>
            if query scope includes built-in elements
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeSameDatabase">
            <summary>
            If query scope includes external elements in the same database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeSystem">
            <summary>
            If query scope includes elements from system dacpac ("master" reference)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeDifferentDatabaseSameServer">
            <summary>
            If query scope includes external elements in a different database on this server (for return of ID only)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter._includeDifferentDatabaseDifferentServer">
            <summary>
            If query scope includes external elements in a different database on a separate server (for return of ID only)
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter.QueryFilter">
            <summary>
            filter used when retrieving element
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter.SetupScopeVariables(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Converts <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> into filter criteria to use when querying the internal model.
            </summary>
            <param name="queryScopes">QueryScope to expand.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter.SetupScopeVariables(Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes)">
            <summary>
            Converts <see cref="T:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes"/> into filter criteria to use when querying the internal model.
            </summary>
            <param name="queryScopes">QueryScope to expand.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter.ShouldReturnElement(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement)">
            <summary>
            Determines if the element matches the query criteria. Fully external elements 
            should never be returned from this method, though system elements may be supported.
            </summary>
            <param name="element">Element to consider</param>
            <returns>true if element matches query criteria. Otherwise false.</returns>
            /// <remarks></remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.SqlSchemaModelObjectService.ScopeFilter.ShouldReturnIdForElement(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement)">
            <summary>
            Determines if the element ID can be returned - external elements will support
            return of the external ID in a relationship instance, but should never support
            return of the actual element. 
            </summary>
            <param name="element">Element to consider</param>
            <returns>true if element matches query criteria. Otherwise false.</returns>
            /// <remarks></remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CreateProcedureStatementWithCommentedScriptBody">
            <summary>
            Represents substituting a CreateProcedureStatement with commented out script body
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CreateViewStatementWithCommentedScriptBody">
            <summary>
            Represents substituting a CreateViewStatement with commented out script body
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1">
            <summary>
            Base class for elements with commented out script body
            Parses the given script with all known prior platform parsers until the script is successfully parsed.
            On successful parssing, extracts the TSqlStatment specified by the type parameter T
            </summary>
            <typeparam name="T">The create sql statement</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.SqlPlatform">
            <summary>
            The SqlPlatform parser to first employ when trying to parse the script
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.ParsedFragment">
            <summary>
            Contains the successfully parsed TSqlFragment parsed by some prior platform parser.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.Statement">
            <summary>
            The single TSQLStatment contained within the script that was successfully parsed by some prior platform parser.
            Unpon construction, null value for Statement denotes either script was not successfully parsed or there were more than one statements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.GetParsedFragment">
            <summary>
            Parse the script with all known prior parsers
            </summary>
            <returns>Successfully parsed TSqlFragment parsed. null if not able to parse</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.ExtractSingleTSqlStatement">
            <summary>
            Extract the single TSQLStatment contained within the successfully parsed script.
            </summary>
            <returns>Single TSQLStatment within the successfully parsed script.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ElementWithCommentedScriptBody`1.GetTSqlScriptWithCommentedScriptBody">
            <summary>
            Implemented by inherited members to comment out the script body of the Statement
            </summary>
            <returns>TSqlScipt of the element with commented out script body</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObjectService.ConvertToScriptedModel(System.Threading.CancellationToken)">
            <summary>
            Converts objects in a given scope into scriptable objects by deleting the internal representation of
            user defined objects and recreating them with a script-backed representation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObjectService.ConvertToScriptedObject(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String)">
            <summary>
            Converts a specific top-level object in the model into a scripted representation of itself. This is done
            by scripting out the element, then dropping this element, and finally adding it back in and resolving the model
            </summary>
            <returns>New copy of the TSqlObject, which will now be script-backed</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">If the object could not be scripted out, this class of object is never scriptable,
            or errors were found in the model during the script process </exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelCollationComparer">
            <summary>
            Comparer that can compare strings and <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/>s using the collation of a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>.
            This can be very useful when comparing objects in the model since comparisons will be consistent with the expected comparison
            results in SQL Server
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(System.String,System.String)">
            <summary>
            Compare if two objects are equal.
            </summary>
            <param name="x">Source object.</param>
            <param name="y">Target object.</param>
            <returns>True if equal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Test if two identifiers are equal using collation of this comparer.
            </summary>
            <param name="x">List of name parts in the first identifier.</param>
            <param name="y">List of name parts in the second identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Test if two identifiers are equal using collation of this comparer.
            </summary>
            <param name="x">The first <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/>.</param>
            <param name="y">The second <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.GetHashCode(Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Gets a Hashcode for the object that's compatible with the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)"/> method of this comparer
            </summary>
            <param name="obj">The object to get a hashcode for</param>
            <returns>hashcode</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.GetHashCode(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets a Hashcode for the object that's compatible with the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})"/> method of this comparer
            </summary>
            <param name="obj">The object to get a hashcode for</param>
            <returns>hashcode</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.GetHashCode(System.String)">
            <summary>
            Gets a Hashcode for the object that's compatible with the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Equals(System.String,System.String)"/> method of this comparer
            </summary>
            <param name="obj">The object to get a hashcode for</param>
            <returns>hashcode</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Compare(System.String,System.String)">
            <summary>
            Compare two objects using collation of this comparer.
            </summary>
            <param name="x">Source object.</param>
            <param name="y">Target object.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Compare(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Compare two objects using collation of this comparer.
            </summary>
            <param name="x">Source object.</param>
            <param name="y">Target object.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelCollationComparer.Compare(Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.ObjectIdentifier)">
            <summary>
            Compare two objects using collation of this comparer.
            </summary>
            <param name="x">Source object.</param>
            <param name="y">Target object.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelErrorSeverity">
            <summary>
            Represents the severity level of the model error
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorSeverity.Unknown">
            <summary>
            Severity is unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorSeverity.Error">
            <summary>
            Model error
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorSeverity.Warning">
            <summary>
            Warning in the model
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelErrorType">
            <summary>
            The model error type. Represents the various classification of model blocking errors.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorType.ParserError">
            <summary>
            Represents a parser error in an object in the model
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorType.InterpreterError">
            <summary>
            Represents a interpreter error in an object in the model
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelErrorType.ModelValidationError">
            <summary>
            Any other model blocking validation errors.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions">
            <summary>
            Defines options that affect the behavior of loading a model from a database.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.#ctor">
            <summary>
            Construct a new instance of the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractReferencedServerScopedElements">
            <summary>
            Get or set boolean that specifies whether server-scoped elements referenced by the source should be extracted.
            </summary>
            <value>
            True if references server-scoped elements should be extracted; otherwise false.
            Default value is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractApplicationScopedObjectsOnly">
            <summary>
            Get or set boolean that specifies the scope of objects extracted from the source.
            </summary>
            <value>
            True if only application-scoped objects should be extracted;
            otherwise false to extract all object types.
            Default value is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnoreExtendedProperties">
            <summary>
            Get or set boolean that specifies whether extended properties should be ignored.
            </summary>
            <value>
            True if extended properties will be ignored; otherwise false.
            Default value is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnorePermissions">
            <summary>
            Get or set boolean that specifies whether permissions should be ignored.
            </summary>
            <value>
            True if permissions will be ignored; otherwise false.
            Default value is true.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.IgnoreUserLoginMappings">
            <summary>
            Get or set boolean that specifies whether mappings between users and logins should be extracted from the source.
            </summary>
            <value>
            True if user login mappings will be ignored; otherwise false.
            Default value is false.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.Storage">
            <summary>
            Get the type of backing storage for the schema model used during extraction.
            </summary>
            <value>
            Enumeration value that specifies the type of backing storage for the schema model used during extraction.
            Default value is File.
            </value>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.VerifyExtraction">
            <summary>
            Get or set boolean that specifies whether the extracted package should be verified.
            </summary>
            <value>
            True if the package should be verified; otherwise false.
            Default value is false.
            </value> 
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.LoadAsScriptBackedModel">
            <summary>
            Should the model be loaded so that objects are backed up by scripted representations? In this case objects in the 
            <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/> scope will have a source name and source position information. 
            
            When loading from a Dacpac or any other non-scripted source the model will not have source information. This
            means that when running static code analysis using the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> some rules may not work 
            correctly, and that existing objects in the model could not be replaced using the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> method since there
            is no script with their original definition. For scenarios that use the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> setting this
            to true is strongly recommended. Similarly if you wish to update existing objects in the model setting this to true may
            be useful.
            
            Note that there is a potentially significant performance cost involved in creating a scripted model. All 
            top level objects in the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/> scope will be scripted out as strings 
            and then replaced with their scripted representations, after which the model will then have to fully resolve all 
            relationships. This will cause a one-time performance hit at the time the model is loaded. 
            </summary>
            <remarks>Default value is false, since there is a performance hit involved in creating a script-backed model from a 
            non-scripted source</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.ExtractUsageProperties">
            <summary>
            Usage properties include Table.RowCount, Table.IndexSize, Table.DataSize, Table.UsedPages and Table.DataPages.
            When true, these properties are extracted from the database and are accessible in the model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.HashObjectNamesInLogs">
            <summary>
            When true, object names will be replaced with a hash value in all log messages.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions">
            <summary>
            Options for loading a model from a data source such as a Dacpac file.
            
            These options can be very important depending on the scenario. For instance
            when running static code analysis using the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> it is strongly recommended that 
            the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> option be set to true, as many rules expect a fully scripted source and
            may not operate as expected on a non script-backed model. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> with the default options, which are
            to use <see cref="F:Microsoft.SqlServer.Dac.DacSchemaModelStorageType.Memory"/> storage and to set
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> to be false.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.#ctor(Microsoft.SqlServer.Dac.DacSchemaModelStorageType,System.Boolean)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> with the specified options.
            </summary>
            <param name="modelStorageType">Value for the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ModelStorageType"/> property</param>
            <param name="loadAsScriptBackedModel">Value for the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> property</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.#ctor(Microsoft.SqlServer.Dac.DacSchemaModelStorageType,System.Boolean,System.Boolean)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> with the specified options.
            </summary>
            <param name="modelStorageType">Value for the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ModelStorageType"/> property</param>
            <param name="loadAsScriptBackedModel">Value for the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> property</param>
            <param name="throwOnModelErrors">Value for the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ThrowOnModelErrors"/> property</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ModelStorageType">
            <summary>
            Should the model be stored in memory or should a file-backed storage be used?
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel">
            <summary>
            Should the model be loaded so that objects are backed up by scripted representations? In this case objects in the 
            <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/> scope will have a source name and source position information. 
            
            When loading from a Dacpac or any other non-scripted source the model will not have source information. This
            means that when running static code analysis using the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> some rules may not work 
            correctly, and that existing objects in the model could not be replaced using the 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> method since there
            is no script with their original definition. For scenarios that use the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> setting this
            to true is strongly recommended. Similarly if you wish to update existing objects in the model setting this to true may
            be useful.
            
            Note that there is a potentially significant performance cost involved in creating a scripted model. All 
            top level objects in the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/> scope will be scripted out as strings 
            and then replaced with their scripted representations, after which the model will then have to fully resolve all 
            relationships. This will cause a one-time performance hit at the time the model is loaded. 
            </summary>
            <remarks>Default value is false, since there is a performance hit involved in creating a script-backed model from a 
            non-scripted source</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ThrowOnModelErrors">
            <summary>
            Defines whether the model edit APIs throw a <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelException"/> if there are any blocking errors present in the model.
            
            When adding a new object or deleting/modifying existing objects in the model using API calls such as 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddObjects(System.String)"/>, <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/>, <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.DeleteObjects(System.String)"/> 
            and <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.ConvertToScriptedObject(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String)"/>, the model throws <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelException"/> signaling 
            the presence of model blocking errors. Model blocking errors indicates the presence of serious errors such as parser, interpreter and other errors in the objects.
            Setting this option to false allows building the model even if it has such serious errors. Subsequently those objects with model errors can be retrieved using the
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetModelErrors"/> method.
            
            When objects with model blocking errors are added to the model, the object is edited such that errant parts are removed or commented out in a 
            best effort manner to preserve the parts of the object that do not have errors. For instance a stored procedure that has a parser error in the procedure body 
            will have its body commented out before adding to the model. As a worst case the object is completely dropped while preserving the model errors.
            
            Note that current implementation handles objects with model errors as follows
            1) Sql procedures and views are added to the model with commented body.
            2) Other object types are completely dropped while preserving the model errors.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelMetadataClass">
            <summary>
            The metadata class for metadata properties.
            </summary>
            <remarks>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema"/> metadata classes provide access to the structure and instance data
            within a <c>TSqlSchemaModel</c> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelMetadataClass.Name">
            <summary>
            Metadata property name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelMetadataClass.DataType">
            <summary>
            Data type of the metadata property.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelMetadataClass.GetValue``1(Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Returns the metadata property value.
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of the metadata property value.</typeparam>
            <param name="instance"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> instance to get the metadata property value from.</param>
            <returns>Metadata property value.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelMetadataClass.OwningType">
            <summary>
            Owning <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> for the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelMetadataClass"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelPropertyClass">
            <summary>
            The metadata class for properties.
            </summary>
            <remarks>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema"/> metadata classes provide access to the structure and instance data
            within a <c>TSqlSchemaModel</c> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.Name">
            <summary>
            Property name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.DataType">
            <summary>
            Data type of the property.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.SupportedPlatforms">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlPlatforms"/> versions on which this relationship is supported.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetValue``1(Microsoft.SqlServer.Dac.Model.TSqlObject)">
            <summary>
            Returns the property value.
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of the property value.</typeparam>
            <param name="instance"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> instance to get the property value from.</param>
            <returns>Property value.</returns>
            <exception cref="T:System.InvalidCastException">
            If the property value cannot be cast to <typeparamref name="T"/>.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue``1(Microsoft.SqlServer.Dac.Model.SqlServerVersion)">
            <summary>
            Returns the default property value.
            
            Note: for <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure"/> the default value may depend on the
            <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> being targeted. This method assumes the current default
            version is being used. To get a default value based on a particular for a particular EngineVersion, please use
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue``1(Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)"/>.
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of the property value.</typeparam>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to return the default value for.</param>
            <returns>Default value for specified <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>.</returns>
            <exception cref="T:System.InvalidCastException">
            If the property value cannot be cast to <typeparamref name="T"/>.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue(Microsoft.SqlServer.Dac.Model.SqlServerVersion)">
            <summary>
            Returns the default property value.
            
            Note: for <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure"/> the default value may depend on the
            <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> being targeted. This method assumes the current default
            version is being used. To get a default value based on a particular for a particular EngineVersion, please use
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue(Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)"/>.
            </summary>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to return the default value for.</param>
            <returns>Default value for specified <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>.</returns>        
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.IsDefaultValue(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.Model.SqlServerVersion)">
            <summary>
            Returns if the value is the platform default value.
            
            Note: for <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure"/> the default value may depend on the
            <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> being targeted. This method assumes the current default
            version is being used. To validate the  default value based on a particular for a particular EngineVersion, please use
            <see cref="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.IsDefaultValue(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)"/>.
            </summary>
            <param name="instance"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> instance to determine the default property value for.</param>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to determine the default value for.</param>
            <returns>True if the property is the platform default. Otherwise false.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="instance"/> is not the owner of this property.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue``1(Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)">
            <summary>
            Returns the default property value.
            Note: for <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure"/> the default value may depend on the
            <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> being targeted. 
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of the property value.</typeparam>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to return the default value for.</param>
            <param name="engineVersion">
            Optional value for the engine version. This maps to the
            <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> property on a model.
            </param>
            <returns>Default value for specified <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>.</returns>
            <exception cref="T:System.InvalidCastException">
            If the property value cannot be cast to <typeparamref name="T"/>.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.GetDefaultValue(Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)">
            <summary>
            Returns the default property value.
            </summary>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to return the default value for.</param>
            <param name="engineVersion">
            Optional value for the engine version. This maps to the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> property on a model.
            </param>
            <returns>Default value for specified <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>.</returns>        
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.IsDefaultValue(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Int32)">
            <summary>
            Returns if the value is the platform default value.
            </summary>
            <param name="instance"><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> instance to determine the default property value for.</param>
            <param name="version">The <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to determine the default value for.</param>
            <param name="engineVersion">
            Optional value for the engine version. This maps to the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion"/> property on a model.
            </param>
            <returns>True if the property is the platform default. Otherwise false.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="instance"/> is not the owner of this property.
            </exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.OwningType">
            <summary>
            Owning <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> for the property, where this 
            property is attached to a Type. Null if this property is on a 
            <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelPropertyClass.OwningRelationship">
            <summary>
            Owning <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> for the property, where this 
            property is attached to a Relationship. Null if this property is on a 
            <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass">
            <summary>
            The metadata class for relationships.
            </summary>
            <remarks>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema"/> metadata classes provide access to the structure and instance data
            within a <c>TSqlSchemaModel</c> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass.Name">
            <summary>
            Relationship name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass.Type">
            <summary>
            Type of the relationship.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass.FromObjectClass">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> of the referencing object for the relationship.
            This represents the class of objects the relationship comes from
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass.SupportedPlatforms">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlPlatforms"/> versions on which this relationship is supported.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass.Properties">
            <summary>
            Properties for the relationship.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance">
            <summary>
            Represents a reference from one <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> to another, which might be unresolved.
            </summary>
            <remarks>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema"/> metadata classes provide access to the structure and instance data
            within a <c>TSqlModelSchema</c> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Relationship">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> this instance represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.FromObject">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> this instance is from. This is the referencing object
            </summary>
            <remarks>
            This property returns null if the relationship is unresolved or refers to elements outside the current <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> this instance references. This is the referenced object.
            </summary>
            <remarks>
            This property returns null if the relationship is unresolved or refers to elements outside the current <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> representing the name of the referenced object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.PropertyContext">
            <summary>
            The context boject to use for property lookup - if this isn't set then <see cref="M:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.GetProperty``1(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)"/>
            is not supported on this <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>. For internal use only
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.GetProperty``1(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Retrieves properties for this relationship instance.
            </summary>
            <typeparam name="T"><see cref="T:System.Type"/> of the property value.</typeparam>
            <param name="property"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelPropertyClass"/> property to retrieve.</param>
            <returns>Property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="property"/> is not supported on this instance.
            </exception>
            <exception cref="T:System.InvalidCastException">
            If the property type cannot be cast to T.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.GetProperty(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Retrieves properties for this relationship instance.
            </summary>
            <param name="property"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelPropertyClass"/> property to retrieve.</param>
            <returns>Property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="property"/> is not supported on this instance.
            </exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Item(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Retrieves properties for this relationship instance.
            </summary>
            <param name="property"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelPropertyClass"/> property to retrieve.</param>
            <returns>Property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="property"/> is not supported on this instance.
            </exception>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelSchema">
            <summary>
            Model schema for TSqlModel
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelSchema.InitializeModelSchema">
            <summary>
            The ModelSchema has static state that is extremely useful when navigating a model's
            contents.  Under normal circumstances (use of ) the static state is indirectly initialized and clients 
            can use the state oblivious to how it has been initialized.  In other heads (commandline / API / unit tests) it is possible
            for the static state to be uninitialized prior to it's being used causing unexpected nulls and failures.  When implementing
            a new head that may directly use the ModelSchema prior to instantiating a TSqlModel call this method prior to
            accessing any static state.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelSchema.GetViewSubroutineAndTriggerClasses">
            <summary>
            Gets the set of classes representing Views, Subroutines and Triggers. This is a common set of classes used during
            analysis
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>es representing view, subroutines and triggers</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelSchema.GetSubroutineClasses">
            <summary>
            Gets the set of classes representing Subroutines. This is a common set of classes used during
            analysis
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>es representing subroutines</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ModelSchema.GetColumnSourceClasses">
            <summary>
            Gets the set of classes representing a potential source of columns. Tables, Views, Functions can all be 
            a source for this
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>es representing view, subroutines and triggers</returns>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SchemaInstance">
            <summary>
            Instance of the model schema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Column">
            <summary>
            Model type class for Column
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ColumnEncryptionKey">
            <summary>
            Model type class for ColumnEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ColumnEncryptionKeyValue">
            <summary>
            Model type class for ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ColumnMasterKey">
            <summary>
            Model type class for ColumnMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableValuedFunction">
            <summary>
            Model type class for TableValuedFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ScalarFunction">
            <summary>
            Model type class for ScalarFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ClrTableOption">
            <summary>
            Model type class for ClrTableOption
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Aggregate">
            <summary>
            Model type class for Aggregate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ApplicationRole">
            <summary>
            Model type class for ApplicationRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Index">
            <summary>
            Model type class for Index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Assembly">
            <summary>
            Model type class for Assembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.AssemblySource">
            <summary>
            Model type class for AssemblySource
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.AsymmetricKey">
            <summary>
            Model type class for AsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.AuditAction">
            <summary>
            Model type class for AuditAction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.AuditActionGroup">
            <summary>
            Model type class for AuditActionGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.AuditActionSpecification">
            <summary>
            Model type class for AuditActionSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.BrokerPriority">
            <summary>
            Model type class for BrokerPriority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.BuiltInServerRole">
            <summary>
            Model type class for BuiltInServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DataType">
            <summary>
            Model type class for DataType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Certificate">
            <summary>
            Model type class for Certificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.CheckConstraint">
            <summary>
            Model type class for CheckConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ClrTypeMethod">
            <summary>
            Model type class for ClrTypeMethod
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ClrTypeMethodParameter">
            <summary>
            Model type class for ClrTypeMethodParameter
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ClrTypeProperty">
            <summary>
            Model type class for ClrTypeProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ColumnStoreIndex">
            <summary>
            Model type class for ColumnStoreIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Contract">
            <summary>
            Model type class for Contract
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Credential">
            <summary>
            Model type class for Credential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseCredential">
            <summary>
            Model type class for DatabaseCredential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.CryptographicProvider">
            <summary>
            Model type class for CryptographicProvider
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseAuditSpecification">
            <summary>
            Model type class for DatabaseAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseDdlTrigger">
            <summary>
            Model type class for DatabaseDdlTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseEncryptionKey">
            <summary>
            Model type class for DatabaseEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseEventNotification">
            <summary>
            Model type class for DatabaseEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseMirroringLanguageSpecifier">
            <summary>
            Model type class for DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseOptions">
            <summary>
            Model type class for DatabaseOptions
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DataCompressionOption">
            <summary>
            Model type class for DataCompressionOption
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Default">
            <summary>
            Model type class for Default
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DefaultConstraint">
            <summary>
            Model type class for DefaultConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DmlTrigger">
            <summary>
            Model type class for DmlTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Endpoint">
            <summary>
            Model type class for Endpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ErrorMessage">
            <summary>
            Model type class for ErrorMessage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventGroup">
            <summary>
            Model type class for EventGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventSession">
            <summary>
            Model type class for EventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.DatabaseEventSession">
            <summary>
            Model type class for DatabaseEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventSessionAction">
            <summary>
            Model type class for EventSessionAction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventSessionDefinitions">
            <summary>
            Model type class for EventSessionDefinitions
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventSessionSetting">
            <summary>
            Model type class for EventSessionSetting
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventSessionTarget">
            <summary>
            Model type class for EventSessionTarget
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EventTypeSpecifier">
            <summary>
            Model type class for EventTypeSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExtendedProcedure">
            <summary>
            Model type class for ExtendedProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExtendedProperty">
            <summary>
            Model type class for ExtendedProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalDataSource">
            <summary>
            Model type class for ExternalDataSource
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalFileFormat">
            <summary>
            Model type class for ExternalFileFormat
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalTable">
            <summary>
            Model type class for ExternalTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalStream">
            <summary>
            Model type class for ExternalStream
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalStreamingJob">
            <summary>
            Model type class for ExternalStreamingJob
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SqlFile">
            <summary>
            Model type class for SqlFile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Filegroup">
            <summary>
            Model type class for Filegroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ForeignKeyConstraint">
            <summary>
            Model type class for ForeignKeyConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.EdgeConstraint">
            <summary>
            Model type class for EdgeConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.FullTextCatalog">
            <summary>
            Model type class for FullTextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.FullTextIndex">
            <summary>
            Model type class for FullTextIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.FullTextIndexColumnSpecifier">
            <summary>
            Model type class for FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.FullTextStopList">
            <summary>
            Model type class for FullTextStopList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.HttpProtocolSpecifier">
            <summary>
            Model type class for HttpProtocolSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.LinkedServer">
            <summary>
            Model type class for LinkedServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.LinkedServerLogin">
            <summary>
            Model type class for LinkedServerLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Login">
            <summary>
            Model type class for Login
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.MasterKey">
            <summary>
            Model type class for MasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.MessageType">
            <summary>
            Model type class for MessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PartitionSpecification">
            <summary>
            Model type class for PartitionSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PartitionFunction">
            <summary>
            Model type class for PartitionFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PartitionScheme">
            <summary>
            Model type class for PartitionScheme
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PartitionValue">
            <summary>
            Model type class for PartitionValue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Permission">
            <summary>
            Model type class for Permission
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PrimaryKeyConstraint">
            <summary>
            Model type class for PrimaryKeyConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Procedure">
            <summary>
            Model type class for Procedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Queue">
            <summary>
            Model type class for Queue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.QueueEventNotification">
            <summary>
            Model type class for QueueEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.RemoteServiceBinding">
            <summary>
            Model type class for RemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ResourceGovernor">
            <summary>
            Model type class for ResourceGovernor
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ResourcePool">
            <summary>
            Model type class for ResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Role">
            <summary>
            Model type class for Role
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.RoleMembership">
            <summary>
            Model type class for RoleMembership
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Route">
            <summary>
            Model type class for Route
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Rule">
            <summary>
            Model type class for Rule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Schema">
            <summary>
            Model type class for Schema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SearchProperty">
            <summary>
            Model type class for SearchProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SearchPropertyList">
            <summary>
            Model type class for SearchPropertyList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SecurityPolicy">
            <summary>
            Model type class for SecurityPolicy
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SecurityPredicate">
            <summary>
            Model type class for SecurityPredicate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Sequence">
            <summary>
            Model type class for Sequence
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerAudit">
            <summary>
            Model type class for ServerAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerAuditSpecification">
            <summary>
            Model type class for ServerAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerDdlTrigger">
            <summary>
            Model type class for ServerDdlTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerEventNotification">
            <summary>
            Model type class for ServerEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerOptions">
            <summary>
            Model type class for ServerOptions
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServerRoleMembership">
            <summary>
            Model type class for ServerRoleMembership
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Service">
            <summary>
            Model type class for Service
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ServiceBrokerLanguageSpecifier">
            <summary>
            Model type class for ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Signature">
            <summary>
            Model type class for Signature
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SignatureEncryptionMechanism">
            <summary>
            Model type class for SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SoapLanguageSpecifier">
            <summary>
            Model type class for SoapLanguageSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SoapMethodSpecification">
            <summary>
            Model type class for SoapMethodSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SpatialIndex">
            <summary>
            Model type class for SpatialIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Statistics">
            <summary>
            Model type class for Statistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Parameter">
            <summary>
            Model type class for Parameter
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SymmetricKey">
            <summary>
            Model type class for SymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SymmetricKeyPassword">
            <summary>
            Model type class for SymmetricKeyPassword
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Synonym">
            <summary>
            Model type class for Synonym
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.Table">
            <summary>
            Model type class for Table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.FileTable">
            <summary>
            Model type class for FileTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableType">
            <summary>
            Model type class for TableType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypeCheckConstraint">
            <summary>
            Model type class for TableTypeCheckConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypeColumn">
            <summary>
            Model type class for TableTypeColumn
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypeDefaultConstraint">
            <summary>
            Model type class for TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypeIndex">
            <summary>
            Model type class for TableTypeIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypePrimaryKeyConstraint">
            <summary>
            Model type class for TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TableTypeUniqueConstraint">
            <summary>
            Model type class for TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.TcpProtocolSpecifier">
            <summary>
            Model type class for TcpProtocolSpecifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.UniqueConstraint">
            <summary>
            Model type class for UniqueConstraint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.User">
            <summary>
            Model type class for User
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.UserDefinedServerRole">
            <summary>
            Model type class for UserDefinedServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.UserDefinedType">
            <summary>
            Model type class for UserDefinedType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.View">
            <summary>
            Model type class for View
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.WorkloadGroup">
            <summary>
            Model type class for WorkloadGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.WorkloadGroupDw">
            <summary>
            Model type class for WorkloadGroupDw
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.WorkloadClassifier">
            <summary>
            Model type class for WorkloadClassifier
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.XmlIndex">
            <summary>
            Model type class for XmlIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.SelectiveXmlIndex">
            <summary>
            Model type class for SelectiveXmlIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.XmlNamespace">
            <summary>
            Model type class for XmlNamespace
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PromotedNodePathForXQueryType">
            <summary>
            Model type class for PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.PromotedNodePathForSqlType">
            <summary>
            Model type class for PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.XmlSchemaCollection">
            <summary>
            Model type class for XmlSchemaCollection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalLibrary">
            <summary>
            Model type class for ExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalLibraryFile">
            <summary>
            Model type class for ExternalLibraryFile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalLanguage">
            <summary>
            Model type class for ExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ModelSchema.ExternalLanguageFile">
            <summary>
            Model type class for ExternalLanguageFile
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass">
            <summary>
             The metadata class for <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s.
            </summary>
            <remarks>
            <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema"/> metadata classes provide access to the structure and instance data
            within a <c>TSqlModelSchema</c> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelTypeClass.Name">
            <summary>
            Type name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelTypeClass.SupportedPlatforms">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlPlatforms"/> versions on which this type is supported.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelTypeClass.Properties">
            <summary>
            Properties for the type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelTypeClass.Relationships">
            <summary>
            Relationships for the type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ModelTypeClass.Metadata">
            <summary>
            Metadata properties for the type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier">
             <summary>
            
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.#ctor(System.String[])">
            <summary>
            Creates a object identifier with a name.
            </summary>
            <param name="parts">The parts of the identifier</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a object identifier with a name.
            </summary>
            <param name="parts">The parts of the identifier</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a object identifier with a name.
            </summary>
            <param name="parts">The parts of the identifier</param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a object identifier with a name that includes external parts.
            </summary>
            <param name="externalParts">External reference parts - used in 3 or 4 part references to
            objects in other databases or servers </param>
            <param name="parts">The parts of the identifier</param>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.Parts">
            <summary>
            Gets the parts of the identifier.
            </summary>
            <returns>The parts of the identifier.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.HasName">
            <summary>
            Does this ObjectIdentifier have any <see cref="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.Parts"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.ExternalParts">
            <summary>
            Gets the external reference parts.  Null if the identifier is not external.
            </summary>
            <returns>The external reference parts.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.HasExternalParts">
            <summary>
            Does this ObjectIdentifier have any <see cref="P:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.ExternalParts"/>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.ObjectIdentifier.ToString">
            <summary>
             Formats and escapes name parts into a single string
            </summary>
            <returns>escaped name.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.RelationshipType">
            <summary>
            Relationship types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RelationshipType.Composing">
            <summary>
            A relationship where the child object cannot be created outside the parent's DDL create statement.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RelationshipType.Hierarchical">
            <summary>
            A relationship where the child object can be created outside the parent's DDL create statement.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RelationshipType.Peer">
            <summary>
            A relationship where the related object must be created outside the parent's DDL create statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion">
            <summary>
            Specific SQL Server releases.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql90">
             <summary>
            on-premises, version 9.0
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql100">
            <summary>
            on-premises, version 10.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure">
            <summary>
            Azure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql110">
            <summary>
            on-premises, version 11.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql120">
            <summary>
            on-premises, version 12.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql130">
            <summary>
            on-premises, version 13.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql140">
            <summary>
            on-premises, version 14.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql150">
            <summary>
            on-premises, version 15.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql160">
            <summary>
            on-premises, version 16.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlDw">
            <summary>
            For Sql Data Warehouse, version SqlDw
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlServerless">
            <summary>
            For Sql Serverless data pools
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlModel">
            <summary>
            Represents a model of a SQL Server database schema.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.IO.Stream,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>
            using the specified <paramref name="options"/> to configure what kind of storage to use, and whether to load a script-backed
            model or not.
            </summary>
            <param name="dacpacStream">A stream that contains the serialized dacpac.</param>
            <param name="options">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> defining how the model should be loaded. For models to be analyzed in static code analysis,
            it's recommended that the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.
            </param>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="dacpacStream"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found using the original path to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.IO.Stream,Microsoft.SqlServer.Dac.Model.ModelLoadOptions,System.Threading.CancellationToken)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>
            using the specified <paramref name="options"/> to configure what kind of storage to use, and whether to load a script-backed
            model or not.
            </summary>
            <param name="dacpacStream">A stream that contains the serialized dacpac.</param>
            <param name="options">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> defining how the model should be loaded. For models to be analyzed in static code analysis,
            it's recommended that the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.
            </param>
            <param name="cancellationToken">A token used for cancelling model loading.</param>
            <exception cref="T:System.OperationCanceledException">When the load operation is canceled.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="dacpacStream"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found using the original path to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions,System.Threading.CancellationToken)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>
            using the specified <paramref name="options"/> to configure what kind of storage to use, and whether to load a script-backed
            model or not.
            </summary>
            <param name="fileName">File path to package.</param> 
            <param name="options">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> defining how the model should be loaded. For models to be analyzed in static code analysis,
            it's recommended that the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.
            </param>
            <param name="cancellationToken">A token used for cancelling model loading.</param>
            <exception cref="T:System.OperationCanceledException">When the load operation is canceled.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="fileName"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found in either the same directory as the package, or using the original path
            to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>
            using the specified <paramref name="options"/> to configure what kind of storage to use, and whether to load a script-backed
            model or not.
            </summary>
            <param name="fileName">File path to package.</param> 
            <param name="options">
            The <see cref="T:Microsoft.SqlServer.Dac.Model.ModelLoadOptions"/> defining how the model should be loaded. For models to be analyzed in static code analysis,
            it's recommended that the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.
            </param>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="fileName"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found in either the same directory as the package, or using the original path
            to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDatabase(System.String,Microsoft.SqlServer.Dac.Model.ModelExtractOptions,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Loads a model from a database using the specified <paramref name="options"/>.
            </summary>
            <param name="connectionString">A connection string specifying the database and catalog to load.</param>
            <param name="options">
            Optional <see cref="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions"/> instance used to specify options that affect the behavior of package extraction.
            For models to be analyzed in static code analysis, it's recommended that the 
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.</param> 
            <param name="cancellationToken">Optional cancellation token used to cancel a load operation.</param>
            <exception cref="T:System.ArgumentNullException">If connectionString is null.</exception>
            <exception cref="T:System.ArgumentException">If connectionString is not a valid connection string
            or options.Storage is not a valid value of the enumerated type.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">
            If there are problems extracting the model from the specified database. 
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDatabaseWithAuthProvider(System.String,Microsoft.SqlServer.Dac.IUniversalAuthProvider,Microsoft.SqlServer.Dac.Model.ModelExtractOptions,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Loads a model from a database using the specified <paramref name="options"/>.
            </summary>
            <param name="connectionString">A connection string specifying the database and catalog to load.</param>
            <param name="authProvider"> 
            Optional universal authentication provider used to authenticate a <see cref="T:System.Data.SqlClient.SqlConnection"/> when opening a connection.</param>
            <param name="options">
            Optional <see cref="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions"/> instance used to specify options that affect the behavior of package extraction.
            For models to be analyzed in static code analysis, it's recommended that the 
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.</param> 
            <param name="cancellationToken">Optional cancellation token used to cancel a load operation.</param>
            <exception cref="T:System.ArgumentNullException">If connectionString is null.</exception>
            <exception cref="T:System.ArgumentException">If connectionString is not a valid connection string
            or options.Storage is not a valid value of the enumerated type.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">
            If there are problems extracting the model from the specified database. 
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDatabase(System.String,System.Security.SecureString,Microsoft.SqlServer.Dac.Model.ModelExtractOptions,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Loads a model from a database using the specified <paramref name="options"/>.
            </summary>
            <param name="connectionString">A connection string specifying the database and catalog to load.</param>
            <param name="password">This password string used when connecting to the specified database.</param>
            <param name="options">
            Optional <see cref="T:Microsoft.SqlServer.Dac.Model.ModelExtractOptions"/> instance used to specify options that affect the behavior of package extraction.
            For models to be analyzed in static code analysis, it's recommended that the 
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelExtractOptions.LoadAsScriptBackedModel"/> be set to true. This is important since some
            rules may not work as expected unless this is true.</param> 
            <param name="cancellationToken">Optional cancellation token used to cancel a load operation.</param>
            <exception cref="T:System.ArgumentNullException">If connectionString is null.</exception>
            <exception cref="T:System.ArgumentException">If connectionString is not a valid connection string
            or options.Storage is not a valid value of the enumerated type.</exception>
            <exception cref="T:Microsoft.SqlServer.Dac.DacServicesException">
            If there are problems extracting the model from the specified database. 
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.#ctor(System.String)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>.
            
            This is equivalent to calling <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with default values.
            </summary>
            <param name="fileName">File path to package.</param> 
            <remarks>
            By default DacSchemaModelStorageType.Memory is used for the model storage format.
            The dacpac model will not be script-backed as the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> will be set to false.
            Using <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/>
            set to true is recommended if the model will be used by the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> for static code analysis.
            </remarks>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="fileName"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found in either the same directory as the package, or using the original path
            to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.#ctor(System.String,Microsoft.SqlServer.Dac.DacSchemaModelStorageType)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>.
            
            This is equivalent to calling <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with default values for
            everything except the <paramref name="modelStorageType"/>.
            </summary>
            <param name="fileName">File path to package.</param>
            <param name="modelStorageType">
            Backing storage type for package instance.
            </param>
            <remarks>
            The dacpac model will not be script-backed as the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> will be set to false.
            Using <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/>
            set to true is recommended if the model will be used by the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> for static code analysis.
            </remarks>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="fileName"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found in either the same directory as the package, or using the original path
            to the reference.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.#ctor(System.String,Microsoft.SqlServer.Dac.DacSchemaModelStorageType,System.Threading.CancellationToken)">
            <summary>
            Loads a model from a <see cref="T:Microsoft.SqlServer.Dac.DacPackage"/> or <see cref="T:Microsoft.SqlServer.Dac.BacPackage"/>.
            
            This is equivalent to calling <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with default values for
            everything except the <paramref name="modelStorageType"/>.
            </summary>
            <param name="fileName">File path to package.</param>
            <param name="modelStorageType">
            Backing storage type for package instance.
            </param>
            <param name="cancellationToken">A token used for cancelling model loading.</param>
            <remarks>
            The dacpac model will not be script-backed as the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/> will be set to false.
            Using <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.LoadFromDacpac(System.String,Microsoft.SqlServer.Dac.Model.ModelLoadOptions)"/> with <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/>
            set to true is recommended if the model will be used by the <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/> for static code analysis.
            </remarks>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If there are problems loading the package from the specified <paramref name="fileName"/>. 
            This may occur if the package does not load correctly or if references required by
            the package are not found in either the same directory as the package, or using the original path
            to the reference.
            </exception>
            <exception cref="T:System.OperationCanceledException">When the load operation is canceled.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.#ctor(Microsoft.SqlServer.Dac.Model.SqlServerVersion,Microsoft.SqlServer.Dac.Model.TSqlModelOptions)">
            <summary>
            Creates an empty model that targets a specific <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>
            </summary>
            <param name="modelTargetVersion">The version of SQL Server to target</param>
            <param name="modelCreationOptions">Options defining model properties, 
            including the collation and how to store the model (in memory or file backed)
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjectService">
            <summary>
            Internal method - for testing and utility purposes only
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObject(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Returns <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s  of the specified <paramref name="objectType" value="type"/> and <paramref name="id" value="identity"/>.
            Only top level <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types are supported by this method - the <paramref name="objectType" value="type"/> parameter
            must be in the types returned from the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> method or the call will fail.
            </summary>
            <param name="objectType">Type filter. Must be in the list of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types returned from
            the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> method or the call will fail. </param>
            <param name="id">Unique identity of <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> to return.</param>
            <param name="queryScopes">Scope filter for queried objects.</param>
            <returns>Single TSqlObject or null.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the supplied <paramref name="objectType"/> and <paramref name="id"/> result in multiple <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s,
            or if the <paramref name="objectType"/> is not a top level type.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="id"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="objectType"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.DacQueryScopes,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s matching the list of <paramref name="typeFilters"/>.
            Only top level <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types are supported by this method - all types in the
            <paramref name="typeFilters" value="type"/> parameter
            must be present in the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> or the call will fail.
            </summary>
            <param name="queryScopes">Scope filter for queried objects. Must be in the list of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types returned from
            the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> method or the call will fail.</param>
            <param name="typeFilters">List of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>s to return.</param>
            <returns>All <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s that match <paramref name="typeFilters"/>.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If any of the types in the <paramref name="typeFilters"/> parameter are not a top level type.
            </exception>
            <remarks>
            If no <paramref name="typeFilters"/> are supplied all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s are returned.
            </remarks>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s that match the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> and <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/>.
            Only top level <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types are supported by this method - the <paramref name="objectType" value="type"/> parameter
            must be in the types returned from the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> method or the call will fail.
            </summary>
            <param name="objectType">Type Filter. Must be in the list of <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/> types returned from
            the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes"/> method or the call will fail.</param>
            <param name="id">Identity of the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s to return.</param>
            <param name="queryScopes">Scope filter for queried objects.</param>
            <returns>All <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s that match the <paramref name="objectType"/> and <paramref name="id"/>.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If the <paramref name="objectType"/> is not a top level type.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="id"/> is null.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="objectType"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(System.String,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s in a given <paramref name="sourceName"/> document filtered by <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>s
            specified by the <paramref name="typeFilters"/> parameter.
            </summary>
            <param name="sourceName">Name of the source document</param>
            <param name="typeFilters">Array of ModelTypeClass that the resulting <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> should be filtered on.</param>
            <returns>List of <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s</returns>
            <remarks>
            If no <paramref name="typeFilters"/> are supplied all <see cref="T:Microsoft.SqlServer.Dac.Model.ModelTypeClass"/>s are returned.
            </remarks>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetModelErrors">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.DacModelError"/>s that are present in the model.
            </summary>
            <remarks>
            Load the model with <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ThrowOnModelErrors"/> set to false to retrieve model errors.
            Refer <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.ThrowOnModelErrors"/> for more information on model errors.
            </remarks>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddObjects(System.String)">
            <summary>
            Adds objects to the model based on the contents of a TSql Script string. 
            The script should consist of valid TSql DDL statements.
            
            Objects added using this method cannot be updated or deleted at a later point 
            as update/delete requires a script name to be specified when adding the objects. If this
            is a requirement use the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> 
            method instead.
            </summary>
            <param name="inputScript">Script containing TSql DDL statements</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddObjects(System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)">
            <summary>
            Add Objects to the model based on the contents of a TSql Script string, 
            plus additional metadata defined by a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions"/> object
            The script should consist of valid TSql DDL statements. 
            
            Objects added using this method cannot be updated or deleted at a later point 
            as update/delete requires a script name to be specified when adding the objects. If this
            is a requirement use the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> 
            method instead.
            </summary>
            <param name="inputScript">Script containing TSql DDL statements</param>
            <param name="options">Options defining how to interpret the script</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddObjects(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript)">
            <summary>
            Adds objects to the model based on the contents of a <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> object. 
            The script should be valid TSql with no parse errors. 
            
            Objects added using this method cannot be updated or deleted at a later point 
            as update/delete requires a script name to be specified when adding the objects. If this
            is a requirement use the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> 
            method instead.
            </summary>
            <param name="inputScript">The <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> to add</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddObjects(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)">
            <summary>
            Add Objects to the model based on the contents of a <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> object, 
            plus additional metadata defined by a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions"/> object
            The script should be valid TSql with no parse errors. 
            
            Objects added using this method cannot be updated or deleted at a later point 
            as update/delete requires a script name to be specified when adding the objects. If this
            is a requirement use the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)"/> 
            method instead.
            </summary>
            <param name="inputScript">The <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> to add</param>
            <param name="options">Options defining how to interpret the script</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(System.String,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)">
            <summary>
            Adds or updates the objects defined for a specified <paramref name="sourceName"/> with the
            objects defined in the <paramref name="inputScript"/>. If any objects were previously added
            with the same <paramref name="sourceName"/> these will be completely replaced
            The object definitions are based on the contents of a TSql Script string 
            plus additional metadata defined by a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions"/> object
            The script should consist of valid TSql DDL statements. 
            </summary>
            <param name="inputScript">Script containing TSql DDL statements</param>
            <param name="sourceName">
            A name to identify the <paramref name="inputScript"/>, for example a 
            fileName such as "MyTable.sql" or simply an alias like "dbo.Table". 
            Scripts are cached and TSqlObjects are linked to the source name.
            Any future Update/Delete operations will remove all existing objects
            with the same script name and replace them with the new objects.
            </param>
            <param name="options">Options defining how to interpret the script</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the supplied <paramref name="sourceName"/> is null or whitespace, or if it ends
            in ".xsd". 
            Note: source names ending in ".xsd" are currently not supported. These relate 
            to Xml Schema Collections and adding of these is currently not supported in the public API.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.AddOrUpdateObjects(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript,System.String,Microsoft.SqlServer.Dac.Model.TSqlObjectOptions)">
            <summary>
            Adds or updates the objects defined for a specified <paramref name="sourceName"/> with the
            objects defined in the <paramref name="inputScript"/>. If any objects were previously added
            with the same <paramref name="sourceName"/> these will be completely replaced
            The object definitions are based on the contents of a <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> object
            plus additional metadata defined by a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions"/> object
            The script should consist of valid TSql DDL statements. 
            </summary>
            <param name="inputScript">Script containing TSql DDL statements</param>
            <param name="sourceName">
            A name to identify the <paramref name="inputScript"/>, for example a 
            fileName such as "MyTable.sql" or simply an alias like "dbo.Table". 
            Scripts are cached and TSqlObjects are linked to the source name.
            Any future Update/Delete operations will remove all existing objects
            with the same script name and replace them with the new objects.
            </param>
            <param name="options">Options defining how to interpret the script</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="inputScript"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the supplied <paramref name="sourceName"/> is null or whitespace, or if it ends
            in ".xsd". 
            Note: source names ending in ".xsd" are currently not supported. These relate 
            to Xml Schema Collections and adding of these is currently not supported in the public API.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.DeleteObjects(System.String)">
            <summary>
            Deletes any objects that were added to the model with the specified <paramref name="sourceName"/>.
            </summary>
            <param name="sourceName">
            A name to identify the source to be deleted, for example a 
            fileName such as "MyTable.sql" or simply an alias like "dbo.Table". 
            Scripts are cached and TSqlObjects are linked to the source name.
            </param>
            <exception cref="T:System.ArgumentException">
            If the supplied <paramref name="sourceName"/> is null or whitespace, or if it ends
            in ".xsd". 
            Note: source names ending in ".xsd" are currently not supported. These relate 
            to Xml Schema Collections and adding of these is currently not supported in the public API.
            </exception>
            <exception cref="T:System.Runtime.Remoting.RemotingException">
            If communication with the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObjectService"/> fails.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.ConvertToScriptedObject(Microsoft.SqlServer.Dac.Model.TSqlObject,System.String)">
            <summary>
            Converts a specific top-level object in the model into a scripted representation of itself.
            This is useful when starting from a database sourced model and the caller wishes to modify this
            object's contents.  
            </summary>
            <param name="tSqlObject">Object to convert. Must not be null</param>
            <param name="sourceName">Optional source name. If left null a default name will be generated
            for the object. This name can be found using <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetSourceInformation"/>'s 
            SourceName property.
            </param>
            <returns>New copy of the TSqlObject, which will now be script-backed.
            Or if the object was already script-backed, will simply return this object
            </returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            Thrown if the object could not be scripted out, this class of object is never scriptable,
            or errors were found in the model during the script process
            </exception>
            <exception cref="T:System.ArgumentException">If the oject is null, or if whitespace is used for the source name</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.Validate">
            <summary>
            Validates the model and returns a list of messages with any errors/warnings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.CheckVersionCompatibility(Microsoft.SqlServer.Dac.Model.SqlServerVersion,System.Threading.CancellationToken)">
            <summary>
            Validates the model to determine whether it contains any elements that are not compatible with a target version of SQL Server or Azure SQL Database, 
            and returns any errors or warnings.
            </summary>
            <param name="targetVersion">The target sql version of the export</param>
            <param name="cancelToken">A token used for cancelling the model check.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModel.Version">
            <summary>
            The specific SQL Server release targeted by the model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModel.EngineVersion">
            <summary>
            The specific engine version targeted by the model.
            
            For On Premises platforms this will be consistent with the <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> - for instance
            <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.Sql90"/> will have an engine version of 9.
            
            For Microsoft Azure SQL Database the minimum valid version is 11, and the engine version will affect
            what features are supported in the model.  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModel.IsScriptBacked">
            <summary>
            Is this a model that is backed by scripts? In this case objects in the 
            <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.UserDefined"/> scope will have source position information including 
            a source name and information. This is important for scenarios such as use of the 
            <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.CodeAnalysisService"/>. 
            
            Any empty <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> created will be script-backed by default. Models loaded
            from a Dacpac will only be scipt backed if the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelLoadOptions.LoadAsScriptBackedModel"/>
            option is enabled. Note that creating a script-backed model will take longer than using a standard model
            loaded from a Dacpac
            
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.CopyModelOptions">
            <summary>
            Copies the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> for the model to a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelOptions"/> object.
            This is useful if you wish to duplicate the options for a model when creating a new model.
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModelOptions"/> with settings matching the database options of the 
            model</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModel.DisplayServices">
            <summary>
            Gets the <see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.DisplayServices"/> that support producing display properties for
            objects in the model.  
            </summary>
            <returns><see cref="P:Microsoft.SqlServer.Dac.Model.TSqlModel.DisplayServices"/></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModel.CollationComparer">
            <summary>
            Comparer that can compare strings and <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/>s using the collation of this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>.
            This can be very useful when comparing objects in the model since comparisons will be consistent with the expected comparison
            results in SQL Server
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModel.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlModelOptions">
            <summary>
            Defines model wide options
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.#ctor">
            <summary>
            Constructs the TSqlModelOptions
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.#ctor(Microsoft.SqlServer.Dac.Model.TSqlModelOptions)">
            <summary>
            Constructs the TSqlModelOptions based on an existing options object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.Collation">
            <summary>
            Specifies the Collation to use for the model. This is a 
            string such as "SQL_Latin1_General_CP1_CI_AS", which must
            be a valid SQL Server Collation Name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.StorageType">
            <summary>
            Specifies the storage type - in memory or file backed. 
            Default value is <see cref="F:Microsoft.SqlServer.Dac.DacSchemaModelStorageType.Memory"/>
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AllowSnapshotIsolation">
            <summary>
            Specifies the ALLOW_SNAPSHOT_ISOLATION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TransactionIsolationReadCommittedSnapshot">
            <summary>
            Specifies the READ_COMMITTED_SNAPSHOT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.MemoryOptimizedElevateToSnapshot">
            <summary>
            Specifies the MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AnsiNullDefaultOn">
            <summary>
            Specifies the ANSI_NULL_DEFAULT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AnsiNullsOn">
            <summary>
            Specifies the ANSI_NULLS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AnsiPaddingOn">
            <summary>
            Specifies the ANSI_PADDING database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AnsiWarningsOn">
            <summary>
            Specifies the ANSI_WARNINGS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ArithAbortOn">
            <summary>
            Specifies the ARITH_ABORT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoClose">
            <summary>
            Specifies the AUTO_CLOSE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoCreateStatistics">
            <summary>
            Specifies the AUTO_CREATE_STATISTICS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoCreateStatisticsIncremental">
            <summary>
            Specifies the AUTO_CREATE_STATISTICS INCREMENTAL database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoShrink">
            <summary>
            Specifies the AUTO_SHRINK database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoUpdateStatistics">
            <summary>
            Specifies the AUTO_UPDATE_STATISTICS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.AutoUpdateStatisticsAsync">
            <summary>
            Specifies the AUTO_UPDATE_STATISTICS_ASYNC database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.CatalogCollation">
            <summary>
            Specifies the CATALOG_COLLATION_TYPE database option
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ChangeTrackingAutoCleanup">
            <summary>
            Specifies the AUTO_CLEANUP database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ChangeTrackingEnabled">
            <summary>
            Specifies the CHANGE_TRACKING database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ChangeTrackingRetentionPeriod">
            <summary>
            Specifies the period of the CHANGE_RETENTION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ChangeTrackingRetentionUnit">
            <summary>
            Specifies the unit of the CHANGE_RETENTION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.CompatibilityLevel">
            <summary>
            Specifies the COMPATIBILITY_LEVEL database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ConcatNullYieldsNull">
            <summary>
            Specifies the CONCAT_NULL_YIELDS_NULL database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.Containment">
            <summary>
            Specifies the CONTAINMENT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.CursorCloseOnCommit">
            <summary>
            Specifies the CURSOR_CLOSE_ON_COMMIT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.CursorDefaultGlobalScope">
            <summary>
            Specifies the CURSOR_DEFAULT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DatabaseStateOffline">
            <summary>
            Specifies the ONLINE | OFFLINE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DateCorrelationOptimizationOn">
            <summary>
            Specifies the DATE_CORRELATION_OPTIMIZATION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DefaultFullTextLanguage">
            <summary>
            Specifies the DEFAULT_FULLTEXT_LANGUAGE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DefaultLanguage">
            <summary>
            Specifies the DEFAULT_LANGUAGE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DBChainingOn">
            <summary>
            Specifies the DB_CHAINING database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigLegacyCardinalityEstimation">
            <summary>
            Specifies the Database Scoped Configuration LEGACY_CARDINALITY_ESTIMATION option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigLegacyCardinalityEstimationSecondary">
            <summary>
            Specifies the Database Scoped Configuration LEGACY_CARDINALITY_ESTIMATION option for secondaries.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigMaxDOP">
            <summary>
            Specifies the Database Scoped Configuration MAXDOP option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigMaxDOPSecondary">
            <summary>
            Specifies the Database Scoped Configuration MAXDOP option for secondaries.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigParameterSniffing">
            <summary>
            Specifies the Database Scoped Configuration PARAMETER_SNIFFING option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigParameterSniffingSecondary">
            <summary>
            Specifies the Database Scoped Configuration PARAMETER_SNIFFING option for secondaries.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigQueryOptimizerHotfixes">
            <summary>
            Specifies the Database Scoped Configuration QUERY_OPTIMIZER_HOTFIXES option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigQueryOptimizerHotfixesSecondary">
            <summary>
            Specifies the Database Scoped Configuration QUERY_OPTIMIZER_HOTFIXES option for secondaries.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DbScopedConfigDWCompatibilityLevel">
            <summary>
            Specifies the Database Scoped Configuration DWCompatibilityLevel option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.FileStreamDirectoryName">
            <summary>
            Specifies the DIRECTORY_NAME database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.FullTextEnabled">
            <summary>
            Specifies the sp_fulltext_database database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.HonorBrokerPriority">
            <summary>
            Specifies the HONOR_BROKER_PRIORITY database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.NestedTriggersOn">
            <summary>
            Specifies the NESTED_TRIGGER database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.NonTransactedFileStreamAccess">
            <summary>
            Specifies the NON_TRANSACTED_ACCESS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.NumericRoundAbortOn">
            <summary>
            Specifies the NUMERIC_ROUNDABORT database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.PageVerifyMode">
            <summary>
            Specifies the PAGE_VERIFY database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ParameterizationOption">
            <summary>
            Specifies the PARAMETERIZATION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreCaptureMode">
            <summary>
            Specifies the query capture mode of QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreDesiredState">
            <summary>
            Specifies the operation mode of QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreFlushInterval">
            <summary>
            Specifies the Flush_Interval_Seconds setting of the QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreIntervalLength">
            <summary>
            Specifies the Interval_Length_Minutes setting of the QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreMaxStorageSize">
            <summary>
            Specifies the Max_Storage_Size_MB setting of the QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreMaxPlansPerQuery">
            <summary>
            Specifies the Max_Plans_Per_Query setting of the QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QueryStoreStaleQueryThreshold">
            <summary>
            Specifies the Stale_Query_Threshold_Days setting of the QUERY_STORE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.QuotedIdentifierOn">
            <summary>
            Specifies the QUOTED_IDENTIFIER database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ReadOnly">
            <summary>
            Specifies the READ_ONLY | READ_WRITE database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.RecoveryMode">
            <summary>
            Specifies the RECOVERY database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DelayedDurabilityMode">
            <summary>
            Specifies the DELAYED_DURABILITY database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.RecursiveTriggersOn">
            <summary>
            Specifies the RECURSIVE_TRIGGERS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.ServiceBrokerOption">
            <summary>
            Specifies the ENABLE_BROKER | DISABLE_BROKER | NEW_BROKER | ERROR_BROKER_CONVERSATIONS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.EngineVersion">
            <summary>
            Specifies what engine version should be targeted by the model.
            For On Premises platforms this value will be ignored as the engine version is fixed based on the platform.
            For the <see cref="F:Microsoft.SqlServer.Dac.Model.SqlServerVersion.SqlAzure"/> platform this value will be set and used
            to specify what T-SQL language features are supported. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.SupplementalLoggingOn">
            <summary>
            Specifies the SUPPLEMENTAL_LOGGING database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TargetRecoveryTimePeriod">
            <summary>
            Specifies the period of the TARGET_RECOVERY_TIME database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TargetRecoveryTimeUnit">
            <summary>
            Specifies the unit of the TARGET_RECOVERY_TIME database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TornPageProtectionOn">
            <summary>
            Specifies the TORN_PAGE_DETECTION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TransformNoiseWords">
            <summary>
            Specifies the TRANSFORM_NOISE_WORDS database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.Trustworthy">
            <summary>
            Specifies the TRUSTWORTHY database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.TwoDigitYearCutoff">
            <summary>
            Specifies the TWO_DIGIT_YEAR_CUTOFF database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.VardecimalStorageFormatOn">
            <summary>
            Specifies the sp_db_vardecimal_storage_format database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.UserAccessOption">
            <summary>
            Specifies the SINGLE_USER | RESTRICTED_USER | MULTI_USER database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.WithEncryption">
            <summary>
            Specifies the ENCRYPTION database option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.DataRetentionEnabled">
            <summary>
            Specifies the Data Retention database option.
            Enabled only for Edge as of Now
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlModelOptions.Copy(Microsoft.SqlServer.Dac.Model.TSqlModelOptions,Microsoft.SqlServer.Dac.Model.TSqlModelOptions)">
            <summary>
            Copies deployment options between objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlModelSchema">
            <summary>
            Defines a schema for a relational TSQL database model.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.TopLevelTypes">
            <summary>
            All top level types supported in the model. These are the only types that
            can be queried for via the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObject(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)"/> and 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.DacQueryScopes,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])"/> 
            API calls.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlModelSchema.AllTypes">
            <summary>
            All types supported in the model. This will include types that are cannot be queried for using
            the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObject(Microsoft.SqlServer.Dac.Model.ModelTypeClass,Microsoft.SqlServer.Dac.Model.ObjectIdentifier,Microsoft.SqlServer.Dac.Model.DacQueryScopes)"/> and 
            <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlModel.GetObjects(Microsoft.SqlServer.Dac.Model.DacQueryScopes,Microsoft.SqlServer.Dac.Model.ModelTypeClass[])"/> 
            API calls.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlObject">
            <summary>
            Represents an instance of an object for a SQL Server database schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObject.Name">
            <summary>
            Identity of the object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObject.ObjectType">
            <summary>
            Type of the object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetAst(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)">
            <summary>
            Attempts to generate an AST for the object. AST generation is only supported for top-level objects, with certain
            objects such as the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> and inline constraints not supporting AST generation even though
            they are top level types.
            
            The generated AST is a newly generated object that defines the information about this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and any objects
            that would be scripted together with it. For example a Table would also script out the Columns and inline constraint definitions of a Table. 
            This method can be used to copy object information from one model to another, or to script out information about
            objects in the model.
            </summary>
            <param name="objectAst">Returns the generated AST if the call succeeded.</param>
            <returns>True if AST generated. Otherwise false.</returns>
            <remarks>
            The Ast will not have information about the original source position, such as the original source name and original
            position in an input script.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetAst">
            <summary>
            Generates a new <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript"/> representing the AST for the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, if this is
            supported for the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>. AST generation is only supported for top-level objects, with certain
            objects such as the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> and inline constraints not supporting AST generation even though
            they are top level types. If it's unknown whether the object is capable of being scripted
            then the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetAst(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)"/> method should be used instead.
            
            The generated AST is a newly generated object that defines the information about this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and any objects
            that would be scripted together with it. For example a Table would also script out the Columns and inline constraint definitions of a Table. 
            This method can be used to copy object information from one model to another, or to script out information about
            objects in the model.
            </summary>
            <remarks>
            The AST will not have information about the original source position, such as the original source name and original
            position in an input script.
            </remarks>
            <returns>The generated AST object.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> is not a top level statement object or if it does not support AST generation (for example
            if it is a <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> or a constraint that was originally defined inline with a Table).
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetScript(System.String@)">
            <summary>
            Attempts to generate a CREATE script from the objects AST. AST generation is only supported for top-level objects, with certain
            objects such as the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> and inline constraints not supporting AST generation even though
            they are top level types. If it's unknown whether the object is capable of being scripted
            then the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetAst(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)"/> method should be used instead.
            </summary>
            <param name="objectScript">The DDL Creation script for the object </param>
            <returns>True if the DDL creation script was created.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetScript">
            <summary>
            Generates a CREATE script from the objects AST. AST generation is only supported for top-level objects, with certain
            objects such as the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> and inline constraints not supporting AST generation even though
            they are top level types. If it's unknown whether the object is capable of being scripted
            then the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetAst(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)"/> method should be used instead.
            </summary>
            <returns>DDL Creation script</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> is not a top level statement object or if it does not support script generation (for example
            if it is a <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> or a constraint that was originally defined inline with a Table).
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetSourceFragment">
            <summary>
            Note: Internal only for now. Dacpacs and database-targeted models will not have any source fragment information. 
             
            Gets the <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> which defines the object - may be null. This is the fragment from the original source,
            with original source position information (if available). 
            
            This should not be used when copying the object to a different model or when doing any external 
            manipulation of the object - in those cases the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.TryGetAst(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlScript@)"/> method should be used to get a 
            self-contained AST describing this Object.
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/>, or null if this was not present</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetProperty``1(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Returns the property value.
            </summary>
            <typeparam name="T">Property type.</typeparam>
            <param name="property">Property.</param>
            <returns>Property Value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <paramref name="property"/> does not exists on the object.
            </exception>
            <exception cref="T:System.InvalidCastException">
            If the property type cannot be cast to T.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetProperty(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Returns the property value.
            </summary>
            <param name="property">Property.</param>
            <returns>Property Value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <paramref name="property"/> does not exists on the object.
            </exception>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObject.Item(Microsoft.SqlServer.Dac.Model.ModelPropertyClass)">
            <summary>
            Returns the property value.
            </summary>
            <param name="property">Property.</param>
            <returns>Property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <paramref name="property"/> does not exists on the object.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetMetadata``1(Microsoft.SqlServer.Dac.Model.ModelMetadataClass)">
            <summary>
            Returns the metadata property value.
            </summary>
            <typeparam name="T">Metadata property type.</typeparam>
            <param name="metadata">Metadata property name.</param>
            <returns>Metadata property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <paramref name="metadata"/> does not exists on the object.
            </exception>
            <exception cref="T:System.InvalidCastException">
            If the metadata property type cannot be cast to T.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetMetadata(Microsoft.SqlServer.Dac.Model.ModelMetadataClass)">
            <summary>
            Returns the metadata property value.
            </summary>
            <param name="metadata">Metadata property name.</param>
            <returns>Metadata property value.</returns>
            <exception cref="T:Microsoft.SqlServer.Dac.Model.DacModelException">
            If <paramref name="metadata"/> does not exists on the object.
            </exception>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetParent">
            <summary>
            Returns the parent <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, if it is within the
            <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope and if there is only one <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>
            that could be the parent for this object..
            </summary>
            <returns>Parent object others null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetParent(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Returns the parent <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, if it is within the
            specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope and if there is only one <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>
            that could be the parent for this object.
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns>Parent object or else null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetChildren">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> child objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope.
            </summary>
            <returns>All children.</returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetChildren(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Returns all <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> child objects within the specified
            <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope.
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns>All children.</returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferenced">
            <summary>
            Gets all referenced objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referenced by this object</returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned. Use <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances"/> for a listing
            of all possible referenced elements.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferenced(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Gets all referenced objects within a given <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope.
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referenced by this object</returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned. Use <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances"/> for a listing
            of all possible referenced elements.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferenced(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass)">
            <summary>
            Gets referenced objects for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>,
            where objects are within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referenced by this object for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/></returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned. Use <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances"/> for a listing
            of all possible referenced elements.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferenced(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Gets referenced objects for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>,
            where objects are within a given <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope.
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship to query for</param>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referenced by this object for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/></returns>
            <remarks>
            References to elements not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/> are not returned. Use <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances"/> for a listing
            of all possible referenced elements.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances">
            <summary>
            For each object referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.Default"/> scope will be returned.
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            For each object referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope will be returned.
            To return non-composite or system references the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes)"/> method should be called instead
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass)">
            <summary>
            For objects referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> with a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>, 
            returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes.Default"/> scope will be returned.
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            For objects referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> with a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>, 
            returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope will be returned.
            To return non-composite or system references the <see cref="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes)"/> method should be called instead
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes)">
            <summary>
            For each object referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope will be returned.
            To return non-composite or system references the scope must be set to include externals. In addition, in this case only the
            <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> of the referenced object will be returned
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencedRelationshipInstances(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass,Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes)">
            <summary>
            For objects referenced by this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> with a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>, 
            returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. This will include the referenced object if it exists, the <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> used to identify the
            referenced object, and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes"/> scope will be returned.
            To return non-composite or system references the scope must be set to include externals. In addition, in this case only the
            <see cref="T:Microsoft.SqlServer.Dac.Model.ObjectIdentifier"/> of the referenced object will be returned
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacExternalQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referenced by it</returns>
            <remarks>
            The <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.Object"/> field may be null if the element is not in the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/>. In these cases the
            <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.ObjectName"/> field can be used to query information about the referenced object
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.VerifyRelationshipOwner(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass)">
            <summary>
            Verifies this object's class owns the relationship. Only valid for referenced relationships - referencing could be anything
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencing">
            <summary>
            Gets all referencing objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referencing this object</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencing(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Gets all referencing objects within a given <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope.
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referencing this object</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencing(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass)">
            <summary>
            Gets referencing objects, 
            where the relationship is defined by a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> 
            and where objects are within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referencing this object for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencing(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            Gets referencing objects, 
            where the relationship is defined by a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> 
            and where objects are within a given <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope.
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship to query for</param>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>s referencing this object for a given <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencingRelationshipInstances">
            <summary>
            For each object referencing this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. 
            This will include the referencing object - definedby the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.FromObject"/> field, 
            and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope will be returned.
            </summary>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referencing it</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencingRelationshipInstances(Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            For each object referencing this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>, returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining
            the relationship data. 
            This will include the referencing object - definedby the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.FromObject"/> field, 
            and any properties specific to this relationship.
            Only objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope will be returned.
            </summary>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referencing it</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencingRelationshipInstances(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass)">
            <summary>
            For each object referencing this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> with a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>,
            returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining the relationship data. 
            This will include the referencing object - definedby the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.FromObject"/> field, 
            and any properties specific to this relationship.
            Only objects within the <see cref="F:Microsoft.SqlServer.Dac.Model.DacQueryScopes.Default"/> scope will be returned.
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referencing it
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetReferencingRelationshipInstances(Microsoft.SqlServer.Dac.Model.ModelRelationshipClass,Microsoft.SqlServer.Dac.Model.DacQueryScopes)">
            <summary>
            For each object referencing this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> with a specific <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/>,
            returns the <see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/> defining the relationship data. 
            This will include the referencing object - definedby the <see cref="P:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance.FromObject"/> field, 
            and any properties specific to this relationship.
            Only objects within the specified <see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> scope will be returned.
            </summary>
            <param name="relationshipType"><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipClass"/> defining the relationship class to query for</param>
            <param name="queryScopes"><see cref="T:Microsoft.SqlServer.Dac.Model.DacQueryScopes"/> defining the scope objects must exist in.</param>
            <returns><see cref="T:Microsoft.SqlServer.Dac.Model.ModelRelationshipInstance"/>s defining the relationships between this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> and the objects
            referencing it
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetSourceInformation">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Dac.SourceInformation"/> for this object, if this is available
            </summary>
            <returns>
            If source information is available returns the <see cref="T:Microsoft.SqlServer.Dac.SourceInformation"/> specifying the name of the script 
            this object is found in, plus start line and column. These values may be null or -1 if no source position information is present
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.Equals(System.Object)">
            <summary>
            Checks if this <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> is equal to another <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> 
            </summary>
            <param name="obj">object to compare</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.GetHashCode">
            <summary>
            Gets the Hashcode for this object
            </summary>
            <returns>int hashcode</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObject.ContextObject">
            <summary>
            Returns the context object for this Sql Object
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.Model.TSqlObject.UpdateContextObject(System.Object)">
            <summary>
            Internal method that updates the context object for the public <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>
            wrapper. Should only be called if the original context object is no longer valid, for instance
            if it has been deleted from the model.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions">
            <summary>
            Defines options to be used for specific TSqlObjects 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions.QuotedIdentifier">
            <summary>
            Specifies if the QUOTED_IDENTIFIER setting for objects is on or off
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TSqlObjectOptions.AnsiNulls">
            <summary>
            Specifies if the the ANSI_NULLS connection setting for objects is on or off
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TSqlPlatforms">
            <summary>
            Specific SQL Server releases.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql90">
             <summary>
            on-premises, version 9.0
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql100">
            <summary>
            on-premises, version 10.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.SqlAzure">
            <summary>
            Microsoft Azure SQL Database, version 11
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql110">
            <summary>
            on-premises, version 11.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql120">
            <summary>
            on-premises, version 12.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql130">
            <summary>
            on-premises, version 13.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql140">
            <summary>
            on-premises, version 14.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql150">
            <summary>
            on-premises, version 15.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Sql160">
            <summary>
            on-premises, version 16.0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.SqlAzureV12">
            <summary>
            Microsoft Azure SQL Database, version 12
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.SqlDw">
            <summary>
            Microsoft SQL DW 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.SqlServerless">
            <summary>
            For Sql Serverless data pools
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.OnPremises">
            <summary>
            All on-premises versions
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.Cloud">
            <summary>
            All cloud releases
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.AllDw">
            <summary>
            All data warehouse releases
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TSqlPlatforms.All">
            <summary>
            Combination of all SQL Server categories
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnType">
            <summary>
            Specifies the type of Column a TSqlObject represents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnType.Column">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnType.ComputedColumn">
            <summary>
            ComputedColumn
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnType.ColumnSet">
            <summary>
            ColumnSet
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeColumnType">
            <summary>
            Specifies the type of TableTypeColumn a TSqlObject represents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableTypeColumnType.Column">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableTypeColumnType.ComputedColumn">
            <summary>
            ComputedColumn
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FunctionType">
            <summary>
            Specifies the type of Function a TSqlObject represents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FunctionType.InlineTableValuedFunction">
            <summary>
            InlineTableValuedFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FunctionType.MultiStatementTableValuedFunction">
            <summary>
            MultiStatementTableValuedFunction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlDataType">
            <summary>
            SQL Server built-in data types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Unknown">
            <summary>
            Nothing was defined.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.BigInt">
            <summary>
            Integer (whole number) data from -2^63 (-9,223,372,036,854,775,808) through 2^63-1 (9,223,372,036,854,775,807).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Int">
            <summary>
            Integer (whole number) data from -2^31 (-2,147,483,648) through 2^31 - 1 (2,147,483,647).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.SmallInt">
            <summary>
            Integer data from -2^15 (-32,768) through 2^15 - 1 (32,767).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.TinyInt">
            <summary>
            Integer data from 0 through 255.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Bit">
            <summary>
            Integer data with either a 1 or 0 value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Decimal">
            <summary>
            Fixed precision and scale numeric data from -10^38 +1 through 10^38 -1.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Numeric">
            <summary>
            Functionally equivalent to decimal.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Money">
            <summary>
            Monetary data values from -2^63 (-922,337,203,685,477.5808) through 2^63 - 1 (+922,337,203,685,477.5807), with accuracy to a ten-thousandth of a monetary unit.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.SmallMoney">
            <summary>
            Monetary data values from -214,748.3648 through +214,748.3647, with accuracy to a ten-thousandth of a monetary unit.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Float">
            <summary>
            Floating precision number data with the following valid values: -1.79E + 308 through -2.23E - 308, 0 and 2.23E + 308 through 1.79E + 308.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Real">
            <summary>
            Floating precision number data with the following valid values: -3.40E + 38 through -1.18E - 38, 0 and 1.18E - 38 through 3.40E + 38.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.DateTime">
            <summary>
            Date and time data from January 1, 1753, through December 31, 9999, with an accuracy of three-hundredths of a second, or 3.33 milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.SmallDateTime">
            <summary>
            Date and time data from January 1, 1900, through June 6, 2079, with an accuracy of one minute.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Char">
            <summary>
            Fixed-length non-Unicode character data with a maximum length of 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.VarChar">
            <summary>
            Variable-length non-Unicode data with a maximum of 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Text">
            <summary>
            Variable-length non-Unicode data with a maximum length of 2^31 - 1 (2,147,483,647) characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.NChar">
            <summary>
            Fixed-length Unicode data with a maximum length of 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.NVarChar">
            <summary>
            Variable-length Unicode data with a maximum length of 4,000 characters. sysname is a system-supplied user-defined data type that is functionally equivalent to nvarchar(128) and is used to reference database object names.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.NText">
            <summary>
            Variable-length Unicode data with a maximum length of 2^30 - 1 (1,073,741,823) characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Binary">
            <summary>
            Fixed-length binary data with a maximum length of 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.VarBinary">
            <summary>
            Variable-length binary data with a maximum length of 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Image">
            <summary>
            Variable-length binary data with a maximum length of 2^31 - 1 (2,147,483,647) bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Cursor">
            <summary>
            A reference to a cursor.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Variant">
            <summary>
            A data type that stores values of various SQL Server-supported data types, except text, ntext, timestamp, and sql_variant.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Table">
            <summary>
            A special data type used to store a result set for later processing.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Timestamp">
            <summary>
            A database-wide unique number that gets updated every time a row gets updated.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.UniqueIdentifier">
            <summary>
            Is a 16-byte GUID
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Xml">
            <summary>
            xml data type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Date">
            <summary>
            Date-only
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Time">
            <summary>
            Time only
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.DateTime2">
            <summary>
            Combination of data and time types, better precision than DataTime
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.DateTimeOffset">
            <summary>
            Same as DateTime2 with timezone offset added
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SqlDataType.Rowversion">
            <summary>
            (Alias for Timestamp) A database-wide unique number that gets updated every time a row gets updated.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PermissionType">
            <summary>
            Sql permissions
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Select">
            <summary>
            Select
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.References">
            <summary>
            References
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateDatabase">
            <summary>
            CreateDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateDefault">
            <summary>
            CreateDefault
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateFunction">
            <summary>
            CreateFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateProcedure">
            <summary>
            CreateProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateRule">
            <summary>
            CreateRule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateTable">
            <summary>
            CreateTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateView">
            <summary>
            CreateView
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.BackupDatabase">
            <summary>
            BackupDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.BackupLog">
            <summary>
            BackupLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AdministerBulkOperations">
            <summary>
            AdministerBulkOperations
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Alter">
            <summary>
            Alter
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyApplicationRole">
            <summary>
            AlterAnyApplicationRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyAssembly">
            <summary>
            AlterAnyAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyAsymmetricKey">
            <summary>
            AlterAnyAsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyCertificate">
            <summary>
            AlterAnyCertificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyConnection">
            <summary>
            AlterAnyConnection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyContract">
            <summary>
            AlterAnyContract
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyCredential">
            <summary>
            AlterAnyCredential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabase">
            <summary>
            AlterAnyDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseDdlTrigger">
            <summary>
            AlterAnyDatabaseDdlTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventNotification">
            <summary>
            AlterAnyDatabaseEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDataspace">
            <summary>
            AlterAnyDataspace
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEndpoint">
            <summary>
            AlterAnyEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventNotification">
            <summary>
            AlterAnyEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyFulltextCatalog">
            <summary>
            AlterAnyFulltextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyLinkedServer">
            <summary>
            AlterAnyLinkedServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyLogin">
            <summary>
            AlterAnyLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyMessageType">
            <summary>
            AlterAnyMessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyRemoteServiceBinding">
            <summary>
            AlterAnyRemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyRole">
            <summary>
            AlterAnyRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyRoute">
            <summary>
            AlterAnyRoute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnySchema">
            <summary>
            AlterAnySchema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyService">
            <summary>
            AlterAnyService
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnySymmetricKey">
            <summary>
            AlterAnySymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyUser">
            <summary>
            AlterAnyUser
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterResources">
            <summary>
            AlterResources
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterServerState">
            <summary>
            AlterServerState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterSettings">
            <summary>
            AlterSettings
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterTrace">
            <summary>
            AlterTrace
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Authenticate">
            <summary>
            Authenticate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AuthenticateServer">
            <summary>
            AuthenticateServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Checkpoint">
            <summary>
            Checkpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Connect">
            <summary>
            Connect
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ConnectReplication">
            <summary>
            ConnectReplication
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ConnectSql">
            <summary>
            ConnectSql
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Control">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ControlServer">
            <summary>
            ControlServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAggregate">
            <summary>
            CreateAggregate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAnyDatabase">
            <summary>
            CreateAnyDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAssembly">
            <summary>
            CreateAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAsymmetricKey">
            <summary>
            CreateAsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateCertificate">
            <summary>
            CreateCertificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateContract">
            <summary>
            CreateContract
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateDatabaseDdlEventNotification">
            <summary>
            CreateDatabaseDdlEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateDdlEventNotification">
            <summary>
            CreateDdlEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateEndpoint">
            <summary>
            CreateEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateFulltextCatalog">
            <summary>
            CreateFulltextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateMessageType">
            <summary>
            CreateMessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateQueue">
            <summary>
            CreateQueue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateRemoteServiceBinding">
            <summary>
            CreateRemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateRole">
            <summary>
            CreateRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateRoute">
            <summary>
            CreateRoute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateSchema">
            <summary>
            CreateSchema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateService">
            <summary>
            CreateService
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateSymmetricKey">
            <summary>
            CreateSymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateSynonym">
            <summary>
            CreateSynonym
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateTraceEventNotification">
            <summary>
            CreateTraceEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateType">
            <summary>
            CreateType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateXmlSchemaCollection">
            <summary>
            CreateXmlSchemaCollection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ExternalAccessAssembly">
            <summary>
            ExternalAccessAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Impersonate">
            <summary>
            Impersonate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Receive">
            <summary>
            Receive
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Send">
            <summary>
            Send
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Showplan">
            <summary>
            Showplan
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Shutdown">
            <summary>
            Shutdown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.SubscribeQueryNotifications">
            <summary>
            SubscribeQueryNotifications
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.TakeOwnership">
            <summary>
            TakeOwnership
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.UnsafeAssembly">
            <summary>
            UnsafeAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyDatabase">
            <summary>
            ViewAnyDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyDefinition">
            <summary>
            ViewAnyDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewChangeTracking">
            <summary>
            ViewChangeTracking
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewDatabaseState">
            <summary>
            ViewDatabaseState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewDefinition">
            <summary>
            ViewDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewServerState">
            <summary>
            ViewServerState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseAudit">
            <summary>
            AlterAnyDatabaseAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyServerAudit">
            <summary>
            AlterAnyServerAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateSequence">
            <summary>
            CreateSequence
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyServerRole">
            <summary>
            AlterAnyServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateServerRole">
            <summary>
            CreateServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAvailabilityGroup">
            <summary>
            CreateAvailabilityGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyAvailabilityGroup">
            <summary>
            AlterAnyAvailabilityGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSession">
            <summary>
            AlterAnyDatabaseEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ConnectAnyDatabase">
            <summary>
            ConnectAnyDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ImpersonateAnyLogin">
            <summary>
            ImpersonateAnyLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.SelectAllUserSecurables">
            <summary>
            SelectAllUserSecurables
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnySecurityPolicy">
            <summary>
            AlterAnySecurityPolicy
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyColumnEncryptionKey">
            <summary>
            AlterAnyColumnEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyColumnMasterKey">
            <summary>
            AlterAnyColumnMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.Unmask">
            <summary>
            Unmask
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyMask">
            <summary>
            AlterAnyMask
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyColumnMasterKeyDefinition">
            <summary>
            ViewAnyColumnMasterKeyDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyColumnEncryptionKeyDefinition">
            <summary>
            ViewAnyColumnEncryptionKeyDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalDataSource">
            <summary>
            AlterAnyExternalDataSource
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalFileFormat">
            <summary>
            AlterAnyExternalFileFormat
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseScopedConfiguration">
            <summary>
            AlterAnyDatabaseScopedConfiguration
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnySensitivityClassification">
            <summary>
            AlterAnySensitivityClassification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnySensitivityClassification">
            <summary>
            ViewAnySensitivityClassification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.KillDatabaseConnection">
            <summary>
            KillDatabaseConnection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ExecuteAnyExternalScript">
            <summary>
            ExecuteAnyExternalScript
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AdministerDatabaseBulkOperations">
            <summary>
            AdministerDatabaseBulkOperations
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.OwnershipChaining">
            <summary>
            OwnershipChaining
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalLanguage">
            <summary>
            AlterAnyExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalLibrary">
            <summary>
            AlterAnyExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalStream">
            <summary>
            AlterAnyExternalStream
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyExternalJob">
            <summary>
            AlterAnyExternalJob
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateUser">
            <summary>
            CreateUser
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewDatabaseSecurityState">
            <summary>
            ViewDatabaseSecurityState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewDatabasePerformanceState">
            <summary>
            ViewDatabasePerformanceState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewSecurityDefinition">
            <summary>
            ViewSecurityDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewCryptographicallySecuredDefinition">
            <summary>
            ViewCryptographicallySecuredDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.EnableLedger">
            <summary>
            EnableLedger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterLedger">
            <summary>
            AlterLedger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewLedgerContent">
            <summary>
            ViewLedgerContent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ExecuteAnyExternalEndpoint">
            <summary>
            ExecuteAnyExternalEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateLogin">
            <summary>
            CreateLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnySecurityDefinition">
            <summary>
            ViewAnySecurityDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewServerSecurityState">
            <summary>
            ViewServerSecurityState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewServerPerformanceState">
            <summary>
            ViewServerPerformanceState
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSession">
            <summary>
            AlterAnyEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyCryptographicallySecuredDefinition">
            <summary>
            ViewAnyCryptographicallySecuredDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateExternalLanguage">
            <summary>
            CreateExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateExternalLibrary">
            <summary>
            CreateExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionAddEvent">
            <summary>
            AlterAnyDatabaseEventSessionAddEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionAddTarget">
            <summary>
            AlterAnyDatabaseEventSessionAddTarget
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionDisable">
            <summary>
            AlterAnyDatabaseEventSessionDisable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionDropEvent">
            <summary>
            AlterAnyDatabaseEventSessionDropEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionDropTarget">
            <summary>
            AlterAnyDatabaseEventSessionDropTarget
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionEnable">
            <summary>
            AlterAnyDatabaseEventSessionEnable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyDatabaseEventSessionOption">
            <summary>
            AlterAnyDatabaseEventSessionOption
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionAddEvent">
            <summary>
            AlterAnyEventSessionAddEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionAddTarget">
            <summary>
            AlterAnyEventSessionAddTarget
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionDisable">
            <summary>
            AlterAnyEventSessionDisable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionDropEvent">
            <summary>
            AlterAnyEventSessionDropEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionDropTarget">
            <summary>
            AlterAnyEventSessionDropTarget
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionEnable">
            <summary>
            AlterAnyEventSessionEnable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterAnyEventSessionOption">
            <summary>
            AlterAnyEventSessionOption
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAnyDatabaseEventSession">
            <summary>
            CreateAnyDatabaseEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.CreateAnyEventSession">
            <summary>
            CreateAnyEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.DropAnyDatabaseEventSession">
            <summary>
            DropAnyDatabaseEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.DropAnyEventSession">
            <summary>
            DropAnyEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyErrorLog">
            <summary>
            ViewAnyErrorLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewDatabaseSecurityAudit">
            <summary>
            ViewDatabaseSecurityAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewServerSecurityAudit">
            <summary>
            ViewServerSecurityAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.AlterLedgerConfiguration">
            <summary>
            AlterLedgerConfiguration
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewAnyPerformanceDefinition">
            <summary>
            ViewAnyPerformanceDefinition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionType.ViewPerformanceDefinition">
            <summary>
            ViewPerformanceDefinition
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuthenticationModes">
            <summary>
            SQL Server 2005 authentication mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Basic">
            <summary>
            Basic
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Digest">
            <summary>
            Digest
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Integrated">
            <summary>
            Integrated
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Ntlm">
            <summary>
            Ntlm
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Kerberos">
            <summary>
            Kerberos
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationModes.Negotiate">
            <summary>
            Negotiate
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.LockEscalationMethod">
            <summary>
            The types of lock escalation methods
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LockEscalationMethod.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LockEscalationMethod.Disable">
            <summary>
            Disable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LockEscalationMethod.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CharacterSet">
            <summary>
            Possible character sets for SOAP endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CharacterSet.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CharacterSet.Sql">
            <summary>
            Sql
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CharacterSet.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole">
            <summary>
            Database mirroring role types for SQL Server 2005
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole.Witness">
            <summary>
            Witness
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole.Partner">
            <summary>
            Partner
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseMirroringRole.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PageVerifyMode">
            <summary>
            Database page verify mode for SQL Server 2005
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PageVerifyMode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PageVerifyMode.Checksum">
            <summary>
            Checksum
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PageVerifyMode.TornPageDetection">
            <summary>
            TornPageDetection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PageVerifyMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EncryptionMode">
            <summary>
            Encryption mode for service broker endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EncryptionMode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EncryptionMode.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EncryptionMode.Supported">
            <summary>
            Supported
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EncryptionMode.Required">
            <summary>
            Required
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.HttpPorts">
            <summary>
            Listening port types associated with an endpoint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.HttpPorts.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.HttpPorts.Clear">
            <summary>
            Clear
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.HttpPorts.Ssl">
            <summary>
            Ssl
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SoapLoginType">
            <summary>
            Possible values for LOGIN_TYPE option in SOAP endpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapLoginType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapLoginType.Mixed">
            <summary>
            Mixed
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapLoginType.Windows">
            <summary>
            Windows
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ParameterizationOption">
            <summary>
            Parameterization options for database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ParameterizationOption.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ParameterizationOption.Simple">
            <summary>
            Simple
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ParameterizationOption.Forced">
            <summary>
            Forced
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServiceBrokerEncryptionAlgorithm">
            <summary>
            Possible encryption algorithm options for service broker endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerEncryptionAlgorithm.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerEncryptionAlgorithm.Aes">
            <summary>
            Aes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerEncryptionAlgorithm.RC4">
            <summary>
            RC4
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption">
            <summary>
            Possible service broker options for database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption.EnableBroker">
            <summary>
            EnableBroker
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption.DisableBroker">
            <summary>
            DisableBroker
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption.NewBroker">
            <summary>
            NewBroker
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ServiceBrokerOption.ErrorBrokerConversations">
            <summary>
            ErrorBrokerConversations
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SoapFormat">
            <summary>
            Possible webmethod formats for SOAP endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapFormat.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapFormat.AllResults">
            <summary>
            AllResults
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapFormat.RowsetsOnly">
            <summary>
            RowsetsOnly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapFormat.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SoapSchema">
            <summary>
            Possible schema options for webmethods in SOAP endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapSchema.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapSchema.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapSchema.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SoapSchema.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet">
            <summary>
            Possible permission sets for an assembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet.Safe">
            <summary>
            Safe
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet.ExternalAccess">
            <summary>
            ExternalAccess
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AssemblyPermissionSet.Unsafe">
            <summary>
            Unsafe
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm">
            <summary>
            Algorithm for an asymmetric keys
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Rsa512">
            <summary>
            Rsa512
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Rsa1024">
            <summary>
            Rsa1024
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Rsa2048">
            <summary>
            Rsa2048
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Rsa3072">
            <summary>
            Rsa3072
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AsymmetricKeyAlgorithm.Rsa4096">
            <summary>
            Rsa4096
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm">
            <summary>
            Algorithms used for symmetric keys
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.Des">
            <summary>
            Des
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.TripleDes">
            <summary>
            TripleDes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.RC2">
            <summary>
            RC2
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.RC4">
            <summary>
            RC4
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.DesX">
            <summary>
            DesX
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.Aes128">
            <summary>
            Aes128
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.Aes192">
            <summary>
            Aes192
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.Aes256">
            <summary>
            Aes256
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyAlgorithm.RC4128">
            <summary>
            RC4128
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuditActionGroupType">
            <summary>
            SQL Server audit action groups
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SuccessfulLogin">
            <summary>
            SuccessfulLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.Logout">
            <summary>
            Logout
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerStateChange">
            <summary>
            ServerStateChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.FailedLogin">
            <summary>
            FailedLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.LoginChangePassword">
            <summary>
            LoginChangePassword
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerRoleMemberChange">
            <summary>
            ServerRoleMemberChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerPrincipalImpersonation">
            <summary>
            ServerPrincipalImpersonation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerObjectOwnershipChange">
            <summary>
            ServerObjectOwnershipChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseMirroringLogin">
            <summary>
            DatabaseMirroringLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.BrokerLogin">
            <summary>
            BrokerLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerPermissionChange">
            <summary>
            ServerPermissionChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerObjectPermissionChange">
            <summary>
            ServerObjectPermissionChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerOperation">
            <summary>
            ServerOperation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.TraceChange">
            <summary>
            TraceChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerObjectChange">
            <summary>
            ServerObjectChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ServerPrincipalChange">
            <summary>
            ServerPrincipalChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabasePermissionChange">
            <summary>
            DatabasePermissionChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SchemaObjectPermissionChange">
            <summary>
            SchemaObjectPermissionChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseRoleMemberChange">
            <summary>
            DatabaseRoleMemberChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.ApplicationRoleChangePassword">
            <summary>
            ApplicationRoleChangePassword
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SchemaObjectAccess">
            <summary>
            SchemaObjectAccess
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.BackupRestore">
            <summary>
            BackupRestore
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.Dbcc">
            <summary>
            Dbcc
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.AuditChange">
            <summary>
            AuditChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseChange">
            <summary>
            DatabaseChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseObjectChange">
            <summary>
            DatabaseObjectChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabasePrincipalChange">
            <summary>
            DatabasePrincipalChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SchemaObjectChange">
            <summary>
            SchemaObjectChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabasePrincipalImpersonation">
            <summary>
            DatabasePrincipalImpersonation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseObjectOwnershipChange">
            <summary>
            DatabaseObjectOwnershipChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseOwnershipChange">
            <summary>
            DatabaseOwnershipChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SchemaObjectOwnershipChange">
            <summary>
            SchemaObjectOwnershipChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseObjectPermissionChange">
            <summary>
            DatabaseObjectPermissionChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseOperation">
            <summary>
            DatabaseOperation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseObjectAccess">
            <summary>
            DatabaseObjectAccess
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.SuccessfulDatabaseAuthenticationGroup">
            <summary>
            SuccessfulDatabaseAuthenticationGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.FailedDatabaseAuthenticationGroup">
            <summary>
            FailedDatabaseAuthenticationGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.DatabaseLogoutGroup">
            <summary>
            DatabaseLogoutGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.UserChangePasswordGroup">
            <summary>
            UserChangePasswordGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.UserDefinedAuditGroup">
            <summary>
            UserDefinedAuditGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.TransactionBegin">
            <summary>
            TransactionBegin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.TransactionCommit">
            <summary>
            TransactionCommit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.TransactionRollback">
            <summary>
            TransactionRollback
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.StatementRollback">
            <summary>
            StatementRollback
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditActionGroupType.TransactionGroup">
            <summary>
            TransactionGroup
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuditTarget">
            <summary>
            SQL Server audit targets
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditTarget.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditTarget.ApplicationLog">
            <summary>
            ApplicationLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditTarget.SecurityLog">
            <summary>
            SecurityLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditTarget.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuditTarget.ExternalMonitor">
            <summary>
            ExternalMonitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ChangeTrackingOption">
            <summary>
            Change tracking options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ChangeTrackingOption.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ChangeTrackingOption.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ChangeTrackingOption.Manual">
            <summary>
            Manual
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ChangeTrackingOption.Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SymmetricKeyCreationDisposition">
            <summary>
            Asymmetric key creation disposition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyCreationDisposition.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyCreationDisposition.CreateNew">
            <summary>
            CreateNew
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SymmetricKeyCreationDisposition.OpenExisting">
            <summary>
            OpenExisting
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction">
            <summary>
            Database-level auditable action
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Select">
            <summary>
            Select
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.Receive">
            <summary>
            Receive
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DatabaseAuditAction.References">
            <summary>
            References
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.RecoveryMode">
            <summary>
            Database recovery mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RecoveryMode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RecoveryMode.Simple">
            <summary>
            Simple
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RecoveryMode.BulkLogged">
            <summary>
            BulkLogged
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RecoveryMode.Full">
            <summary>
            Full
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DelayedDurabilityMode">
            <summary>
            Database Delayed Durability mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DelayedDurabilityMode.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DelayedDurabilityMode.Allowed">
            <summary>
            Allowed
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DelayedDurabilityMode.Forced">
            <summary>
            Forced
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UserAccessOption">
            <summary>
            User access mode for the database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserAccessOption.Multiple">
            <summary>
            Multiple
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserAccessOption.Restricted">
            <summary>
            Restricted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserAccessOption.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CompressionLevel">
            <summary>
            Compression level for data
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CompressionLevel.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CompressionLevel.Row">
            <summary>
            Row
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CompressionLevel.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CompressionLevel.ColumnStore">
            <summary>
            ColumnStore
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CompressionLevel.ColumnStoreArchive">
            <summary>
            ColumnStoreArchive
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Degree">
            <summary>
            Grid density level in spatial index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.Above_Normal">
            <summary>
            Above_Normal
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Degree.Below_Normal">
            <summary>
            Below_Normal
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.State">
            <summary>
            State of the endpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.State.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.State.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.State.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.State.Stopped">
            <summary>
            Stopped
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventGroupType">
            <summary>
            Sql event groups
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlApplicationRoleEvents">
            <summary>
            DdlApplicationRoleEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlAssemblyEvents">
            <summary>
            DdlAssemblyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlAuthorizationDatabaseEvents">
            <summary>
            DdlAuthorizationDatabaseEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlAvailabilityGroupEvents">
            <summary>
            DdlAvailabilityGroupEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlCertificateEvents">
            <summary>
            DdlCertificateEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlContractEvents">
            <summary>
            DdlContractEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseAuditEvents">
            <summary>
            DdlDatabaseAuditEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseLevelEvents">
            <summary>
            DdlDatabaseLevelEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseSecurityEvents">
            <summary>
            DdlDatabaseSecurityEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlEventNotificationEvents">
            <summary>
            DdlEventNotificationEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlFunctionEvents">
            <summary>
            DdlFunctionEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlGdrDatabaseEvents">
            <summary>
            DdlGdrDatabaseEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlIndexEvents">
            <summary>
            DdlIndexEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlMessageTypeEvents">
            <summary>
            DdlMessageTypeEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlPartitionEvents">
            <summary>
            DdlPartitionEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlPartitionFunctionEvents">
            <summary>
            DdlPartitionFunctionEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlPartitionSchemeEvents">
            <summary>
            DdlPartitionSchemeEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlProcedureEvents">
            <summary>
            DdlProcedureEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlQueueEvents">
            <summary>
            DdlQueueEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlRemoteServiceBindingEvents">
            <summary>
            DdlRemoteServiceBindingEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlRoleEvents">
            <summary>
            DdlRoleEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlRouteEvents">
            <summary>
            DdlRouteEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSchemaEvents">
            <summary>
            DdlSchemaEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSecurityPolicyEvents">
            <summary>
            DdlSecurityPolicyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlColumnMasterKeyEvents">
            <summary>
            DdlColumnMasterKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlColumnEncryptionKeyEvents">
            <summary>
            DdlColumnEncryptionKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlExternalResourcePoolEvents">
            <summary>
            DdlExternalResourcePoolEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlExternalLibraryEvents">
            <summary>
            DdlExternalLibraryEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSensitivityEvents">
            <summary>
            DdlSensitivityEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlExternalLanguageEvents">
            <summary>
            DdlExternalLanguageEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServiceEvents">
            <summary>
            DdlServiceEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSsbEvents">
            <summary>
            DdlSsbEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlStatisticsEvents">
            <summary>
            DdlStatisticsEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSynonymEvents">
            <summary>
            DdlSynonymEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlTableEvents">
            <summary>
            DdlTableEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlTableViewEvents">
            <summary>
            DdlTableViewEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlTriggerEvents">
            <summary>
            DdlTriggerEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlTypeEvents">
            <summary>
            DdlTypeEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlUserEvents">
            <summary>
            DdlUserEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlViewEvents">
            <summary>
            DdlViewEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlXmlSchemaCollectionEvents">
            <summary>
            DdlXmlSchemaCollectionEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlAuthorizationServerEvents">
            <summary>
            DdlAuthorizationServerEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlEndpointEvents">
            <summary>
            DdlEndpointEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlEvents">
            <summary>
            DdlEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlGdrServerEvents">
            <summary>
            DdlGdrServerEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlLoginEvents">
            <summary>
            DdlLoginEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServerLevelEvents">
            <summary>
            DdlServerLevelEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServerSecurityEvents">
            <summary>
            DdlServerSecurityEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlAsymmetricKeyEvents">
            <summary>
            DdlAsymmetricKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlBrokerPriorityEvents">
            <summary>
            DdlBrokerPriorityEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlCryptoSignatureEvents">
            <summary>
            DdlCryptoSignatureEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseAuditSpecificationEvents">
            <summary>
            DdlDatabaseAuditSpecificationEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseEncryptionKeyEvents">
            <summary>
            DdlDatabaseEncryptionKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDefaultEvents">
            <summary>
            DdlDefaultEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlExtendedPropertyEvents">
            <summary>
            DdlExtendedPropertyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlFullTextCatalogEvents">
            <summary>
            DdlFullTextCatalogEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlFullTextStopListEvents">
            <summary>
            DdlFullTextStopListEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlMasterKeyEvents">
            <summary>
            DdlMasterKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlPlanGuideEvents">
            <summary>
            DdlPlanGuideEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlRuleEvents">
            <summary>
            DdlRuleEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSearchPropertyListEvents">
            <summary>
            DdlSearchPropertyListEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSequenceEvents">
            <summary>
            DdlSequenceEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlSymmetricKeyEvents">
            <summary>
            DdlSymmetricKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlCredentialEvents">
            <summary>
            DdlCredentialEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlDatabaseEvents">
            <summary>
            DdlDatabaseEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlCryptographicProviderEvents">
            <summary>
            DdlCryptographicProviderEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlEventSessionEvents">
            <summary>
            DdlEventSessionEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlExtendedProcedureEvents">
            <summary>
            DdlExtendedProcedureEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlLinkedServerEvents">
            <summary>
            DdlLinkedServerEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlLinkedServerLoginEvents">
            <summary>
            DdlLinkedServerLoginEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlMessageEvents">
            <summary>
            DdlMessageEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlRemoteServerEvents">
            <summary>
            DdlRemoteServerEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlResourceGovernorEvents">
            <summary>
            DdlResourceGovernorEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlResourcePool">
            <summary>
            DdlResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServerAuditEvents">
            <summary>
            DdlServerAuditEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServerAuditSpecificationEvents">
            <summary>
            DdlServerAuditSpecificationEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlServiceMasterKeyEvents">
            <summary>
            DdlServiceMasterKeyEvents
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.DdlWorkloadGroup">
            <summary>
            DdlWorkloadGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcClr">
            <summary>
            TrcClr
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcDatabase">
            <summary>
            TrcDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcDeprecation">
            <summary>
            TrcDeprecation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcErrorsAndWarnings">
            <summary>
            TrcErrorsAndWarnings
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcFullText">
            <summary>
            TrcFullText
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcLocks">
            <summary>
            TrcLocks
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcObjects">
            <summary>
            TrcObjects
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcOledb">
            <summary>
            TrcOledb
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcPerformance">
            <summary>
            TrcPerformance
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcQueryNotifications">
            <summary>
            TrcQueryNotifications
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcSecurityAudit">
            <summary>
            TrcSecurityAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcServer">
            <summary>
            TrcServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcStoredProcedures">
            <summary>
            TrcStoredProcedures
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcTSql">
            <summary>
            TrcTSql
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcUserConfigurable">
            <summary>
            TrcUserConfigurable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventGroupType.TrcAllEvents">
            <summary>
            TrcAllEvents
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventType">
            <summary>
            Sql Server event types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AddRoleMember">
            <summary>
            AddRoleMember
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterApplicationRole">
            <summary>
            AlterApplicationRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterAssembly">
            <summary>
            AlterAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterAuthorizationDatabase">
            <summary>
            AlterAuthorizationDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterAvailabilityGroup">
            <summary>
            AlterAvailabilityGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterCertificate">
            <summary>
            AlterCertificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterColumnEncryptionKey">
            <summary>
            AlterColumnEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterDatabaseAudit">
            <summary>
            AlterDatabaseAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterFunction">
            <summary>
            AlterFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterIndex">
            <summary>
            AlterIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterMessageType">
            <summary>
            AlterMessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterPartitionFunction">
            <summary>
            AlterPartitionFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterPartitionScheme">
            <summary>
            AlterPartitionScheme
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterProcedure">
            <summary>
            AlterProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterQueue">
            <summary>
            AlterQueue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterRemoteServiceBinding">
            <summary>
            AlterRemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterRole">
            <summary>
            AlterRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterRoute">
            <summary>
            AlterRoute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterSchema">
            <summary>
            AlterSchema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterSecurityPolicy">
            <summary>
            AlterSecurityPolicy
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterService">
            <summary>
            AlterService
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterTable">
            <summary>
            AlterTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterTrigger">
            <summary>
            AlterTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterUser">
            <summary>
            AlterUser
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterView">
            <summary>
            AlterView
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterXmlSchemaCollection">
            <summary>
            AlterXmlSchemaCollection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateApplicationRole">
            <summary>
            CreateApplicationRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateAssembly">
            <summary>
            CreateAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateAvailabilityGroup">
            <summary>
            CreateAvailabilityGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateCertificate">
            <summary>
            CreateCertificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateContract">
            <summary>
            CreateContract
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateColumnEncryptionKey">
            <summary>
            CreateColumnEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateColumnMasterKey">
            <summary>
            CreateColumnMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateDatabaseAudit">
            <summary>
            CreateDatabaseAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateEventNotification">
            <summary>
            CreateEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateFunction">
            <summary>
            CreateFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateIndex">
            <summary>
            CreateIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateMessageType">
            <summary>
            CreateMessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreatePartitionFunction">
            <summary>
            CreatePartitionFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreatePartitionScheme">
            <summary>
            CreatePartitionScheme
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateProcedure">
            <summary>
            CreateProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateQueue">
            <summary>
            CreateQueue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateRemoteServiceBinding">
            <summary>
            CreateRemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateRole">
            <summary>
            CreateRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateRoute">
            <summary>
            CreateRoute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSchema">
            <summary>
            CreateSchema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSecurityPolicy">
            <summary>
            CreateSecurityPolicy
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateService">
            <summary>
            CreateService
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateStatistics">
            <summary>
            CreateStatistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSynonym">
            <summary>
            CreateSynonym
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateTable">
            <summary>
            CreateTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateTrigger">
            <summary>
            CreateTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateType">
            <summary>
            CreateType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateUser">
            <summary>
            CreateUser
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateView">
            <summary>
            CreateView
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateXmlIndex">
            <summary>
            CreateXmlIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateXmlSchemaCollection">
            <summary>
            CreateXmlSchemaCollection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DenyDatabase">
            <summary>
            DenyDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropApplicationRole">
            <summary>
            DropApplicationRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropAvailabilityGroup">
            <summary>
            DropAvailabilityGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropAssembly">
            <summary>
            DropAssembly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropCertificate">
            <summary>
            DropCertificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropColumnEncryptionKey">
            <summary>
            DropColumnEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterDatabaseScopedConfiguration">
            <summary>
            AlterDatabaseScopedConfiguration
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateExternalResourcePool">
            <summary>
            CreateExternalResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterExternalResourcePool">
            <summary>
            AlterExternalResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropExternalResourcePool">
            <summary>
            DropExternalResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateExternalLibrary">
            <summary>
            CreateExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterExternalLibrary">
            <summary>
            AlterExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropExternalLibrary">
            <summary>
            DropExternalLibrary
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AddSensitivityClassification">
            <summary>
            AddSensitivityClassification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSensitivityClassification">
            <summary>
            DropSensitivityClassification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateExternalLanguage">
            <summary>
            CreateExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterExternalLanguage">
            <summary>
            AlterExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropExternalLanguage">
            <summary>
            DropExternalLanguage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropColumnMasterKey">
            <summary>
            DropColumnMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropContract">
            <summary>
            DropContract
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropDatabaseAudit">
            <summary>
            DropDatabaseAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropEventNotification">
            <summary>
            DropEventNotification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropFunction">
            <summary>
            DropFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropIndex">
            <summary>
            DropIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropMessageType">
            <summary>
            DropMessageType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropPartitionFunction">
            <summary>
            DropPartitionFunction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropPartitionScheme">
            <summary>
            DropPartitionScheme
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropProcedure">
            <summary>
            DropProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropQueue">
            <summary>
            DropQueue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRemoteServiceBinding">
            <summary>
            DropRemoteServiceBinding
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRole">
            <summary>
            DropRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRoleMember">
            <summary>
            DropRoleMember
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRoute">
            <summary>
            DropRoute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSchema">
            <summary>
            DropSchema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSecurityPolicy">
            <summary>
            DropSecurityPolicy
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropService">
            <summary>
            DropService
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropStatistics">
            <summary>
            DropStatistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSynonym">
            <summary>
            DropSynonym
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropTable">
            <summary>
            DropTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropTrigger">
            <summary>
            DropTrigger
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropType">
            <summary>
            DropType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropUser">
            <summary>
            DropUser
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropView">
            <summary>
            DropView
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropXmlSchemaCollection">
            <summary>
            DropXmlSchemaCollection
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.GrantDatabase">
            <summary>
            GrantDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.RevokeDatabase">
            <summary>
            RevokeDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UpdateStatistics">
            <summary>
            UpdateStatistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AddServerRoleMember">
            <summary>
            AddServerRoleMember
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterAuthorizationServer">
            <summary>
            AlterAuthorizationServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterDatabase">
            <summary>
            AlterDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterEndpoint">
            <summary>
            AlterEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterLogin">
            <summary>
            AlterLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateDatabase">
            <summary>
            CreateDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateEndpoint">
            <summary>
            CreateEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateLogin">
            <summary>
            CreateLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DenyServer">
            <summary>
            DenyServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropDatabase">
            <summary>
            DropDatabase
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropEndpoint">
            <summary>
            DropEndpoint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropLogin">
            <summary>
            DropLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropServerRoleMember">
            <summary>
            DropServerRoleMember
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.GrantServer">
            <summary>
            GrantServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.RevokeServer">
            <summary>
            RevokeServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AddSignature">
            <summary>
            AddSignature
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AddSignatureSchemaObject">
            <summary>
            AddSignatureSchemaObject
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterAsymmetricKey">
            <summary>
            AlterAsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterBrokerPriority">
            <summary>
            AlterBrokerPriority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterDatabaseAuditSpecification">
            <summary>
            AlterDatabaseAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterDatabaseEncryptionKey">
            <summary>
            AlterDatabaseEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterExtendedProperty">
            <summary>
            AlterExtendedProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterFullTextCatalog">
            <summary>
            AlterFullTextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterFullTextIndex">
            <summary>
            AlterFullTextIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterFullTextStopList">
            <summary>
            AlterFullTextStopList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterMasterKey">
            <summary>
            AlterMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterPlanGuide">
            <summary>
            AlterPlanGuide
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterSymmetricKey">
            <summary>
            AlterSymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.BindDefault">
            <summary>
            BindDefault
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.BindRule">
            <summary>
            BindRule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateAsymmetricKey">
            <summary>
            CreateAsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateBrokerPriority">
            <summary>
            CreateBrokerPriority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateDatabaseAuditSpecification">
            <summary>
            CreateDatabaseAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateDatabaseEncryptionKey">
            <summary>
            CreateDatabaseEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateDefault">
            <summary>
            CreateDefault
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateExtendedProperty">
            <summary>
            CreateExtendedProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateFullTextCatalog">
            <summary>
            CreateFullTextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateFullTextIndex">
            <summary>
            CreateFullTextIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateFullTextStopList">
            <summary>
            CreateFullTextStopList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateMasterKey">
            <summary>
            CreateMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreatePlanGuide">
            <summary>
            CreatePlanGuide
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateRule">
            <summary>
            CreateRule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSpatialIndex">
            <summary>
            CreateSpatialIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSymmetricKey">
            <summary>
            CreateSymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropAsymmetricKey">
            <summary>
            DropAsymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropBrokerPriority">
            <summary>
            DropBrokerPriority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropDatabaseAuditSpecification">
            <summary>
            DropDatabaseAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropDatabaseEncryptionKey">
            <summary>
            DropDatabaseEncryptionKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropDefault">
            <summary>
            DropDefault
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropExtendedProperty">
            <summary>
            DropExtendedProperty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropFullTextCatalog">
            <summary>
            DropFullTextCatalog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropFullTextIndex">
            <summary>
            DropFullTextIndex
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropFullTextStopList">
            <summary>
            DropFullTextStopList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropMasterKey">
            <summary>
            DropMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropPlanGuide">
            <summary>
            DropPlanGuide
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRule">
            <summary>
            DropRule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSignature">
            <summary>
            DropSignature
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSignatureSchemaObject">
            <summary>
            DropSignatureSchemaObject
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSymmetricKey">
            <summary>
            DropSymmetricKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.Rename">
            <summary>
            Rename
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UnbindDefault">
            <summary>
            UnbindDefault
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UnbindRule">
            <summary>
            UnbindRule
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterCredential">
            <summary>
            AlterCredential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterCryptographicProvider">
            <summary>
            AlterCryptographicProvider
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterEventSession">
            <summary>
            AlterEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterInstance">
            <summary>
            AlterInstance
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterLinkedServer">
            <summary>
            AlterLinkedServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterMessage">
            <summary>
            AlterMessage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterRemoteServer">
            <summary>
            AlterRemoteServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterResourceGovernorConfig">
            <summary>
            AlterResourceGovernorConfig
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterResourcePool">
            <summary>
            AlterResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterServerAudit">
            <summary>
            AlterServerAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterServerAuditSpecification">
            <summary>
            AlterServerAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterServiceMasterKey">
            <summary>
            AlterServiceMasterKey
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterWorkloadGroup">
            <summary>
            AlterWorkloadGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateCredential">
            <summary>
            CreateCredential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateCryptographicProvider">
            <summary>
            CreateCryptographicProvider
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateEventSession">
            <summary>
            CreateEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateExtendedProcedure">
            <summary>
            CreateExtendedProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateLinkedServer">
            <summary>
            CreateLinkedServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateLinkedServerLogin">
            <summary>
            CreateLinkedServerLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateMessage">
            <summary>
            CreateMessage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateRemoteServer">
            <summary>
            CreateRemoteServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateResourcePool">
            <summary>
            CreateResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateServerAudit">
            <summary>
            CreateServerAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateServerAuditSpecification">
            <summary>
            CreateServerAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateWorkloadGroup">
            <summary>
            CreateWorkloadGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropCredential">
            <summary>
            DropCredential
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropCryptographicProvider">
            <summary>
            DropCryptographicProvider
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropEventSession">
            <summary>
            DropEventSession
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropExtendedProcedure">
            <summary>
            DropExtendedProcedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropLinkedServer">
            <summary>
            DropLinkedServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropLinkedServerLogin">
            <summary>
            DropLinkedServerLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropMessage">
            <summary>
            DropMessage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropRemoteServer">
            <summary>
            DropRemoteServer
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropResourcePool">
            <summary>
            DropResourcePool
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropServerAudit">
            <summary>
            DropServerAudit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropServerAuditSpecification">
            <summary>
            DropServerAuditSpecification
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropWorkloadGroup">
            <summary>
            DropWorkloadGroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AssemblyLoad">
            <summary>
            AssemblyLoad
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAddDbUserEvent">
            <summary>
            AuditAddDbUserEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAddLoginEvent">
            <summary>
            AuditAddLoginEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAddLoginToServerRoleEvent">
            <summary>
            AuditAddLoginToServerRoleEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAddMemberToDbRoleEvent">
            <summary>
            AuditAddMemberToDbRoleEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAddRoleEvent">
            <summary>
            AuditAddRoleEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditAppRoleChangePasswordEvent">
            <summary>
            AuditAppRoleChangePasswordEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditBackupRestoreEvent">
            <summary>
            AuditBackupRestoreEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditChangeAuditEvent">
            <summary>
            AuditChangeAuditEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditChangeDatabaseOwner">
            <summary>
            AuditChangeDatabaseOwner
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseManagementEvent">
            <summary>
            AuditDatabaseManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseObjectAccessEvent">
            <summary>
            AuditDatabaseObjectAccessEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseObjectGdrEvent">
            <summary>
            AuditDatabaseObjectGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseObjectManagementEvent">
            <summary>
            AuditDatabaseObjectManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseObjectTakeOwnershipEvent">
            <summary>
            AuditDatabaseObjectTakeOwnershipEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseOperationEvent">
            <summary>
            AuditDatabaseOperationEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabasePrincipalImpersonationEvent">
            <summary>
            AuditDatabasePrincipalImpersonationEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabasePrincipalManagementEvent">
            <summary>
            AuditDatabasePrincipalManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDatabaseScopeGdrEvent">
            <summary>
            AuditDatabaseScopeGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditDbccEvent">
            <summary>
            AuditDbccEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLogin">
            <summary>
            AuditLogin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLoginChangePasswordEvent">
            <summary>
            AuditLoginChangePasswordEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLoginChangePropertyEvent">
            <summary>
            AuditLoginChangePropertyEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLoginFailed">
            <summary>
            AuditLoginFailed
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLoginGdrEvent">
            <summary>
            AuditLoginGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditLogout">
            <summary>
            AuditLogout
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditSchemaObjectAccessEvent">
            <summary>
            AuditSchemaObjectAccessEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditSchemaObjectGdrEvent">
            <summary>
            AuditSchemaObjectGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditSchemaObjectManagementEvent">
            <summary>
            AuditSchemaObjectManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditSchemaObjectTakeOwnershipEvent">
            <summary>
            AuditSchemaObjectTakeOwnershipEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerAlterTraceEvent">
            <summary>
            AuditServerAlterTraceEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerObjectGdrEvent">
            <summary>
            AuditServerObjectGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerObjectManagementEvent">
            <summary>
            AuditServerObjectManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerObjectTakeOwnershipEvent">
            <summary>
            AuditServerObjectTakeOwnershipEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerOperationEvent">
            <summary>
            AuditServerOperationEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerPrincipalImpersonationEvent">
            <summary>
            AuditServerPrincipalImpersonationEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerPrincipalManagementEvent">
            <summary>
            AuditServerPrincipalManagementEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditServerScopeGdrEvent">
            <summary>
            AuditServerScopeGdrEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.BlockedProcessReport">
            <summary>
            BlockedProcessReport
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.BrokerQueueDisabled">
            <summary>
            BrokerQueueDisabled
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DataFileAutoGrow">
            <summary>
            DataFileAutoGrow
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DataFileAutoShrink">
            <summary>
            DataFileAutoShrink
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DatabaseMirroringStateChange">
            <summary>
            DatabaseMirroringStateChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DeadlockGraph">
            <summary>
            DeadlockGraph
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DeprecationAnnouncement">
            <summary>
            DeprecationAnnouncement
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DeprecationFinalSupport">
            <summary>
            DeprecationFinalSupport
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ErrorLog">
            <summary>
            ErrorLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.EventLog">
            <summary>
            EventLog
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ExchangeSpillEvent">
            <summary>
            ExchangeSpillEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ExecutionWarnings">
            <summary>
            ExecutionWarnings
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.FtCrawlAborted">
            <summary>
            FtCrawlAborted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.FtCrawlStarted">
            <summary>
            FtCrawlStarted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.FtCrawlStopped">
            <summary>
            FtCrawlStopped
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.HashWarning">
            <summary>
            HashWarning
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.LockDeadlock">
            <summary>
            LockDeadlock
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.LockDeadlockChain">
            <summary>
            LockDeadlockChain
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.LockEscalation">
            <summary>
            LockEscalation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.LogFileAutoGrow">
            <summary>
            LogFileAutoGrow
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.LogFileAutoShrink">
            <summary>
            LogFileAutoShrink
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.MissingColumnStatistics">
            <summary>
            MissingColumnStatistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.MissingJoinPredicate">
            <summary>
            MissingJoinPredicate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.MountTape">
            <summary>
            MountTape
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ObjectAltered">
            <summary>
            ObjectAltered
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ObjectCreated">
            <summary>
            ObjectCreated
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ObjectDeleted">
            <summary>
            ObjectDeleted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.OledbCallEvent">
            <summary>
            OledbCallEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.OledbDataReadEvent">
            <summary>
            OledbDataReadEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.OledbErrors">
            <summary>
            OledbErrors
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.OledbProviderInformation">
            <summary>
            OledbProviderInformation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.OledbQueryInterfaceEvent">
            <summary>
            OledbQueryInterfaceEvent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.QnDynamics">
            <summary>
            QnDynamics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.QnParameterTable">
            <summary>
            QnParameterTable
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.QnSubscription">
            <summary>
            QnSubscription
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.QnTemplate">
            <summary>
            QnTemplate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.QueueActivation">
            <summary>
            QueueActivation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ServerMemoryChange">
            <summary>
            ServerMemoryChange
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ShowPlanAllForQueryCompile">
            <summary>
            ShowPlanAllForQueryCompile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ShowPlanXmlForQueryCompile">
            <summary>
            ShowPlanXmlForQueryCompile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ShowPlanXml">
            <summary>
            ShowPlanXml
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.ShowPlanXmlStatisticsProfile">
            <summary>
            ShowPlanXmlStatisticsProfile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SortWarnings">
            <summary>
            SortWarnings
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SpCacheInsert">
            <summary>
            SpCacheInsert
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SpCacheMiss">
            <summary>
            SpCacheMiss
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SpCacheRemove">
            <summary>
            SpCacheRemove
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SpRecompile">
            <summary>
            SpRecompile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.SqlStmtRecompile">
            <summary>
            SqlStmtRecompile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.TraceFileClose">
            <summary>
            TraceFileClose
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserErrorMessage">
            <summary>
            UserErrorMessage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable0">
            <summary>
            UserConfigurable0
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable1">
            <summary>
            UserConfigurable1
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable2">
            <summary>
            UserConfigurable2
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable3">
            <summary>
            UserConfigurable3
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable4">
            <summary>
            UserConfigurable4
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable5">
            <summary>
            UserConfigurable5
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable6">
            <summary>
            UserConfigurable6
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable7">
            <summary>
            UserConfigurable7
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable8">
            <summary>
            UserConfigurable8
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.UserConfigurable9">
            <summary>
            UserConfigurable9
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.XQueryStaticType">
            <summary>
            XQueryStaticType
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AuditFullText">
            <summary>
            AuditFullText
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.BitmapWarning">
            <summary>
            BitmapWarning
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CpuThresholdExceeded">
            <summary>
            CpuThresholdExceeded
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DatabaseSuspectDataPage">
            <summary>
            DatabaseSuspectDataPage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSequence">
            <summary>
            CreateSequence
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterSequence">
            <summary>
            AlterSequence
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSequence">
            <summary>
            DropSequence
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateServerRole">
            <summary>
            CreateServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterServerRole">
            <summary>
            AlterServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropServerRole">
            <summary>
            DropServerRole
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterServerConfiguration">
            <summary>
            AlterServerConfiguration
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.CreateSearchPropertyList">
            <summary>
            CreateSearchPropertyList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.AlterSearchPropertyList">
            <summary>
            AlterSearchPropertyList
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventType.DropSearchPropertyList">
            <summary>
            DropSearchPropertyList
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DataSourceType">
            <summary>
            External data source type options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DataSourceType.Hadoop">
            <summary>
            Hadoop
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DataSourceType.RDBMS">
            <summary>
            RDBMS
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DataSourceType.ShardMapManager">
            <summary>
            ShardMapManager
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DataSourceType.BlobStorage">
            <summary>
            BlobStorage
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.DataSourceType.ExternalGenerics">
            <summary>
            ExternalGenerics
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FileFormatType">
            <summary>
            External file format type options.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.DelimitedText">
            <summary>
            DelimitedText
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.RcFile">
            <summary>
            RcFile
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.Orc">
            <summary>
            Orc
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.Parquet">
            <summary>
            Parquet
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.JSON">
            <summary>
            JSON
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FileFormatType.Delta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.RejectType">
            <summary>
            External table reject type options.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RejectType.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.RejectType.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.MemoryPartitionMode">
            <summary>
            Memory partion mode for event session
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryPartitionMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryPartitionMode.PerNode">
            <summary>
            PerNode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryPartitionMode.PerCpu">
            <summary>
            PerCpu
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventRetentionMode">
            <summary>
            Event retention mode for event session
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventRetentionMode.AllowSingleEventLoss">
            <summary>
            AllowSingleEventLoss
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventRetentionMode.AllowMultipleEventLoss">
            <summary>
            AllowMultipleEventLoss
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventRetentionMode.NoEventLoss">
            <summary>
            NoEventLoss
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ForeignKeyAction">
            <summary>
            Actions taken when a key to which existing foreign key points is updated or deleted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ForeignKeyAction.NoAction">
            <summary>
            NoAction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ForeignKeyAction.Cascade">
            <summary>
            Cascade
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ForeignKeyAction.SetNull">
            <summary>
            SetNull
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ForeignKeyAction.SetDefault">
            <summary>
            SetDefault
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Tessellation">
            <summary>
            Grid tessellation in spatial index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Tessellation.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Tessellation.Geometry">
            <summary>
            Geometry
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Tessellation.Geography">
            <summary>
            Geography
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Tessellation.AutoGeometry">
            <summary>
            AutoGeometry
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Tessellation.AutoGeography">
            <summary>
            AutoGeography
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.LoginEncryptionOption">
            <summary>
            SQL login encryption options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LoginEncryptionOption.Encrypt">
            <summary>
            Encrypt
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LoginEncryptionOption.AlreadyEncrypted">
            <summary>
            AlreadyEncrypted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.LoginEncryptionOption.AlreadyEncryptedOld">
            <summary>
            AlreadyEncryptedOld
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.MemoryUnit">
            <summary>
            Memory units for use in SQL models
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.Percent">
            <summary>
            Percent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.Bytes">
            <summary>
            Bytes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.KB">
            <summary>
            KB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.MB">
            <summary>
            MB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.GB">
            <summary>
            GB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.TB">
            <summary>
            TB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.PB">
            <summary>
            PB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MemoryUnit.EB">
            <summary>
            EB
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.MessageSentBy">
            <summary>
            Specifies message sender type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MessageSentBy.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MessageSentBy.Initiator">
            <summary>
            Initiator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MessageSentBy.Target">
            <summary>
            Target
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.MessageSentBy.Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ValidationMethod">
            <summary>
            Specifies message validation method
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ValidationMethod.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ValidationMethod.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ValidationMethod.Empty">
            <summary>
            Empty
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ValidationMethod.WellFormedXml">
            <summary>
            WellFormedXml
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ValidationMethod.ValidXml">
            <summary>
            ValidXml
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionRange">
            <summary>
            Specifies to which side of interval, left or right, the boundary value belongs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PartitionRange.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PartitionRange.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PartitionRange.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Payload">
            <summary>
            Payload types for endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Payload.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Payload.Soap">
            <summary>
            Soap
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Payload.TSql">
            <summary>
            TSql
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Payload.ServiceBroker">
            <summary>
            ServiceBroker
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Payload.DatabaseMirroring">
            <summary>
            DatabaseMirroring
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PermissionAction">
            <summary>
            SQL permission action types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionAction.Grant">
            <summary>
            Grant
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.PermissionAction.Deny">
            <summary>
            Deny
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType">
            <summary>
            Types of secondary XML index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType.Property">
            <summary>
            Property
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecondaryXmlIndexType.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Protocol">
            <summary>
            Protocol types for endpoints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Protocol.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Protocol.Http">
            <summary>
            Http
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Protocol.Tcp">
            <summary>
            Tcp
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TimeUnit">
            <summary>
            Describes the unit for retention period.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TimeUnit.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TimeUnit.Seconds">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TimeUnit.Days">
            <summary>
            Days
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TimeUnit.Hours">
            <summary>
            Hours
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TimeUnit.Minutes">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SamplingStyle">
            <summary>
            Sampling styles used to create statistics
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SamplingStyle.Automatic">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SamplingStyle.Fullscan">
            <summary>
            Fullscan
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SamplingStyle.SamplePercentRows">
            <summary>
            SamplePercentRows
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SamplingStyle.SampleAbsoluteRows">
            <summary>
            SampleAbsoluteRows
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.OrderRestriction">
            <summary>
            Trigger oder restriction types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.OrderRestriction.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.OrderRestriction.IsFirst">
            <summary>
            IsFirst
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.OrderRestriction.IsLast">
            <summary>
            IsLast
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TriggerType">
            <summary>
            Trigger types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TriggerType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TriggerType.For">
            <summary>
            For
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TriggerType.After">
            <summary>
            After
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TriggerType.InsteadOf">
            <summary>
            InsteadOf
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuthenticationType">
            <summary>
            Database user Authentication type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationType.None">
            <summary>
            User without a login, Application Role, Database Role,  Certificate mapped user or Asymmetric key mapped user
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationType.InstanceAuthentication">
            <summary>
            User with login 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationType.DatabaseAuthentication">
            <summary>
            User with a password
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationType.WindowsAuthentication">
            <summary>
            Windows user with login, Windows user without a login or Windows group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.AuthenticationType.ExternalAuthenticationProvider">
            <summary>
            User supplied by an external authentication provider (e.g. Azure Active Directory).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.XmlStyle">
            <summary>
            XML data type style
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.XmlStyle.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.XmlStyle.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.XmlStyle.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Containment">
            <summary>
            Database Containment types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Containment.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Containment.Partial">
            <summary>
            Partial
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FailureAction">
            <summary>
            Action type for audit failure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FailureAction.Continue">
            <summary>
            Continue
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FailureAction.Shutdown">
            <summary>
            Shutdown
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.FailureAction.FailOperation">
            <summary>
            FailOperation
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.NonTransactedFileStreamAccess">
            <summary>
            FILESTREAM non-transactional access option values
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.NonTransactedFileStreamAccess.Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.NonTransactedFileStreamAccess.ReadOnly">
            <summary>
            ReadOnly
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.NonTransactedFileStreamAccess.Full">
            <summary>
            Full
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Durability">
            <summary>
            Durability of a table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Durability.SchemaAndData">
            <summary>
            Table is durable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.Durability.SchemaOnly">
            <summary>
            Table is non-durable.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSessionScope">
            <summary>
            Scope of the event session
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventSessionScope.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.EventSessionScope.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType">
            <summary>
            Column system-versioned generated always type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.None">
            <summary>
            Column is not a generated always type of column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsRowStart">
            <summary>
            Column has a type of 'generated always as row start'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsRowEnd">
            <summary>
            Column has a type of 'generated always as row end'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsTransactionIdStart">
            <summary>
            Column has a type of 'generated always as transaction_id start'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsTransactionIdEnd">
            <summary>
            Column has a type of 'generated always as transaction_id end'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsSequenceNumberStart">
            <summary>
            Column has a type of 'generated always as sequence_number start'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.ColumnGeneratedAlwaysType.GeneratedAlwaysAsSequenceNumberEnd">
            <summary>
            Column has a type of 'generated always as sequence_number end'.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UserType">
            <summary>
            User type (for use with Azure active directory users).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserType.None">
            <summary>
            No specified Azure active directory user type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserType.ExternalUser">
            <summary>
            An Azure active directory user.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.UserType.ExternalGroup">
            <summary>
            An Azure active directory group.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation">
            <summary>
            The operation to which a security predicate applies
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation.AfterInsert">
            <summary>
            AfterInsert
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation.AfterUpdate">
            <summary>
            AfterUpdate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation.BeforeUpdate">
            <summary>
            BeforeUpdate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateOperation.BeforeDelete">
            <summary>
            BeforeDelete
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SecurityPredicateType">
            <summary>
            The type of the security predicate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateType.Filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.SecurityPredicateType.Block">
            <summary>
            Block
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.QueryStoreCaptureMode">
            <summary>
            Query Store SIZE_BASED_CLEANUP_MODE option values
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreCaptureMode.All">
            <summary>
            Query Store captures all queries. This is the default configuration value
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreCaptureMode.Auto">
            <summary>
            Query Store captures relevant queries based on execution count and resource consumption.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreCaptureMode.None">
            <summary>
            Query Store does not capture new queries.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.QueryStoreDesiredState">
            <summary>
            Query Store Operation Mode/Desired State option values
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreDesiredState.Off">
            <summary>
            Query Store feature is OFF.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreDesiredState.ReadOnly">
            <summary>
            Query Store does not record new data.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.QueryStoreDesiredState.ReadWrite">
            <summary>
            Query store records new data.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CatalogCollation">
            <summary>
            Catalog collation types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CatalogCollation.Database_Default">
            <summary>
            Database_Default
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CatalogCollation.Latin1_General_100_CI_AS_KS_WS_SC">
            <summary>
            Latin1_General_100_CI_AS_KS_WS_SC
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.CatalogCollation.SQL_Latin1_General_CP1_CI_AS">
            <summary>
            SQL_Latin1_General_CP1_CI_AS
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType">
            <summary>
            The type of a SQL DW table distribution policy.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType.Replicate">
            <summary>
            Replicate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType.RoundRobin">
            <summary>
            RoundRobin
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Dac.Model.TableDistributionPolicyType.Hash">
            <summary>
            Hash
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Column">
            <summary>
            Model schema container class for Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.TypeClass">
            <summary>
            Type class for Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.ColumnType">
            <summary>
            ColumnType metadata class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Collation">
            <summary>
            Collation property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsIdentityNotForReplication">
            <summary>
            IsIdentityNotForReplication property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Nullable">
            <summary>
            Nullable property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsRowGuidCol">
            <summary>
            IsRowGuidCol property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Sparse">
            <summary>
            Sparse property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Expression">
            <summary>
            Expression property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Persisted">
            <summary>
            Persisted property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.PersistedNullable">
            <summary>
            PersistedNullable property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Scale">
            <summary>
            Scale property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Precision">
            <summary>
            Precision property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.Length">
            <summary>
            Length property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsMax">
            <summary>
            IsMax property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.XmlStyle">
            <summary>
            XmlStyle property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.EncryptionAlgorithmName">
            <summary>
            EncryptionAlgorithmName property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.EncryptionType">
            <summary>
            EncryptionType property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.GeneratedAlwaysType">
            <summary>
            GeneratedAlwaysType property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.GraphType">
            <summary>
            GraphType property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IdentityIncrement">
            <summary>
            IdentityIncrement property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IdentitySeed">
            <summary>
            IdentitySeed property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsFileStream">
            <summary>
            IsFileStream property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsHidden">
            <summary>
            IsHidden property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsIdentity">
            <summary>
            IsIdentity property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.IsPseudoColumn">
            <summary>
            IsPseudoColumn property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.MaskingFunction">
            <summary>
            MaskingFunction property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.SensitivityInformationType">
            <summary>
            SensitivityInformationType property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.SensitivityInformationTypeId">
            <summary>
            SensitivityInformationTypeId property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.SensitivityLabel">
            <summary>
            SensitivityLabel property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.SensitivityLabelId">
            <summary>
            SensitivityLabelId property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.SensitivityRank">
            <summary>
            SensitivityRank property class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.XmlSchemaCollection">
            <summary>
            XmlSchemaCollection relationship class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.DataType">
            <summary>
            DataType relationship class of Column
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Column.ColumnEncryptionKey">
            <summary>
            ColumnEncryptionKey relationship class of Column
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKey">
            <summary>
            Model schema container class for ColumnEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKey.TypeClass">
            <summary>
            Type class for ColumnEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKey.ColumnEncryptionKeyValue">
            <summary>
            ColumnEncryptionKeyValue relationship class of ColumnEncryptionKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue">
            <summary>
            Model schema container class for ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue.TypeClass">
            <summary>
            Type class for ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue.EncryptedValue">
            <summary>
            EncryptedValue property class of ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue.EncryptionAlgorithm">
            <summary>
            EncryptionAlgorithm property class of ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnEncryptionKeyValue.ColumnMasterKey">
            <summary>
            ColumnMasterKey relationship class of ColumnEncryptionKeyValue
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnMasterKey">
            <summary>
            Model schema container class for ColumnMasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnMasterKey.TypeClass">
            <summary>
            Type class for ColumnMasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnMasterKey.AllowEnclaveComputations">
            <summary>
            AllowEnclaveComputations property class of ColumnMasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnMasterKey.KeyPath">
            <summary>
            KeyPath property class of ColumnMasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnMasterKey.KeyStoreProviderName">
            <summary>
            KeyStoreProviderName property class of ColumnMasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnMasterKey.Signature">
            <summary>
            Signature property class of ColumnMasterKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableValuedFunction">
            <summary>
            Model schema container class for TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.TypeClass">
            <summary>
            Type class for TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.FunctionType">
            <summary>
            FunctionType metadata class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ReturnsNullOnNullInput">
            <summary>
            ReturnsNullOnNullInput property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.CalledOnNullInput">
            <summary>
            CalledOnNullInput property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.WithEncryption">
            <summary>
            WithEncryption property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.WithSchemaBinding">
            <summary>
            WithSchemaBinding property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ReturnTableVariableName">
            <summary>
            ReturnTableVariableName property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ClassName">
            <summary>
            ClassName property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.DataAccess">
            <summary>
            DataAccess property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.FillRowMethodName">
            <summary>
            FillRowMethodName property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Deterministic">
            <summary>
            Deterministic property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Precise">
            <summary>
            Precise property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.MethodName">
            <summary>
            MethodName property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.SystemDataAccess">
            <summary>
            SystemDataAccess property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.IsNativeCompiled">
            <summary>
            IsNativeCompiled property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.IsReplicated">
            <summary>
            IsReplicated property class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Assembly">
            <summary>
            Assembly relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.TableOption">
            <summary>
            TableOption relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.ReturnType">
            <summary>
            ReturnType relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.BodyDependencies">
            <summary>
            BodyDependencies relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Columns">
            <summary>
            Columns relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Login">
            <summary>
            Login relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Parameters">
            <summary>
            Parameters relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.Schema">
            <summary>
            Schema relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableValuedFunction.User">
            <summary>
            User relationship class of TableValuedFunction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ScalarFunction">
            <summary>
            Model schema container class for ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.TypeClass">
            <summary>
            Type class for ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ReturnsNullOnNullInput">
            <summary>
            ReturnsNullOnNullInput property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.CalledOnNullInput">
            <summary>
            CalledOnNullInput property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.WithEncryption">
            <summary>
            WithEncryption property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.WithSchemaBinding">
            <summary>
            WithSchemaBinding property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ClassName">
            <summary>
            ClassName property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.DataAccess">
            <summary>
            DataAccess property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.FillRowMethodName">
            <summary>
            FillRowMethodName property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Deterministic">
            <summary>
            Deterministic property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Precise">
            <summary>
            Precise property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.MethodName">
            <summary>
            MethodName property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.SystemDataAccess">
            <summary>
            SystemDataAccess property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.IsInline">
            <summary>
            IsInline property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.IsInlineable">
            <summary>
            IsInlineable property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.IsNativeCompiled">
            <summary>
            IsNativeCompiled property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.IsReplicated">
            <summary>
            IsReplicated property class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Assembly">
            <summary>
            Assembly relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.ReturnType">
            <summary>
            ReturnType relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.BodyDependencies">
            <summary>
            BodyDependencies relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Login">
            <summary>
            Login relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Parameters">
            <summary>
            Parameters relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.Schema">
            <summary>
            Schema relationship class of ScalarFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ScalarFunction.User">
            <summary>
            User relationship class of ScalarFunction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ClrTableOption">
            <summary>
            Model schema container class for ClrTableOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTableOption.TypeClass">
            <summary>
            Type class for ClrTableOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTableOption.ClassName">
            <summary>
            ClassName property class of ClrTableOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTableOption.OrderColumns">
            <summary>
            OrderColumns relationship class of ClrTableOption
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ClrTableOption.OrderColumnsRelationship">
            <summary>
            Model schema container class for OrderColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTableOption.OrderColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for OrderColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTableOption.OrderColumnsRelationship.Ascending">
            <summary>
            Ascending property class of OrderColumnsRelationship
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Aggregate">
            <summary>
            Model schema container class for Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.TypeClass">
            <summary>
            Type class for Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.InvariantToDuplicates">
            <summary>
            InvariantToDuplicates property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.InvariantToNulls">
            <summary>
            InvariantToNulls property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.NullIfEmpty">
            <summary>
            NullIfEmpty property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.ClassName">
            <summary>
            ClassName property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.Format">
            <summary>
            Format property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.MaxByteSize">
            <summary>
            MaxByteSize property class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.ReturnType">
            <summary>
            ReturnType relationship class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.Assembly">
            <summary>
            Assembly relationship class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.Parameters">
            <summary>
            Parameters relationship class of Aggregate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Aggregate.Schema">
            <summary>
            Schema relationship class of Aggregate
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ApplicationRole">
            <summary>
            Model schema container class for ApplicationRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ApplicationRole.TypeClass">
            <summary>
            Type class for ApplicationRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ApplicationRole.Password">
            <summary>
            Password property class of ApplicationRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ApplicationRole.DefaultSchema">
            <summary>
            DefaultSchema relationship class of ApplicationRole
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Index">
            <summary>
            Model schema container class for Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.TypeClass">
            <summary>
            Type class for Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.AllowPageLocks">
            <summary>
            AllowPageLocks property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.AllowRowLocks">
            <summary>
            AllowRowLocks property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.IncrementalStatistics">
            <summary>
            IncrementalStatistics property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Clustered">
            <summary>
            Clustered property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Disabled">
            <summary>
            Disabled property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.FileStreamNull">
            <summary>
            FileStreamNull property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.WithPadIndex">
            <summary>
            WithPadIndex property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Unique">
            <summary>
            Unique property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.FilterPredicate">
            <summary>
            FilterPredicate property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Hash">
            <summary>
            Hash property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.OptimizeForSequentialKey">
            <summary>
            OptimizeForSequentialKey property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.BucketCount">
            <summary>
            BucketCount property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.FillFactor">
            <summary>
            FillFactor property class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Columns">
            <summary>
            Columns relationship class of Index
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Index.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.BodyDependencies">
            <summary>
            BodyDependencies relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.Filegroup">
            <summary>
            Filegroup relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.IncludedColumns">
            <summary>
            IncludedColumns relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.IndexedObject">
            <summary>
            IndexedObject relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.PartitionColumn">
            <summary>
            PartitionColumn relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.PartitionScheme">
            <summary>
            PartitionScheme relationship class of Index
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Index.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of Index
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Assembly">
            <summary>
            Model schema container class for Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.TypeClass">
            <summary>
            Type class for Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.Visible">
            <summary>
            Visible property class of Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.PermissionSet">
            <summary>
            PermissionSet property class of Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.AssemblySources">
            <summary>
            AssemblySources relationship class of Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.Authorizer">
            <summary>
            Authorizer relationship class of Assembly
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Assembly.ReferencedAssemblies">
            <summary>
            ReferencedAssemblies relationship class of Assembly
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AssemblySource">
            <summary>
            Model schema container class for AssemblySource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AssemblySource.TypeClass">
            <summary>
            Type class for AssemblySource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AssemblySource.Source">
            <summary>
            Source property class of AssemblySource
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AsymmetricKey">
            <summary>
            Model schema container class for AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.TypeClass">
            <summary>
            Type class for AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.Password">
            <summary>
            Password property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.EncryptedWithPassword">
            <summary>
            EncryptedWithPassword property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.Algorithm">
            <summary>
            Algorithm property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.CreationDisposition">
            <summary>
            CreationDisposition property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.ExecutableFile">
            <summary>
            ExecutableFile property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.File">
            <summary>
            File property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.ProviderKeyName">
            <summary>
            ProviderKeyName property class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.Assembly">
            <summary>
            Assembly relationship class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.Authorizer">
            <summary>
            Authorizer relationship class of AsymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AsymmetricKey.Provider">
            <summary>
            Provider relationship class of AsymmetricKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuditAction">
            <summary>
            Model schema container class for AuditAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditAction.TypeClass">
            <summary>
            Type class for AuditAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditAction.Action">
            <summary>
            Action property class of AuditAction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuditActionGroup">
            <summary>
            Model schema container class for AuditActionGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionGroup.TypeClass">
            <summary>
            Type class for AuditActionGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionGroup.ActionGroup">
            <summary>
            ActionGroup property class of AuditActionGroup
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.AuditActionSpecification">
            <summary>
            Model schema container class for AuditActionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionSpecification.TypeClass">
            <summary>
            Type class for AuditActionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionSpecification.AuditsDatabase">
            <summary>
            AuditsDatabase property class of AuditActionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionSpecification.AuditActions">
            <summary>
            AuditActions relationship class of AuditActionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionSpecification.Principals">
            <summary>
            Principals relationship class of AuditActionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.AuditActionSpecification.SecuredObject">
            <summary>
            SecuredObject relationship class of AuditActionSpecification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.BrokerPriority">
            <summary>
            Model schema container class for BrokerPriority
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BrokerPriority.TypeClass">
            <summary>
            Type class for BrokerPriority
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BrokerPriority.RemoteServiceName">
            <summary>
            RemoteServiceName property class of BrokerPriority
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BrokerPriority.PriorityLevel">
            <summary>
            PriorityLevel property class of BrokerPriority
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BrokerPriority.ContractName">
            <summary>
            ContractName relationship class of BrokerPriority
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BrokerPriority.LocalServiceName">
            <summary>
            LocalServiceName relationship class of BrokerPriority
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.BuiltInServerRole">
            <summary>
            Model schema container class for BuiltInServerRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.BuiltInServerRole.TypeClass">
            <summary>
            Type class for BuiltInServerRole
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DataType">
            <summary>
            Model schema container class for DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.TypeClass">
            <summary>
            Type class for DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.UddtNullable">
            <summary>
            UddtNullable property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.UddtIsMax">
            <summary>
            UddtIsMax property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.UddtLength">
            <summary>
            UddtLength property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.UddtPrecision">
            <summary>
            UddtPrecision property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.UddtScale">
            <summary>
            UddtScale property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.SqlDataType">
            <summary>
            SqlDataType property class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.Schema">
            <summary>
            Schema relationship class of DataType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataType.Type">
            <summary>
            Type relationship class of DataType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Certificate">
            <summary>
            Model schema container class for Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.TypeClass">
            <summary>
            Type class for Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.ActiveForBeginDialog">
            <summary>
            ActiveForBeginDialog property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.EncryptedWithPassword">
            <summary>
            EncryptedWithPassword property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.EncryptionPassword">
            <summary>
            EncryptionPassword property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.ExpiryDate">
            <summary>
            ExpiryDate property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.StartDate">
            <summary>
            StartDate property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.Subject">
            <summary>
            Subject property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.PrivateKeyFilePath">
            <summary>
            PrivateKeyFilePath property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.ExistingKeysFilePath">
            <summary>
            ExistingKeysFilePath property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.IsExistingKeyFileExecutable">
            <summary>
            IsExistingKeyFileExecutable property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.PrivateKeyDecryptionPassword">
            <summary>
            PrivateKeyDecryptionPassword property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.PrivateKeyEncryptionPassword">
            <summary>
            PrivateKeyEncryptionPassword property class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.Authorizer">
            <summary>
            Authorizer relationship class of Certificate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Certificate.ExistingKeysAssembly">
            <summary>
            ExistingKeysAssembly relationship class of Certificate
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CheckConstraint">
            <summary>
            Model schema container class for CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.TypeClass">
            <summary>
            Type class for CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.Expression">
            <summary>
            Expression property class of CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.Disabled">
            <summary>
            Disabled property class of CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.NotForReplication">
            <summary>
            NotForReplication property class of CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of CheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CheckConstraint.Host">
            <summary>
            Host relationship class of CheckConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ClrTypeMethod">
            <summary>
            Model schema container class for ClrTypeMethod
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethod.TypeClass">
            <summary>
            Type class for ClrTypeMethod
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethod.Name">
            <summary>
            Name property class of ClrTypeMethod
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethod.Parameters">
            <summary>
            Parameters relationship class of ClrTypeMethod
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethod.ReturnType">
            <summary>
            ReturnType relationship class of ClrTypeMethod
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter">
            <summary>
            Model schema container class for ClrTypeMethodParameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter.TypeClass">
            <summary>
            Type class for ClrTypeMethodParameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter.Name">
            <summary>
            Name property class of ClrTypeMethodParameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter.IsOutput">
            <summary>
            IsOutput property class of ClrTypeMethodParameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeMethodParameter.DataType">
            <summary>
            DataType relationship class of ClrTypeMethodParameter
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ClrTypeProperty">
            <summary>
            Model schema container class for ClrTypeProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeProperty.TypeClass">
            <summary>
            Type class for ClrTypeProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeProperty.Name">
            <summary>
            Name property class of ClrTypeProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ClrTypeProperty.ClrType">
            <summary>
            ClrType relationship class of ClrTypeProperty
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex">
            <summary>
            Model schema container class for ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.TypeClass">
            <summary>
            Type class for ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.Disabled">
            <summary>
            Disabled property class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.Clustered">
            <summary>
            Clustered property class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.FilterPredicate">
            <summary>
            FilterPredicate property class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.CompressionDelay">
            <summary>
            CompressionDelay property class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.Columns">
            <summary>
            Columns relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.BodyDependencies">
            <summary>
            BodyDependencies relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.Filegroup">
            <summary>
            Filegroup relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.IndexedObject">
            <summary>
            IndexedObject relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.OrderedColumns">
            <summary>
            OrderedColumns relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.PartitionColumn">
            <summary>
            PartitionColumn relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.PartitionScheme">
            <summary>
            PartitionScheme relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ColumnStoreIndex.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of ColumnStoreIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Contract">
            <summary>
            Model schema container class for Contract
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.TypeClass">
            <summary>
            Type class for Contract
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.Messages">
            <summary>
            Messages relationship class of Contract
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Contract.MessagesRelationship">
            <summary>
            Model schema container class for MessagesRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.MessagesRelationship.RelationshipClass">
            <summary>
            Relationship class for MessagesRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.MessagesRelationship.Default">
            <summary>
            Default property class of MessagesRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.MessagesRelationship.SentBy">
            <summary>
            SentBy property class of MessagesRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Contract.Authorizer">
            <summary>
            Authorizer relationship class of Contract
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Credential">
            <summary>
            Model schema container class for Credential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Credential.TypeClass">
            <summary>
            Type class for Credential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Credential.Identity">
            <summary>
            Identity property class of Credential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Credential.Secret">
            <summary>
            Secret property class of Credential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Credential.CryptographicProvider">
            <summary>
            CryptographicProvider relationship class of Credential
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseCredential">
            <summary>
            Model schema container class for DatabaseCredential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseCredential.TypeClass">
            <summary>
            Type class for DatabaseCredential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseCredential.Identity">
            <summary>
            Identity property class of DatabaseCredential
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseCredential.Secret">
            <summary>
            Secret property class of DatabaseCredential
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.CryptographicProvider">
            <summary>
            Model schema container class for CryptographicProvider
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CryptographicProvider.TypeClass">
            <summary>
            Type class for CryptographicProvider
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CryptographicProvider.DllPath">
            <summary>
            DllPath property class of CryptographicProvider
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.CryptographicProvider.Enabled">
            <summary>
            Enabled property class of CryptographicProvider
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification">
            <summary>
            Model schema container class for DatabaseAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification.TypeClass">
            <summary>
            Type class for DatabaseAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification.WithState">
            <summary>
            WithState property class of DatabaseAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification.AuditActionGroups">
            <summary>
            AuditActionGroups relationship class of DatabaseAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification.AuditActions">
            <summary>
            AuditActions relationship class of DatabaseAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseAuditSpecification.ServerAudit">
            <summary>
            ServerAudit relationship class of DatabaseAuditSpecification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger">
            <summary>
            Model schema container class for DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.TypeClass">
            <summary>
            Type class for DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.Disabled">
            <summary>
            Disabled property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.WithEncryption">
            <summary>
            WithEncryption property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.TriggerType">
            <summary>
            TriggerType property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.ClassName">
            <summary>
            ClassName property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.MethodName">
            <summary>
            MethodName property class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.Assembly">
            <summary>
            Assembly relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.BodyDependencies">
            <summary>
            BodyDependencies relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.EventGroup">
            <summary>
            EventGroup relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.EventType">
            <summary>
            EventType relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.Login">
            <summary>
            Login relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseDdlTrigger.User">
            <summary>
            User relationship class of DatabaseDdlTrigger
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey">
            <summary>
            Model schema container class for DatabaseEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey.TypeClass">
            <summary>
            Type class for DatabaseEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey.Algorithm">
            <summary>
            Algorithm property class of DatabaseEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey.Certificate">
            <summary>
            Certificate relationship class of DatabaseEncryptionKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEncryptionKey.AsymmetricKey">
            <summary>
            AsymmetricKey relationship class of DatabaseEncryptionKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification">
            <summary>
            Model schema container class for DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.TypeClass">
            <summary>
            Type class for DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.WithFanIn">
            <summary>
            WithFanIn property class of DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.BrokerService">
            <summary>
            BrokerService property class of DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.BrokerInstanceSpecifier">
            <summary>
            BrokerInstanceSpecifier property class of DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.EventGroup">
            <summary>
            EventGroup relationship class of DatabaseEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventNotification.EventType">
            <summary>
            EventType relationship class of DatabaseEventNotification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier">
            <summary>
            Model schema container class for DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.TypeClass">
            <summary>
            Type class for DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.WindowsAuthenticationMode">
            <summary>
            WindowsAuthenticationMode property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.UseCertificateFirst">
            <summary>
            UseCertificateFirst property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.EncryptionAlgorithmPart1">
            <summary>
            EncryptionAlgorithmPart1 property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.EncryptionAlgorithmPart2">
            <summary>
            EncryptionAlgorithmPart2 property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.EncryptionMode">
            <summary>
            EncryptionMode property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.RoleType">
            <summary>
            RoleType property class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseMirroringLanguageSpecifier.AuthenticationCertificate">
            <summary>
            AuthenticationCertificate relationship class of DatabaseMirroringLanguageSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions">
            <summary>
            Model schema container class for DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TypeClass">
            <summary>
            Type class for DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.CompatibilityLevel">
            <summary>
            CompatibilityLevel property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AllowSnapshotIsolation">
            <summary>
            AllowSnapshotIsolation property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AnsiNullDefaultOn">
            <summary>
            AnsiNullDefaultOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AnsiPaddingOn">
            <summary>
            AnsiPaddingOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AnsiWarningsOn">
            <summary>
            AnsiWarningsOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ArithAbortOn">
            <summary>
            ArithAbortOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoClose">
            <summary>
            AutoClose property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoCreateStatistics">
            <summary>
            AutoCreateStatistics property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoCreateStatisticsIncremental">
            <summary>
            AutoCreateStatisticsIncremental property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoShrink">
            <summary>
            AutoShrink property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoUpdateStatisticsAsync">
            <summary>
            AutoUpdateStatisticsAsync property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.AutoUpdateStatistics">
            <summary>
            AutoUpdateStatistics property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.HonorBrokerPriority">
            <summary>
            HonorBrokerPriority property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ChangeTrackingAutoCleanup">
            <summary>
            ChangeTrackingAutoCleanup property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ChangeTrackingEnabled">
            <summary>
            ChangeTrackingEnabled property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ConcatNullYieldsNull">
            <summary>
            ConcatNullYieldsNull property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.CursorCloseOnCommit">
            <summary>
            CursorCloseOnCommit property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.CursorDefaultGlobalScope">
            <summary>
            CursorDefaultGlobalScope property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DateCorrelationOptimizationOn">
            <summary>
            DateCorrelationOptimizationOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DBChainingOn">
            <summary>
            DBChainingOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.WithEncryption">
            <summary>
            WithEncryption property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.FullTextEnabled">
            <summary>
            FullTextEnabled property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.NestedTriggersOn">
            <summary>
            NestedTriggersOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.NumericRoundAbortOn">
            <summary>
            NumericRoundAbortOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DatabaseStateOffline">
            <summary>
            DatabaseStateOffline property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TransactionIsolationReadCommittedSnapshot">
            <summary>
            TransactionIsolationReadCommittedSnapshot property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ReadOnly">
            <summary>
            ReadOnly property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.RecursiveTriggersOn">
            <summary>
            RecursiveTriggersOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.SupplementalLoggingOn">
            <summary>
            SupplementalLoggingOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TornPageProtectionOn">
            <summary>
            TornPageProtectionOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TransformNoiseWords">
            <summary>
            TransformNoiseWords property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.Trustworthy">
            <summary>
            Trustworthy property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.VardecimalStorageFormatOn">
            <summary>
            VardecimalStorageFormatOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.UserAccessOption">
            <summary>
            UserAccessOption property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DelayedDurabilityMode">
            <summary>
            DelayedDurabilityMode property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.MemoryOptimizedElevateToSnapshot">
            <summary>
            MemoryOptimizedElevateToSnapshot property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DataRetentionEnabled">
            <summary>
            DataRetentionEnabled property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.CatalogCollation">
            <summary>
            CatalogCollation property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ChangeTrackingRetentionPeriod">
            <summary>
            ChangeTrackingRetentionPeriod property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ChangeTrackingRetentionUnit">
            <summary>
            ChangeTrackingRetentionUnit property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.Collation">
            <summary>
            Collation property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.Containment">
            <summary>
            Containment property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DefaultFullTextLanguage">
            <summary>
            DefaultFullTextLanguage property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DefaultLanguage">
            <summary>
            DefaultLanguage property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DWCompatibilityLevel">
            <summary>
            DWCompatibilityLevel property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.FileStreamDirectoryName">
            <summary>
            FileStreamDirectoryName property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.IsLedgerOn">
            <summary>
            IsLedgerOn property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.LegacyCardinalityEstimation">
            <summary>
            LegacyCardinalityEstimation property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.LegacyCardinalityEstimationForSecondary">
            <summary>
            LegacyCardinalityEstimationForSecondary property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.MaxDop">
            <summary>
            MaxDop property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.MaxDopForSecondary">
            <summary>
            MaxDopForSecondary property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.NonTransactedFileStreamAccess">
            <summary>
            NonTransactedFileStreamAccess property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.PageVerifyMode">
            <summary>
            PageVerifyMode property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ParameterizationOption">
            <summary>
            ParameterizationOption property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ParameterSniffing">
            <summary>
            ParameterSniffing property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ParameterSniffingForSecondary">
            <summary>
            ParameterSniffingForSecondary property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryOptimizerHotfixes">
            <summary>
            QueryOptimizerHotfixes property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryOptimizerHotfixesForSecondary">
            <summary>
            QueryOptimizerHotfixesForSecondary property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreCaptureMode">
            <summary>
            QueryStoreCaptureMode property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreDesiredState">
            <summary>
            QueryStoreDesiredState property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreFlushInterval">
            <summary>
            QueryStoreFlushInterval property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreIntervalLength">
            <summary>
            QueryStoreIntervalLength property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreMaxPlansPerQuery">
            <summary>
            QueryStoreMaxPlansPerQuery property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreMaxStorageSize">
            <summary>
            QueryStoreMaxStorageSize property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.QueryStoreStaleQueryThreshold">
            <summary>
            QueryStoreStaleQueryThreshold property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.RecoveryMode">
            <summary>
            RecoveryMode property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.RemoteDataEnabled">
            <summary>
            RemoteDataEnabled property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.ServiceBrokerOption">
            <summary>
            ServiceBrokerOption property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TargetRecoveryTimePeriod">
            <summary>
            TargetRecoveryTimePeriod property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TargetRecoveryTimeUnit">
            <summary>
            TargetRecoveryTimeUnit property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TemporalHistoryRetentionEnabled">
            <summary>
            TemporalHistoryRetentionEnabled property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.TwoDigitYearCutoff">
            <summary>
            TwoDigitYearCutoff property class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DefaultFilegroup">
            <summary>
            DefaultFilegroup relationship class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.DefaultFileStreamFilegroup">
            <summary>
            DefaultFileStreamFilegroup relationship class of DatabaseOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseOptions.GenericDatabaseScopedConfigurationOptions">
            <summary>
            GenericDatabaseScopedConfigurationOptions relationship class of DatabaseOptions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DataCompressionOption">
            <summary>
            Model schema container class for DataCompressionOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataCompressionOption.TypeClass">
            <summary>
            Type class for DataCompressionOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataCompressionOption.CompressionLevel">
            <summary>
            CompressionLevel property class of DataCompressionOption
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DataCompressionOption.PartitionNumber">
            <summary>
            PartitionNumber property class of DataCompressionOption
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Default">
            <summary>
            Model schema container class for Default
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Default.TypeClass">
            <summary>
            Type class for Default
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Default.Expression">
            <summary>
            Expression property class of Default
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Default.BoundObjects">
            <summary>
            BoundObjects relationship class of Default
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Default.Schema">
            <summary>
            Schema relationship class of Default
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DefaultConstraint">
            <summary>
            Model schema container class for DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.TypeClass">
            <summary>
            Type class for DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.Expression">
            <summary>
            Expression property class of DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.Disabled">
            <summary>
            Disabled property class of DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.WithValues">
            <summary>
            WithValues property class of DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.Host">
            <summary>
            Host relationship class of DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.TargetColumn">
            <summary>
            TargetColumn relationship class of DefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DefaultConstraint.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of DefaultConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DmlTrigger">
            <summary>
            Model schema container class for DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.TypeClass">
            <summary>
            Type class for DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.Disabled">
            <summary>
            Disabled property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.WithEncryption">
            <summary>
            WithEncryption property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.NotForReplication">
            <summary>
            NotForReplication property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.WithAppend">
            <summary>
            WithAppend property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.TriggerType">
            <summary>
            TriggerType property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.ClassName">
            <summary>
            ClassName property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.DeleteOrderRestriction">
            <summary>
            DeleteOrderRestriction property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.InsertOrderRestriction">
            <summary>
            InsertOrderRestriction property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.IsDeleteTrigger">
            <summary>
            IsDeleteTrigger property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.IsInsertTrigger">
            <summary>
            IsInsertTrigger property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.IsNativeCompiled">
            <summary>
            IsNativeCompiled property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.IsSchemaBound">
            <summary>
            IsSchemaBound property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.IsUpdateTrigger">
            <summary>
            IsUpdateTrigger property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.MethodName">
            <summary>
            MethodName property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.UpdateOrderRestriction">
            <summary>
            UpdateOrderRestriction property class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.TriggerObject">
            <summary>
            TriggerObject relationship class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.Assembly">
            <summary>
            Assembly relationship class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.BodyDependencies">
            <summary>
            BodyDependencies relationship class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.Login">
            <summary>
            Login relationship class of DmlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DmlTrigger.User">
            <summary>
            User relationship class of DmlTrigger
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Endpoint">
            <summary>
            Model schema container class for Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.TypeClass">
            <summary>
            Type class for Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.Payload">
            <summary>
            Payload property class of Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.Protocol">
            <summary>
            Protocol property class of Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.State">
            <summary>
            State property class of Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.Authorizer">
            <summary>
            Authorizer relationship class of Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.PayloadSpecifier">
            <summary>
            PayloadSpecifier relationship class of Endpoint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Endpoint.ProtocolSpecifier">
            <summary>
            ProtocolSpecifier relationship class of Endpoint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ErrorMessage">
            <summary>
            Model schema container class for ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.TypeClass">
            <summary>
            Type class for ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.WithLog">
            <summary>
            WithLog property class of ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.Language">
            <summary>
            Language property class of ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.MessageNumber">
            <summary>
            MessageNumber property class of ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.MessageText">
            <summary>
            MessageText property class of ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ErrorMessage.Severity">
            <summary>
            Severity property class of ErrorMessage
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventGroup">
            <summary>
            Model schema container class for EventGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventGroup.TypeClass">
            <summary>
            Type class for EventGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventGroup.Group">
            <summary>
            Group property class of EventGroup
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSession">
            <summary>
            Model schema container class for EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.TypeClass">
            <summary>
            Type class for EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.StartupState">
            <summary>
            StartupState property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.TrackCausality">
            <summary>
            TrackCausality property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MaxDispatchLatency">
            <summary>
            MaxDispatchLatency property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MaxEventSizeUnit">
            <summary>
            MaxEventSizeUnit property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MaxMemoryUnit">
            <summary>
            MaxMemoryUnit property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.EventRetentionMode">
            <summary>
            EventRetentionMode property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MaxEventSize">
            <summary>
            MaxEventSize property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MaxMemory">
            <summary>
            MaxMemory property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.MemoryPartitionMode">
            <summary>
            MemoryPartitionMode property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.SessionScope">
            <summary>
            SessionScope property class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.EventDefinitions">
            <summary>
            EventDefinitions relationship class of EventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSession.EventTargets">
            <summary>
            EventTargets relationship class of EventSession
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.DatabaseEventSession">
            <summary>
            Model schema container class for DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.TypeClass">
            <summary>
            Type class for DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.StartupState">
            <summary>
            StartupState property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.TrackCausality">
            <summary>
            TrackCausality property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MaxDispatchLatency">
            <summary>
            MaxDispatchLatency property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MaxEventSizeUnit">
            <summary>
            MaxEventSizeUnit property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MaxMemoryUnit">
            <summary>
            MaxMemoryUnit property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.EventRetentionMode">
            <summary>
            EventRetentionMode property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MaxEventSize">
            <summary>
            MaxEventSize property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MaxMemory">
            <summary>
            MaxMemory property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.MemoryPartitionMode">
            <summary>
            MemoryPartitionMode property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.SessionScope">
            <summary>
            SessionScope property class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.EventDefinitions">
            <summary>
            EventDefinitions relationship class of DatabaseEventSession
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.DatabaseEventSession.EventTargets">
            <summary>
            EventTargets relationship class of DatabaseEventSession
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSessionAction">
            <summary>
            Model schema container class for EventSessionAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionAction.TypeClass">
            <summary>
            Type class for EventSessionAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionAction.ActionName">
            <summary>
            ActionName property class of EventSessionAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionAction.EventModuleGuid">
            <summary>
            EventModuleGuid property class of EventSessionAction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionAction.EventPackageName">
            <summary>
            EventPackageName property class of EventSessionAction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions">
            <summary>
            Model schema container class for EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.TypeClass">
            <summary>
            Type class for EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.WhereExpression">
            <summary>
            WhereExpression property class of EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.EventModuleGuid">
            <summary>
            EventModuleGuid property class of EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.EventName">
            <summary>
            EventName property class of EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.EventPackageName">
            <summary>
            EventPackageName property class of EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.Actions">
            <summary>
            Actions relationship class of EventSessionDefinitions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionDefinitions.AttributeSettings">
            <summary>
            AttributeSettings relationship class of EventSessionDefinitions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSessionSetting">
            <summary>
            Model schema container class for EventSessionSetting
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionSetting.TypeClass">
            <summary>
            Type class for EventSessionSetting
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionSetting.SettingValue">
            <summary>
            SettingValue property class of EventSessionSetting
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionSetting.SettingName">
            <summary>
            SettingName property class of EventSessionSetting
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventSessionTarget">
            <summary>
            Model schema container class for EventSessionTarget
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionTarget.TypeClass">
            <summary>
            Type class for EventSessionTarget
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionTarget.EventModuleGuid">
            <summary>
            EventModuleGuid property class of EventSessionTarget
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionTarget.EventPackageName">
            <summary>
            EventPackageName property class of EventSessionTarget
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionTarget.TargetName">
            <summary>
            TargetName property class of EventSessionTarget
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventSessionTarget.ParameterSettings">
            <summary>
            ParameterSettings relationship class of EventSessionTarget
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EventTypeSpecifier">
            <summary>
            Model schema container class for EventTypeSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventTypeSpecifier.TypeClass">
            <summary>
            Type class for EventTypeSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventTypeSpecifier.EventType">
            <summary>
            EventType property class of EventTypeSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EventTypeSpecifier.Order">
            <summary>
            Order property class of EventTypeSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExtendedProcedure">
            <summary>
            Model schema container class for ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.TypeClass">
            <summary>
            Type class for ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.ExeccuteAsCaller">
            <summary>
            ExeccuteAsCaller property class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.WithEncryption">
            <summary>
            WithEncryption property class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.Login">
            <summary>
            Login relationship class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.Parameters">
            <summary>
            Parameters relationship class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.Schema">
            <summary>
            Schema relationship class of ExtendedProcedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProcedure.User">
            <summary>
            User relationship class of ExtendedProcedure
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExtendedProperty">
            <summary>
            Model schema container class for ExtendedProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProperty.TypeClass">
            <summary>
            Type class for ExtendedProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProperty.Value">
            <summary>
            Value property class of ExtendedProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExtendedProperty.Host">
            <summary>
            Host relationship class of ExtendedProperty
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalDataSource">
            <summary>
            Model schema container class for ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.TypeClass">
            <summary>
            Type class for ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.ConnectionOptions">
            <summary>
            ConnectionOptions property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.DatabaseName">
            <summary>
            DatabaseName property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.DataSourceType">
            <summary>
            DataSourceType property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.Location">
            <summary>
            Location property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.PushdownOption">
            <summary>
            PushdownOption property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.ResourceManagerLocation">
            <summary>
            ResourceManagerLocation property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.ShardMapName">
            <summary>
            ShardMapName property class of ExternalDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalDataSource.Credential">
            <summary>
            Credential relationship class of ExternalDataSource
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalFileFormat">
            <summary>
            Model schema container class for ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.TypeClass">
            <summary>
            Type class for ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.DataCompression">
            <summary>
            DataCompression property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.DateFormat">
            <summary>
            DateFormat property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.Encoding">
            <summary>
            Encoding property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.FieldTerminator">
            <summary>
            FieldTerminator property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.FirstRow">
            <summary>
            FirstRow property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.FormatType">
            <summary>
            FormatType property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.SerDeMethod">
            <summary>
            SerDeMethod property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.StringDelimiter">
            <summary>
            StringDelimiter property class of ExternalFileFormat
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalFileFormat.UseTypeDefault">
            <summary>
            UseTypeDefault property class of ExternalFileFormat
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalTable">
            <summary>
            Model schema container class for ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.TypeClass">
            <summary>
            Type class for ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.DistributionPolicyType">
            <summary>
            DistributionPolicyType property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.ExternalObjectName">
            <summary>
            ExternalObjectName property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.ExternalSchemaName">
            <summary>
            ExternalSchemaName property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.IsAnsiNullsOn">
            <summary>
            IsAnsiNullsOn property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.IsFileStreamNull">
            <summary>
            IsFileStreamNull property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.IsQuotedIdentifierOn">
            <summary>
            IsQuotedIdentifierOn property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.IsTableLockOnBulkLoad">
            <summary>
            IsTableLockOnBulkLoad property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.Location">
            <summary>
            Location property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.LockEscalation">
            <summary>
            LockEscalation property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.RejectedRowLocation">
            <summary>
            RejectedRowLocation property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.RejectSampleValue">
            <summary>
            RejectSampleValue property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.RejectType">
            <summary>
            RejectType property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.RejectValue">
            <summary>
            RejectValue property class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.Columns">
            <summary>
            Columns relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.DataSourceName">
            <summary>
            DataSourceName relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.FileFormatName">
            <summary>
            FileFormatName relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.Filegroup">
            <summary>
            Filegroup relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.PartitionColumn">
            <summary>
            PartitionColumn relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.PartitionScheme">
            <summary>
            PartitionScheme relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.Schema">
            <summary>
            Schema relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.ShardingColumn">
            <summary>
            ShardingColumn relationship class of ExternalTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalTable.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of ExternalTable
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalStream">
            <summary>
            Model schema container class for ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.TypeClass">
            <summary>
            Type class for ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.InputOptions">
            <summary>
            InputOptions property class of ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.Location">
            <summary>
            Location property class of ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.OutputOptions">
            <summary>
            OutputOptions property class of ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.DataSourceName">
            <summary>
            DataSourceName relationship class of ExternalStream
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStream.FileFormatName">
            <summary>
            FileFormatName relationship class of ExternalStream
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalStreamingJob">
            <summary>
            Model schema container class for ExternalStreamingJob
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStreamingJob.TypeClass">
            <summary>
            Type class for ExternalStreamingJob
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalStreamingJob.Statement">
            <summary>
            Statement property class of ExternalStreamingJob
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SqlFile">
            <summary>
            Model schema container class for SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.TypeClass">
            <summary>
            Type class for SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.Offline">
            <summary>
            Offline property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.Unlimited">
            <summary>
            Unlimited property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.FileGrowth">
            <summary>
            FileGrowth property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.FileGrowthUnit">
            <summary>
            FileGrowthUnit property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.FileName">
            <summary>
            FileName property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.IsLogFile">
            <summary>
            IsLogFile property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.MaxSize">
            <summary>
            MaxSize property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.MaxSizeUnit">
            <summary>
            MaxSizeUnit property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.Size">
            <summary>
            Size property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.SizeUnit">
            <summary>
            SizeUnit property class of SqlFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SqlFile.Filegroup">
            <summary>
            Filegroup relationship class of SqlFile
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Filegroup">
            <summary>
            Model schema container class for Filegroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Filegroup.TypeClass">
            <summary>
            Type class for Filegroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Filegroup.ContainsFileStream">
            <summary>
            ContainsFileStream property class of Filegroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Filegroup.ReadOnly">
            <summary>
            ReadOnly property class of Filegroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Filegroup.ContainsMemoryOptimizedData">
            <summary>
            ContainsMemoryOptimizedData property class of Filegroup
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint">
            <summary>
            Model schema container class for ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.TypeClass">
            <summary>
            Type class for ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.Disabled">
            <summary>
            Disabled property class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.NotForReplication">
            <summary>
            NotForReplication property class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.DeleteAction">
            <summary>
            DeleteAction property class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.UpdateAction">
            <summary>
            UpdateAction property class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.Host">
            <summary>
            Host relationship class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.Columns">
            <summary>
            Columns relationship class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.ForeignColumns">
            <summary>
            ForeignColumns relationship class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ForeignKeyConstraint.ForeignTable">
            <summary>
            ForeignTable relationship class of ForeignKeyConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.EdgeConstraint">
            <summary>
            Model schema container class for EdgeConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EdgeConstraint.TypeClass">
            <summary>
            Type class for EdgeConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EdgeConstraint.Disabled">
            <summary>
            Disabled property class of EdgeConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EdgeConstraint.DeleteAction">
            <summary>
            DeleteAction property class of EdgeConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EdgeConstraint.Host">
            <summary>
            Host relationship class of EdgeConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.EdgeConstraint.Clauses">
            <summary>
            Clauses relationship class of EdgeConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FullTextCatalog">
            <summary>
            Model schema container class for FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.TypeClass">
            <summary>
            Type class for FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.AccentSensitivity">
            <summary>
            AccentSensitivity property class of FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.IsDefault">
            <summary>
            IsDefault property class of FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.Path">
            <summary>
            Path property class of FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.Authorizer">
            <summary>
            Authorizer relationship class of FullTextCatalog
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextCatalog.Filegroup">
            <summary>
            Filegroup relationship class of FullTextCatalog
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FullTextIndex">
            <summary>
            Model schema container class for FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.TypeClass">
            <summary>
            Type class for FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.ChangeTracking">
            <summary>
            ChangeTracking property class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.UseSystemStopList">
            <summary>
            UseSystemStopList property class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.Disabled">
            <summary>
            Disabled property class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.Replicated">
            <summary>
            Replicated property class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.StopListOff">
            <summary>
            StopListOff property class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.UniqueIndexName">
            <summary>
            UniqueIndexName relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.Catalog">
            <summary>
            Catalog relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.Columns">
            <summary>
            Columns relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.Filegroup">
            <summary>
            Filegroup relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.IndexedObject">
            <summary>
            IndexedObject relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.SearchPropertyList">
            <summary>
            SearchPropertyList relationship class of FullTextIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndex.StopList">
            <summary>
            StopList relationship class of FullTextIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier">
            <summary>
            Model schema container class for FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier.TypeClass">
            <summary>
            Type class for FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier.PartOfStatisticalSemantics">
            <summary>
            PartOfStatisticalSemantics property class of FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier.LanguageId">
            <summary>
            LanguageId property class of FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier.Column">
            <summary>
            Column relationship class of FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextIndexColumnSpecifier.TypeColumn">
            <summary>
            TypeColumn relationship class of FullTextIndexColumnSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FullTextStopList">
            <summary>
            Model schema container class for FullTextStopList
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextStopList.TypeClass">
            <summary>
            Type class for FullTextStopList
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FullTextStopList.Authorizer">
            <summary>
            Authorizer relationship class of FullTextStopList
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier">
            <summary>
            Model schema container class for HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.TypeClass">
            <summary>
            Type class for HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.CompressionEnabled">
            <summary>
            CompressionEnabled property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.ListeningOnAllNoneReservedSites">
            <summary>
            ListeningOnAllNoneReservedSites property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.ListeningOnAllSites">
            <summary>
            ListeningOnAllSites property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.AuthenticationMode">
            <summary>
            AuthenticationMode property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.AuthenticationRealm">
            <summary>
            AuthenticationRealm property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.ClearPort">
            <summary>
            ClearPort property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.DefaultLogonDomain">
            <summary>
            DefaultLogonDomain property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.Path">
            <summary>
            Path property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.Ports">
            <summary>
            Ports property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.SslPort">
            <summary>
            SslPort property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.HttpProtocolSpecifier.Website">
            <summary>
            Website property class of HttpProtocolSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.LinkedServer">
            <summary>
            Model schema container class for LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.TypeClass">
            <summary>
            Type class for LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.CollationCompatible">
            <summary>
            CollationCompatible property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.DataAccess">
            <summary>
            DataAccess property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.LazySchemaValidationEnabled">
            <summary>
            LazySchemaValidationEnabled property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.RemoteProcTransactionPromotionEnabled">
            <summary>
            RemoteProcTransactionPromotionEnabled property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.RpcEnabled">
            <summary>
            RpcEnabled property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.RpcOutEnabled">
            <summary>
            RpcOutEnabled property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.ProviderName">
            <summary>
            ProviderName property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.Catalog">
            <summary>
            Catalog property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.CollationName">
            <summary>
            CollationName property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.ConnectTimeout">
            <summary>
            ConnectTimeout property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.DataSource">
            <summary>
            DataSource property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.IsDistributor">
            <summary>
            IsDistributor property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.IsPublisher">
            <summary>
            IsPublisher property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.IsSubscriber">
            <summary>
            IsSubscriber property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.Location">
            <summary>
            Location property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.ProductName">
            <summary>
            ProductName property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.ProviderString">
            <summary>
            ProviderString property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.QueryTimeout">
            <summary>
            QueryTimeout property class of LinkedServer
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServer.UseRemoteCollation">
            <summary>
            UseRemoteCollation property class of LinkedServer
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.LinkedServerLogin">
            <summary>
            Model schema container class for LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.TypeClass">
            <summary>
            Type class for LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.UseSelf">
            <summary>
            UseSelf property class of LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.LinkedServerLoginName">
            <summary>
            LinkedServerLoginName property class of LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.LinkedServerPassword">
            <summary>
            LinkedServerPassword property class of LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.LinkedServer">
            <summary>
            LinkedServer relationship class of LinkedServerLogin
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.LinkedServerLogin.LocalLogin">
            <summary>
            LocalLogin relationship class of LinkedServerLogin
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Login">
            <summary>
            Model schema container class for Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.TypeClass">
            <summary>
            Type class for Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.CheckExpiration">
            <summary>
            CheckExpiration property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.CheckPolicy">
            <summary>
            CheckPolicy property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.Disabled">
            <summary>
            Disabled property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.MappedToWindowsLogin">
            <summary>
            MappedToWindowsLogin property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.PasswordHashed">
            <summary>
            PasswordHashed property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.PasswordMustChange">
            <summary>
            PasswordMustChange property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.DefaultDatabase">
            <summary>
            DefaultDatabase property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.DefaultLanguage">
            <summary>
            DefaultLanguage property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.EncryptionOption">
            <summary>
            EncryptionOption property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.IsMappedToExternalLogin">
            <summary>
            IsMappedToExternalLogin property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.Password">
            <summary>
            Password property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.Sid">
            <summary>
            Sid property class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.AsymmetricKey">
            <summary>
            AsymmetricKey relationship class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.Certificate">
            <summary>
            Certificate relationship class of Login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Login.Credential">
            <summary>
            Credential relationship class of Login
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.MasterKey">
            <summary>
            Model schema container class for MasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MasterKey.TypeClass">
            <summary>
            Type class for MasterKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MasterKey.Password">
            <summary>
            Password property class of MasterKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.MessageType">
            <summary>
            Model schema container class for MessageType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MessageType.TypeClass">
            <summary>
            Type class for MessageType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MessageType.ValidationMethod">
            <summary>
            ValidationMethod property class of MessageType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MessageType.Authorizer">
            <summary>
            Authorizer relationship class of MessageType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.MessageType.XmlSchemaCollection">
            <summary>
            XmlSchemaCollection relationship class of MessageType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionSpecification">
            <summary>
            Model schema container class for PartitionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionSpecification.TypeClass">
            <summary>
            Type class for PartitionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionSpecification.Range">
            <summary>
            Range property class of PartitionSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionSpecification.BoundaryValues">
            <summary>
            BoundaryValues relationship class of PartitionSpecification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionFunction">
            <summary>
            Model schema container class for PartitionFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionFunction.TypeClass">
            <summary>
            Type class for PartitionFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionFunction.Range">
            <summary>
            Range property class of PartitionFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionFunction.ParameterType">
            <summary>
            ParameterType relationship class of PartitionFunction
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionFunction.BoundaryValues">
            <summary>
            BoundaryValues relationship class of PartitionFunction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionScheme">
            <summary>
            Model schema container class for PartitionScheme
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.TypeClass">
            <summary>
            Type class for PartitionScheme
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.AllToOneFilegroup">
            <summary>
            AllToOneFilegroup property class of PartitionScheme
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.Filegroups">
            <summary>
            Filegroups relationship class of PartitionScheme
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionScheme.FilegroupsRelationship">
            <summary>
            Model schema container class for FilegroupsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.FilegroupsRelationship.RelationshipClass">
            <summary>
            Relationship class for FilegroupsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.FilegroupsRelationship.IsDefault">
            <summary>
            IsDefault property class of FilegroupsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionScheme.PartitionFunction">
            <summary>
            PartitionFunction relationship class of PartitionScheme
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PartitionValue">
            <summary>
            Model schema container class for PartitionValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionValue.TypeClass">
            <summary>
            Type class for PartitionValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionValue.Expression">
            <summary>
            Expression property class of PartitionValue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PartitionValue.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of PartitionValue
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Permission">
            <summary>
            Model schema container class for Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.TypeClass">
            <summary>
            Type class for Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.WithAllPrivileges">
            <summary>
            WithAllPrivileges property class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.WithGrantOption">
            <summary>
            WithGrantOption property class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.PermissionType">
            <summary>
            PermissionType property class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.PermissionAction">
            <summary>
            PermissionAction property class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.ExcludedColumns">
            <summary>
            ExcludedColumns relationship class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.Grantee">
            <summary>
            Grantee relationship class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.Grantor">
            <summary>
            Grantor relationship class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.RevokedGrantOptionColumns">
            <summary>
            RevokedGrantOptionColumns relationship class of Permission
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Permission.SecuredObject">
            <summary>
            SecuredObject relationship class of Permission
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint">
            <summary>
            Model schema container class for PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.TypeClass">
            <summary>
            Type class for PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.AllowPageLocks">
            <summary>
            AllowPageLocks property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.AllowRowLocks">
            <summary>
            AllowRowLocks property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Clustered">
            <summary>
            Clustered property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Disabled">
            <summary>
            Disabled property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.FileStreamNull">
            <summary>
            FileStreamNull property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.WithPadIndex">
            <summary>
            WithPadIndex property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Hash">
            <summary>
            Hash property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.OptimizeForSequentialKey">
            <summary>
            OptimizeForSequentialKey property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.BucketCount">
            <summary>
            BucketCount property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.DoIncrementalStatistics">
            <summary>
            DoIncrementalStatistics property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.FillFactor">
            <summary>
            FillFactor property class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Host">
            <summary>
            Host relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Columns">
            <summary>
            Columns relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.Filegroup">
            <summary>
            Filegroup relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.PartitionColumn">
            <summary>
            PartitionColumn relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.PartitionScheme">
            <summary>
            PartitionScheme relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PrimaryKeyConstraint.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of PrimaryKeyConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Procedure">
            <summary>
            Model schema container class for Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.TypeClass">
            <summary>
            Type class for Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.WithEncryption">
            <summary>
            WithEncryption property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ForReplication">
            <summary>
            ForReplication property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.WithRecompile">
            <summary>
            WithRecompile property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.WithNativeCompilation">
            <summary>
            WithNativeCompilation property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.WithSchemaBinding">
            <summary>
            WithSchemaBinding property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ClassName">
            <summary>
            ClassName property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.IsReplicated">
            <summary>
            IsReplicated property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.MethodName">
            <summary>
            MethodName property class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.ParentProcedure">
            <summary>
            ParentProcedure relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.Assembly">
            <summary>
            Assembly relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.BodyDependencies">
            <summary>
            BodyDependencies relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.Login">
            <summary>
            Login relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.Parameters">
            <summary>
            Parameters relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.Schema">
            <summary>
            Schema relationship class of Procedure
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Procedure.User">
            <summary>
            User relationship class of Procedure
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Queue">
            <summary>
            Model schema container class for Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.TypeClass">
            <summary>
            Type class for Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationStatusOn">
            <summary>
            ActivationStatusOn property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationExecuteAsCaller">
            <summary>
            ActivationExecuteAsCaller property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationExecuteAsOwner">
            <summary>
            ActivationExecuteAsOwner property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.PoisonMessageHandlingStatusOn">
            <summary>
            PoisonMessageHandlingStatusOn property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.RetentionOn">
            <summary>
            RetentionOn property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationExecuteAsSelf">
            <summary>
            ActivationExecuteAsSelf property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.StatusOn">
            <summary>
            StatusOn property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationMaxQueueReaders">
            <summary>
            ActivationMaxQueueReaders property class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.ActivationProcedure">
            <summary>
            ActivationProcedure relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.Columns">
            <summary>
            Columns relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.Filegroup">
            <summary>
            Filegroup relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.Login">
            <summary>
            Login relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.PartitionColumn">
            <summary>
            PartitionColumn relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.PartitionScheme">
            <summary>
            PartitionScheme relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.Schema">
            <summary>
            Schema relationship class of Queue
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Queue.User">
            <summary>
            User relationship class of Queue
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.QueueEventNotification">
            <summary>
            Model schema container class for QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.TypeClass">
            <summary>
            Type class for QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.WithFanIn">
            <summary>
            WithFanIn property class of QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.BrokerService">
            <summary>
            BrokerService property class of QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.BrokerInstanceSpecifier">
            <summary>
            BrokerInstanceSpecifier property class of QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.EventGroup">
            <summary>
            EventGroup relationship class of QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.EventType">
            <summary>
            EventType relationship class of QueueEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.QueueEventNotification.Queue">
            <summary>
            Queue relationship class of QueueEventNotification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding">
            <summary>
            Model schema container class for RemoteServiceBinding
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding.TypeClass">
            <summary>
            Type class for RemoteServiceBinding
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding.Anonymous">
            <summary>
            Anonymous property class of RemoteServiceBinding
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding.Service">
            <summary>
            Service property class of RemoteServiceBinding
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding.User">
            <summary>
            User relationship class of RemoteServiceBinding
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RemoteServiceBinding.Authorizer">
            <summary>
            Authorizer relationship class of RemoteServiceBinding
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ResourceGovernor">
            <summary>
            Model schema container class for ResourceGovernor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourceGovernor.TypeClass">
            <summary>
            Type class for ResourceGovernor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourceGovernor.Enabled">
            <summary>
            Enabled property class of ResourceGovernor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourceGovernor.ClassifierFunction">
            <summary>
            ClassifierFunction relationship class of ResourceGovernor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ResourcePool">
            <summary>
            Model schema container class for ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.TypeClass">
            <summary>
            Type class for ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.CapCpuPercent">
            <summary>
            CapCpuPercent property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MaxCpuPercent">
            <summary>
            MaxCpuPercent property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MaxIopsPerVolume">
            <summary>
            MaxIopsPerVolume property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MaxMemoryPercent">
            <summary>
            MaxMemoryPercent property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MinCpuPercent">
            <summary>
            MinCpuPercent property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MinIopsPerVolume">
            <summary>
            MinIopsPerVolume property class of ResourcePool
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ResourcePool.MinMemoryPercent">
            <summary>
            MinMemoryPercent property class of ResourcePool
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Role">
            <summary>
            Model schema container class for Role
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Role.TypeClass">
            <summary>
            Type class for Role
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Role.Authorizer">
            <summary>
            Authorizer relationship class of Role
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.RoleMembership">
            <summary>
            Model schema container class for RoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RoleMembership.TypeClass">
            <summary>
            Type class for RoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RoleMembership.Member">
            <summary>
            Member relationship class of RoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.RoleMembership.Role">
            <summary>
            Role relationship class of RoleMembership
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Route">
            <summary>
            Model schema container class for Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.TypeClass">
            <summary>
            Type class for Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.BrokerInstance">
            <summary>
            BrokerInstance property class of Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.ServiceName">
            <summary>
            ServiceName property class of Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.Address">
            <summary>
            Address property class of Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.Lifetime">
            <summary>
            Lifetime property class of Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.MirrorAddress">
            <summary>
            MirrorAddress property class of Route
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Route.Authorizer">
            <summary>
            Authorizer relationship class of Route
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Rule">
            <summary>
            Model schema container class for Rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Rule.TypeClass">
            <summary>
            Type class for Rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Rule.Expression">
            <summary>
            Expression property class of Rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Rule.ShouldGenerateCreateRuleStatement">
            <summary>
            ShouldGenerateCreateRuleStatement property class of Rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Rule.BoundObjects">
            <summary>
            BoundObjects relationship class of Rule
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Rule.Schema">
            <summary>
            Schema relationship class of Rule
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Schema">
            <summary>
            Model schema container class for Schema
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Schema.TypeClass">
            <summary>
            Type class for Schema
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Schema.Authorizer">
            <summary>
            Authorizer relationship class of Schema
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SearchProperty">
            <summary>
            Model schema container class for SearchProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchProperty.TypeClass">
            <summary>
            Type class for SearchProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchProperty.Description">
            <summary>
            Description property class of SearchProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchProperty.Identifier">
            <summary>
            Identifier property class of SearchProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchProperty.PropertySetGuid">
            <summary>
            PropertySetGuid property class of SearchProperty
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchProperty.SearchPropertyList">
            <summary>
            SearchPropertyList relationship class of SearchProperty
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SearchPropertyList">
            <summary>
            Model schema container class for SearchPropertyList
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchPropertyList.TypeClass">
            <summary>
            Type class for SearchPropertyList
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SearchPropertyList.Authorizer">
            <summary>
            Authorizer relationship class of SearchPropertyList
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SecurityPolicy">
            <summary>
            Model schema container class for SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.TypeClass">
            <summary>
            Type class for SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.Enabled">
            <summary>
            Enabled property class of SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.IsSchemaBound">
            <summary>
            IsSchemaBound property class of SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.NotForReplication">
            <summary>
            NotForReplication property class of SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.Predicates">
            <summary>
            Predicates relationship class of SecurityPolicy
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPolicy.Schema">
            <summary>
            Schema relationship class of SecurityPolicy
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SecurityPredicate">
            <summary>
            Model schema container class for SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.TypeClass">
            <summary>
            Type class for SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.BodyScript">
            <summary>
            BodyScript property class of SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.Operation">
            <summary>
            Operation property class of SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.PredicateType">
            <summary>
            PredicateType property class of SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.BodyDependencies">
            <summary>
            BodyDependencies relationship class of SecurityPredicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SecurityPredicate.TargetObject">
            <summary>
            TargetObject relationship class of SecurityPredicate
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Sequence">
            <summary>
            Model schema container class for Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.TypeClass">
            <summary>
            Type class for Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.NoMaxValue">
            <summary>
            NoMaxValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.NoMinValue">
            <summary>
            NoMinValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.IncrementValue">
            <summary>
            IncrementValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.CacheSize">
            <summary>
            CacheSize property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.IsCached">
            <summary>
            IsCached property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.IsCycling">
            <summary>
            IsCycling property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.MaxValue">
            <summary>
            MaxValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.MinValue">
            <summary>
            MinValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.StartValue">
            <summary>
            StartValue property class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.DataType">
            <summary>
            DataType relationship class of Sequence
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Sequence.Schema">
            <summary>
            Schema relationship class of Sequence
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerAudit">
            <summary>
            Model schema container class for ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.TypeClass">
            <summary>
            Type class for ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.Disabled">
            <summary>
            Disabled property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.ReserveDiskSpace">
            <summary>
            ReserveDiskSpace property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.UnlimitedFileSize">
            <summary>
            UnlimitedFileSize property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.UnlimitedMaxRolloverFiles">
            <summary>
            UnlimitedMaxRolloverFiles property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.OnFailure">
            <summary>
            OnFailure property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.PredicateExpression">
            <summary>
            PredicateExpression property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.AuditGuid">
            <summary>
            AuditGuid property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.AuditTarget">
            <summary>
            AuditTarget property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.FilePath">
            <summary>
            FilePath property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.IsOperatorAudit">
            <summary>
            IsOperatorAudit property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.MaxFiles">
            <summary>
            MaxFiles property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.MaxRolloverFiles">
            <summary>
            MaxRolloverFiles property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.MaxSize">
            <summary>
            MaxSize property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.MaxSizeUnit">
            <summary>
            MaxSizeUnit property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.Path">
            <summary>
            Path property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.QueueDelay">
            <summary>
            QueueDelay property class of ServerAudit
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAudit.RetentionDays">
            <summary>
            RetentionDays property class of ServerAudit
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerAuditSpecification">
            <summary>
            Model schema container class for ServerAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAuditSpecification.TypeClass">
            <summary>
            Type class for ServerAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAuditSpecification.StateOn">
            <summary>
            StateOn property class of ServerAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAuditSpecification.AuditActionGroups">
            <summary>
            AuditActionGroups relationship class of ServerAuditSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerAuditSpecification.ServerAudit">
            <summary>
            ServerAudit relationship class of ServerAuditSpecification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger">
            <summary>
            Model schema container class for ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.TypeClass">
            <summary>
            Type class for ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.ExecuteAsCaller">
            <summary>
            ExecuteAsCaller property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.Disabled">
            <summary>
            Disabled property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.WithEncryption">
            <summary>
            WithEncryption property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.ExecuteAsOwner">
            <summary>
            ExecuteAsOwner property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.ExecuteAsSelf">
            <summary>
            ExecuteAsSelf property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.TriggerType">
            <summary>
            TriggerType property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.ClassName">
            <summary>
            ClassName property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.IsLogon">
            <summary>
            IsLogon property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.MethodName">
            <summary>
            MethodName property class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.Assembly">
            <summary>
            Assembly relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.BodyDependencies">
            <summary>
            BodyDependencies relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.EventGroup">
            <summary>
            EventGroup relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.EventType">
            <summary>
            EventType relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.Login">
            <summary>
            Login relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerDdlTrigger.User">
            <summary>
            User relationship class of ServerDdlTrigger
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerEventNotification">
            <summary>
            Model schema container class for ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.TypeClass">
            <summary>
            Type class for ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.WithFanIn">
            <summary>
            WithFanIn property class of ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.BrokerService">
            <summary>
            BrokerService property class of ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.BrokerInstanceSpecifier">
            <summary>
            BrokerInstanceSpecifier property class of ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.EventGroup">
            <summary>
            EventGroup relationship class of ServerEventNotification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerEventNotification.EventType">
            <summary>
            EventType relationship class of ServerEventNotification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerOptions">
            <summary>
            Model schema container class for ServerOptions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerOptions.TypeClass">
            <summary>
            Type class for ServerOptions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServerRoleMembership">
            <summary>
            Model schema container class for ServerRoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerRoleMembership.TypeClass">
            <summary>
            Type class for ServerRoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerRoleMembership.Member">
            <summary>
            Member relationship class of ServerRoleMembership
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServerRoleMembership.Role">
            <summary>
            Role relationship class of ServerRoleMembership
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Service">
            <summary>
            Model schema container class for Service
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Service.TypeClass">
            <summary>
            Type class for Service
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Service.UseDefaultContract">
            <summary>
            UseDefaultContract property class of Service
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Service.Authorizer">
            <summary>
            Authorizer relationship class of Service
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Service.Contracts">
            <summary>
            Contracts relationship class of Service
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Service.Queue">
            <summary>
            Queue relationship class of Service
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier">
            <summary>
            Model schema container class for ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.TypeClass">
            <summary>
            Type class for ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.WindowsAuthenticationMode">
            <summary>
            WindowsAuthenticationMode property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.UseCertificateFirst">
            <summary>
            UseCertificateFirst property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.MessageForwardingEnabled">
            <summary>
            MessageForwardingEnabled property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.EncryptionAlgorithmPart1">
            <summary>
            EncryptionAlgorithmPart1 property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.EncryptionAlgorithmPart2">
            <summary>
            EncryptionAlgorithmPart2 property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.EncryptionMode">
            <summary>
            EncryptionMode property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.MessageForwardSize">
            <summary>
            MessageForwardSize property class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ServiceBrokerLanguageSpecifier.AuthenticationCertificate">
            <summary>
            AuthenticationCertificate relationship class of ServiceBrokerLanguageSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Signature">
            <summary>
            Model schema container class for Signature
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Signature.TypeClass">
            <summary>
            Type class for Signature
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Signature.IsCounterSignature">
            <summary>
            IsCounterSignature property class of Signature
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Signature.EncryptionMechanism">
            <summary>
            EncryptionMechanism relationship class of Signature
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Signature.SignedObject">
            <summary>
            SignedObject relationship class of Signature
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism">
            <summary>
            Model schema container class for SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism.TypeClass">
            <summary>
            Type class for SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism.Password">
            <summary>
            Password property class of SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism.SignedBlob">
            <summary>
            SignedBlob property class of SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism.AsymmetricKey">
            <summary>
            AsymmetricKey relationship class of SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SignatureEncryptionMechanism.Certificate">
            <summary>
            Certificate relationship class of SignatureEncryptionMechanism
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier">
            <summary>
            Model schema container class for SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.TypeClass">
            <summary>
            Type class for SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.BatchesEnabled">
            <summary>
            BatchesEnabled property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.SessionsEnabled">
            <summary>
            SessionsEnabled property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.SessionTimeoutNever">
            <summary>
            SessionTimeoutNever property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.CharacterSet">
            <summary>
            CharacterSet property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.DatabaseName">
            <summary>
            DatabaseName property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.HeaderLimit">
            <summary>
            HeaderLimit property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.IsDefaultDatabase">
            <summary>
            IsDefaultDatabase property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.IsDefaultNamespace">
            <summary>
            IsDefaultNamespace property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.IsDefaultWsdlSpName">
            <summary>
            IsDefaultWsdlSpName property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.LoginType">
            <summary>
            LoginType property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.Namespace">
            <summary>
            Namespace property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.SchemaType">
            <summary>
            SchemaType property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.SessionTimeout">
            <summary>
            SessionTimeout property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.WsdlSpName">
            <summary>
            WsdlSpName property class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapLanguageSpecifier.WebMethods">
            <summary>
            WebMethods relationship class of SoapLanguageSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification">
            <summary>
            Model schema container class for SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.TypeClass">
            <summary>
            Type class for SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.SchemaType">
            <summary>
            SchemaType property class of SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.Format">
            <summary>
            Format property class of SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.WebMethodAlias">
            <summary>
            WebMethodAlias property class of SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.WebMethodNamespace">
            <summary>
            WebMethodNamespace property class of SoapMethodSpecification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SoapMethodSpecification.RelatedMethod">
            <summary>
            RelatedMethod relationship class of SoapMethodSpecification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SpatialIndex">
            <summary>
            Model schema container class for SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.TypeClass">
            <summary>
            Type class for SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.AllowPageLocks">
            <summary>
            AllowPageLocks property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.AllowRowLocks">
            <summary>
            AllowRowLocks property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.GridLevel1Density">
            <summary>
            GridLevel1Density property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.GridLevel2Density">
            <summary>
            GridLevel2Density property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.GridLevel3Density">
            <summary>
            GridLevel3Density property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.GridLevel4Density">
            <summary>
            GridLevel4Density property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.Disabled">
            <summary>
            Disabled property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.WithPadIndex">
            <summary>
            WithPadIndex property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.CellsPerObject">
            <summary>
            CellsPerObject property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.DataCompression">
            <summary>
            DataCompression property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.DoIncrementalStatistics">
            <summary>
            DoIncrementalStatistics property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.FillFactor">
            <summary>
            FillFactor property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.Tessellation">
            <summary>
            Tessellation property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.XMax">
            <summary>
            XMax property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.XMin">
            <summary>
            XMin property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.YMax">
            <summary>
            YMax property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.YMin">
            <summary>
            YMin property class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.Column">
            <summary>
            Column relationship class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.Filegroup">
            <summary>
            Filegroup relationship class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.IndexedObject">
            <summary>
            IndexedObject relationship class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.PartitionColumn">
            <summary>
            PartitionColumn relationship class of SpatialIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SpatialIndex.PartitionScheme">
            <summary>
            PartitionScheme relationship class of SpatialIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Statistics">
            <summary>
            Model schema container class for Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.TypeClass">
            <summary>
            Type class for Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.StatsStream">
            <summary>
            StatsStream property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.FilterPredicate">
            <summary>
            FilterPredicate property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.AutoDrop">
            <summary>
            AutoDrop property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.Incremental">
            <summary>
            Incremental property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.NoRecompute">
            <summary>
            NoRecompute property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.SampleSize">
            <summary>
            SampleSize property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.SamplingStyle">
            <summary>
            SamplingStyle property class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.OnObject">
            <summary>
            OnObject relationship class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.Columns">
            <summary>
            Columns relationship class of Statistics
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Statistics.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of Statistics
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Parameter">
            <summary>
            Model schema container class for Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.TypeClass">
            <summary>
            Type class for Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.DefaultExpression">
            <summary>
            DefaultExpression property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.ReadOnly">
            <summary>
            ReadOnly property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.Varying">
            <summary>
            Varying property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.Scale">
            <summary>
            Scale property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.Precision">
            <summary>
            Precision property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.Length">
            <summary>
            Length property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.IsMax">
            <summary>
            IsMax property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.XmlStyle">
            <summary>
            XmlStyle property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.IsNullable">
            <summary>
            IsNullable property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.IsOutput">
            <summary>
            IsOutput property class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.XmlSchemaCollection">
            <summary>
            XmlSchemaCollection relationship class of Parameter
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Parameter.DataType">
            <summary>
            DataType relationship class of Parameter
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SymmetricKey">
            <summary>
            Model schema container class for SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.TypeClass">
            <summary>
            Type class for SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.Algorithm">
            <summary>
            Algorithm property class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.CreationDisposition">
            <summary>
            CreationDisposition property class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.IdentityValue">
            <summary>
            IdentityValue property class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.KeySource">
            <summary>
            KeySource property class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.ProviderKeyName">
            <summary>
            ProviderKeyName property class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.AsymmetricKeys">
            <summary>
            AsymmetricKeys relationship class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.Certificates">
            <summary>
            Certificates relationship class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.Passwords">
            <summary>
            Passwords relationship class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.SymmetricKeys">
            <summary>
            SymmetricKeys relationship class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.Authorizer">
            <summary>
            Authorizer relationship class of SymmetricKey
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKey.Provider">
            <summary>
            Provider relationship class of SymmetricKey
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SymmetricKeyPassword">
            <summary>
            Model schema container class for SymmetricKeyPassword
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKeyPassword.TypeClass">
            <summary>
            Type class for SymmetricKeyPassword
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SymmetricKeyPassword.Password">
            <summary>
            Password property class of SymmetricKeyPassword
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Synonym">
            <summary>
            Model schema container class for Synonym
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Synonym.TypeClass">
            <summary>
            Type class for Synonym
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Synonym.ForObjectName">
            <summary>
            ForObjectName property class of Synonym
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Synonym.ForObject">
            <summary>
            ForObject relationship class of Synonym
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Synonym.Schema">
            <summary>
            Schema relationship class of Synonym
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.Table">
            <summary>
            Model schema container class for Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.TypeClass">
            <summary>
            Type class for Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.ChangeDataCaptureEnabled">
            <summary>
            ChangeDataCaptureEnabled property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.ChangeTrackingEnabled">
            <summary>
            ChangeTrackingEnabled property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.FileStreamNull">
            <summary>
            FileStreamNull property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LargeValueTypesOutOfRow">
            <summary>
            LargeValueTypesOutOfRow property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.TableLockOnBulkLoad">
            <summary>
            TableLockOnBulkLoad property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.TrackColumnsUpdated">
            <summary>
            TrackColumnsUpdated property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.VardecimalStorageFormatEnabled">
            <summary>
            VardecimalStorageFormatEnabled property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.MemoryOptimized">
            <summary>
            MemoryOptimized property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DistributionPolicyType">
            <summary>
            DistributionPolicyType property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.RowCount">
            <summary>
            RowCount property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DataSize">
            <summary>
            DataSize property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IndexSize">
            <summary>
            IndexSize property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DataPages">
            <summary>
            DataPages property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.UsedPages">
            <summary>
            UsedPages property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.Durability">
            <summary>
            Durability property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IsAutoGeneratedHistoryTable">
            <summary>
            IsAutoGeneratedHistoryTable property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IsDroppedLedgerTable">
            <summary>
            IsDroppedLedgerTable property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IsEdge">
            <summary>
            IsEdge property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IsNode">
            <summary>
            IsNode property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.IsReplicated">
            <summary>
            IsReplicated property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerHistoryTableName">
            <summary>
            LedgerHistoryTableName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerHistoryTableSchemaName">
            <summary>
            LedgerHistoryTableSchemaName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerType">
            <summary>
            LedgerType property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewName">
            <summary>
            LedgerViewName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewOperationTypeColumnName">
            <summary>
            LedgerViewOperationTypeColumnName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewOperationTypeDescColumnName">
            <summary>
            LedgerViewOperationTypeDescColumnName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewSchemaName">
            <summary>
            LedgerViewSchemaName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewSequenceNumberColumnName">
            <summary>
            LedgerViewSequenceNumberColumnName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LedgerViewTransactionIdColumnName">
            <summary>
            LedgerViewTransactionIdColumnName property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.LockEscalation">
            <summary>
            LockEscalation property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.QueryScript">
            <summary>
            QueryScript property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.RemoteDataEnabled">
            <summary>
            RemoteDataEnabled property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.RetentionUnit">
            <summary>
            RetentionUnit property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.RetentionValue">
            <summary>
            RetentionValue property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.TextInRowSize">
            <summary>
            TextInRowSize property class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DistributionColumn">
            <summary>
            DistributionColumn relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.Columns">
            <summary>
            Columns relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DataRetention">
            <summary>
            DataRetention relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.DynamicObjects">
            <summary>
            DynamicObjects relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.Filegroup">
            <summary>
            Filegroup relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.FilegroupForTextImage">
            <summary>
            FilegroupForTextImage relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.PartitionColumn">
            <summary>
            PartitionColumn relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.PartitionScheme">
            <summary>
            PartitionScheme relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.PartitionSpecification">
            <summary>
            PartitionSpecification relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.QueryDependencies">
            <summary>
            QueryDependencies relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.Schema">
            <summary>
            Schema relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.TemporalSystemVersioningHistoryTable">
            <summary>
            TemporalSystemVersioningHistoryTable relationship class of Table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.Table.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of Table
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.FileTable">
            <summary>
            Model schema container class for FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.TypeClass">
            <summary>
            Type class for FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileStreamNull">
            <summary>
            FileStreamNull property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.TableLockOnBulkLoad">
            <summary>
            TableLockOnBulkLoad property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileTableNamespaceEnabled">
            <summary>
            FileTableNamespaceEnabled property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileTableCollateFilename">
            <summary>
            FileTableCollateFilename property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileTableDirectory">
            <summary>
            FileTableDirectory property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.LockEscalation">
            <summary>
            LockEscalation property class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.Columns">
            <summary>
            Columns relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.Filegroup">
            <summary>
            Filegroup relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.PartitionColumn">
            <summary>
            PartitionColumn relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.PartitionScheme">
            <summary>
            PartitionScheme relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.Schema">
            <summary>
            Schema relationship class of FileTable
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.FileTable.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of FileTable
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableType">
            <summary>
            Model schema container class for TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.TypeClass">
            <summary>
            Type class for TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.MemoryOptimized">
            <summary>
            MemoryOptimized property class of TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.Columns">
            <summary>
            Columns relationship class of TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.Constraints">
            <summary>
            Constraints relationship class of TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.Indexes">
            <summary>
            Indexes relationship class of TableType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableType.Schema">
            <summary>
            Schema relationship class of TableType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeCheckConstraint">
            <summary>
            Model schema container class for TableTypeCheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeCheckConstraint.TypeClass">
            <summary>
            Type class for TableTypeCheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeCheckConstraint.Expression">
            <summary>
            Expression property class of TableTypeCheckConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeCheckConstraint.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of TableTypeCheckConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeColumn">
            <summary>
            Model schema container class for TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.TypeClass">
            <summary>
            Type class for TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.TableTypeColumnType">
            <summary>
            TableTypeColumnType metadata class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Collation">
            <summary>
            Collation property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.IdentityIncrement">
            <summary>
            IdentityIncrement property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.IdentitySeed">
            <summary>
            IdentitySeed property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.IsIdentity">
            <summary>
            IsIdentity property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Nullable">
            <summary>
            Nullable property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.IsRowGuidCol">
            <summary>
            IsRowGuidCol property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Expression">
            <summary>
            Expression property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Persisted">
            <summary>
            Persisted property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.PersistedNullable">
            <summary>
            PersistedNullable property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Scale">
            <summary>
            Scale property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Precision">
            <summary>
            Precision property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.Length">
            <summary>
            Length property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.IsMax">
            <summary>
            IsMax property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.XmlStyle">
            <summary>
            XmlStyle property class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.XmlSchemaCollection">
            <summary>
            XmlSchemaCollection relationship class of TableTypeColumn
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeColumn.DataType">
            <summary>
            DataType relationship class of TableTypeColumn
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint">
            <summary>
            Model schema container class for TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint.TypeClass">
            <summary>
            Type class for TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint.Expression">
            <summary>
            Expression property class of TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint.TargetColumn">
            <summary>
            TargetColumn relationship class of TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeDefaultConstraint.ExpressionDependencies">
            <summary>
            ExpressionDependencies relationship class of TableTypeDefaultConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeIndex">
            <summary>
            Model schema container class for TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.TypeClass">
            <summary>
            Type class for TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.Hash">
            <summary>
            Hash property class of TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.BucketCount">
            <summary>
            BucketCount property class of TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.IsDisabled">
            <summary>
            IsDisabled property class of TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.IsUnique">
            <summary>
            IsUnique property class of TableTypeIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeIndex.Columns">
            <summary>
            Columns relationship class of TableTypeIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint">
            <summary>
            Model schema container class for TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.TypeClass">
            <summary>
            Type class for TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.Clustered">
            <summary>
            Clustered property class of TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.Hash">
            <summary>
            Hash property class of TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.BucketCount">
            <summary>
            BucketCount property class of TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.Columns">
            <summary>
            Columns relationship class of TableTypePrimaryKeyConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypePrimaryKeyConstraint.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint">
            <summary>
            Model schema container class for TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.TypeClass">
            <summary>
            Type class for TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.Clustered">
            <summary>
            Clustered property class of TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.Hash">
            <summary>
            Hash property class of TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.BucketCount">
            <summary>
            BucketCount property class of TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.Columns">
            <summary>
            Columns relationship class of TableTypeUniqueConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TableTypeUniqueConstraint.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier">
            <summary>
            Model schema container class for TcpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier.TypeClass">
            <summary>
            Type class for TcpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier.ListeningOnAllIPs">
            <summary>
            ListeningOnAllIPs property class of TcpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier.ListenerIPv4">
            <summary>
            ListenerIPv4 property class of TcpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier.ListenerIPv6">
            <summary>
            ListenerIPv6 property class of TcpProtocolSpecifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.TcpProtocolSpecifier.ListenerPort">
            <summary>
            ListenerPort property class of TcpProtocolSpecifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UniqueConstraint">
            <summary>
            Model schema container class for UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.TypeClass">
            <summary>
            Type class for UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.AllowPageLocks">
            <summary>
            AllowPageLocks property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.AllowRowLocks">
            <summary>
            AllowRowLocks property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Clustered">
            <summary>
            Clustered property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Disabled">
            <summary>
            Disabled property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.FileStreamNull">
            <summary>
            FileStreamNull property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.WithPadIndex">
            <summary>
            WithPadIndex property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Hash">
            <summary>
            Hash property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.OptimizeForSequentialKey">
            <summary>
            OptimizeForSequentialKey property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.BucketCount">
            <summary>
            BucketCount property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.DoIncrementalStatistics">
            <summary>
            DoIncrementalStatistics property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.FillFactor">
            <summary>
            FillFactor property class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Host">
            <summary>
            Host relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Columns">
            <summary>
            Columns relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UniqueConstraint.ColumnsRelationship">
            <summary>
            Model schema container class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.ColumnsRelationship.RelationshipClass">
            <summary>
            Relationship class for ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.ColumnsRelationship.Ascending">
            <summary>
            Ascending property class of ColumnsRelationship
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.Filegroup">
            <summary>
            Filegroup relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.FileStreamFilegroup">
            <summary>
            FileStreamFilegroup relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.FileStreamPartitionScheme">
            <summary>
            FileStreamPartitionScheme relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.PartitionColumn">
            <summary>
            PartitionColumn relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.PartitionScheme">
            <summary>
            PartitionScheme relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UniqueConstraint.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of UniqueConstraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.User">
            <summary>
            Model schema container class for User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.TypeClass">
            <summary>
            Type class for User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.WithoutLogin">
            <summary>
            WithoutLogin property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.AuthenticationType">
            <summary>
            AuthenticationType property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.DefaultLanguage">
            <summary>
            DefaultLanguage property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.Password">
            <summary>
            Password property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.Sid">
            <summary>
            Sid property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.UserType">
            <summary>
            UserType property class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.AsymmetricKey">
            <summary>
            AsymmetricKey relationship class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.Certificate">
            <summary>
            Certificate relationship class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.DefaultSchema">
            <summary>
            DefaultSchema relationship class of User
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.User.Login">
            <summary>
            Login relationship class of User
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UserDefinedServerRole">
            <summary>
            Model schema container class for UserDefinedServerRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedServerRole.TypeClass">
            <summary>
            Type class for UserDefinedServerRole
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedServerRole.Authorizer">
            <summary>
            Authorizer relationship class of UserDefinedServerRole
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.UserDefinedType">
            <summary>
            Model schema container class for UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.TypeClass">
            <summary>
            Type class for UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.ByteOrdered">
            <summary>
            ByteOrdered property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.FixedLength">
            <summary>
            FixedLength property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.ClassName">
            <summary>
            ClassName property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.Format">
            <summary>
            Format property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.MaxByteSize">
            <summary>
            MaxByteSize property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.ValidationMethodName">
            <summary>
            ValidationMethodName property class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.Assembly">
            <summary>
            Assembly relationship class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.Methods">
            <summary>
            Methods relationship class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.Properties">
            <summary>
            Properties relationship class of UserDefinedType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.UserDefinedType.Schema">
            <summary>
            Schema relationship class of UserDefinedType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.View">
            <summary>
            Model schema container class for View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.TypeClass">
            <summary>
            Type class for View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.AnsiNullsOn">
            <summary>
            AnsiNullsOn property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.WithEncryption">
            <summary>
            WithEncryption property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.WithViewMetadata">
            <summary>
            WithViewMetadata property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.QuotedIdentifierOn">
            <summary>
            QuotedIdentifierOn property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.Replicated">
            <summary>
            Replicated property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.WithSchemaBinding">
            <summary>
            WithSchemaBinding property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.WithCheckOption">
            <summary>
            WithCheckOption property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.SelectStatement">
            <summary>
            SelectStatement property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.DistributionPolicyType">
            <summary>
            DistributionPolicyType property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.ForAppend">
            <summary>
            ForAppend property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.IsDroppedLedgerView">
            <summary>
            IsDroppedLedgerView property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.LedgerViewType">
            <summary>
            LedgerViewType property class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.BodyDependencies">
            <summary>
            BodyDependencies relationship class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.DistributionColumn">
            <summary>
            DistributionColumn relationship class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.Columns">
            <summary>
            Columns relationship class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.DatabaseScopedCredentialName">
            <summary>
            DatabaseScopedCredentialName relationship class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.ExternalDataSourceName">
            <summary>
            ExternalDataSourceName relationship class of View
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.View.Schema">
            <summary>
            Schema relationship class of View
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.WorkloadGroup">
            <summary>
            Model schema container class for WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.TypeClass">
            <summary>
            Type class for WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.GroupMaxRequests">
            <summary>
            GroupMaxRequests property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.Importance">
            <summary>
            Importance property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.MaxDop">
            <summary>
            MaxDop property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.RequestMaxCpuTimeSec">
            <summary>
            RequestMaxCpuTimeSec property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.RequestMaxMemoryGrantPercent">
            <summary>
            RequestMaxMemoryGrantPercent property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.RequestMemoryGrantTimeoutSec">
            <summary>
            RequestMemoryGrantTimeoutSec property class of WorkloadGroup
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroup.ResourcePool">
            <summary>
            ResourcePool relationship class of WorkloadGroup
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw">
            <summary>
            Model schema container class for WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.TypeClass">
            <summary>
            Type class for WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.CapPercentageResource">
            <summary>
            CapPercentageResource property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.Importance">
            <summary>
            Importance property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.MinPercentageResource">
            <summary>
            MinPercentageResource property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.QueryExecutionTimeoutSec">
            <summary>
            QueryExecutionTimeoutSec property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.RequestMaxResourceGrantPercent">
            <summary>
            RequestMaxResourceGrantPercent property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadGroupDw.RequestMinResourceGrantPercent">
            <summary>
            RequestMinResourceGrantPercent property class of WorkloadGroupDw
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.WorkloadClassifier">
            <summary>
            Model schema container class for WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.TypeClass">
            <summary>
            Type class for WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.EndTime">
            <summary>
            EndTime property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.Importance">
            <summary>
            Importance property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.MemberName">
            <summary>
            MemberName property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.StartTime">
            <summary>
            StartTime property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.WlmContext">
            <summary>
            WlmContext property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.WlmLabel">
            <summary>
            WlmLabel property class of WorkloadClassifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.WorkloadClassifier.WorkloadGroup">
            <summary>
            WorkloadGroup relationship class of WorkloadClassifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.XmlIndex">
            <summary>
            Model schema container class for XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.TypeClass">
            <summary>
            Type class for XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.AllowPageLocks">
            <summary>
            AllowPageLocks property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.AllowRowLocks">
            <summary>
            AllowRowLocks property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.Disabled">
            <summary>
            Disabled property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.WithPadIndex">
            <summary>
            WithPadIndex property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.SecondaryXmlIndexType">
            <summary>
            SecondaryXmlIndexType property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.DoIncrementalStatistics">
            <summary>
            DoIncrementalStatistics property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.FillFactor">
            <summary>
            FillFactor property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.IsPrimary">
            <summary>
            IsPrimary property class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.PrimaryXmlIndex">
            <summary>
            PrimaryXmlIndex relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.Column">
            <summary>
            Column relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.DataCompressionOptions">
            <summary>
            DataCompressionOptions relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.Filegroup">
            <summary>
            Filegroup relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.IndexedObject">
            <summary>
            IndexedObject relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.PartitionColumn">
            <summary>
            PartitionColumn relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.PartitionScheme">
            <summary>
            PartitionScheme relationship class of XmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlIndex.XmlCompressionOptions">
            <summary>
            XmlCompressionOptions relationship class of XmlIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex">
            <summary>
            Model schema container class for SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.TypeClass">
            <summary>
            Type class for SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.Disabled">
            <summary>
            Disabled property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.WithPadIndex">
            <summary>
            WithPadIndex property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.AllowRowLocks">
            <summary>
            AllowRowLocks property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.AllowPageLocks">
            <summary>
            AllowPageLocks property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.IgnoreDuplicateKey">
            <summary>
            IgnoreDuplicateKey property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.RecomputeStatistics">
            <summary>
            RecomputeStatistics property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.DoIncrementalStatistics">
            <summary>
            DoIncrementalStatistics property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.FillFactor">
            <summary>
            FillFactor property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.IsPrimary">
            <summary>
            IsPrimary property class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.PrimarySelectiveXmlIndex">
            <summary>
            PrimarySelectiveXmlIndex relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.PrimaryPromotedPath">
            <summary>
            PrimaryPromotedPath relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.Column">
            <summary>
            Column relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.IndexedObject">
            <summary>
            IndexedObject relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.PromotedPaths">
            <summary>
            PromotedPaths relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.SelectiveXmlIndex.XmlNamespaces">
            <summary>
            XmlNamespaces relationship class of SelectiveXmlIndex
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.XmlNamespace">
            <summary>
            Model schema container class for XmlNamespace
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlNamespace.TypeClass">
            <summary>
            Type class for XmlNamespace
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlNamespace.NamespaceUri">
            <summary>
            NamespaceUri property class of XmlNamespace
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlNamespace.Prefix">
            <summary>
            Prefix property class of XmlNamespace
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType">
            <summary>
            Model schema container class for PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType.TypeClass">
            <summary>
            Type class for PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType.IsSingleton">
            <summary>
            IsSingleton property class of PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType.MaxLength">
            <summary>
            MaxLength property class of PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType.NodePath">
            <summary>
            NodePath property class of PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForXQueryType.Type">
            <summary>
            Type property class of PromotedNodePathForXQueryType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType">
            <summary>
            Model schema container class for PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.TypeClass">
            <summary>
            Type class for PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.Scale">
            <summary>
            Scale property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.Precision">
            <summary>
            Precision property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.Length">
            <summary>
            Length property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.IsMax">
            <summary>
            IsMax property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.IsSingleton">
            <summary>
            IsSingleton property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.NodePath">
            <summary>
            NodePath property class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.PromotedNodePathForSqlType.DataType">
            <summary>
            DataType relationship class of PromotedNodePathForSqlType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.XmlSchemaCollection">
            <summary>
            Model schema container class for XmlSchemaCollection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlSchemaCollection.TypeClass">
            <summary>
            Type class for XmlSchemaCollection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlSchemaCollection.Expression">
            <summary>
            Expression property class of XmlSchemaCollection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.XmlSchemaCollection.Schema">
            <summary>
            Schema relationship class of XmlSchemaCollection
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalLibrary">
            <summary>
            Model schema container class for ExternalLibrary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibrary.TypeClass">
            <summary>
            Type class for ExternalLibrary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibrary.Language">
            <summary>
            Language property class of ExternalLibrary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibrary.LibraryName">
            <summary>
            LibraryName property class of ExternalLibrary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibrary.Authorizer">
            <summary>
            Authorizer relationship class of ExternalLibrary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibrary.ExternalLibraryFiles">
            <summary>
            ExternalLibraryFiles relationship class of ExternalLibrary
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalLibraryFile">
            <summary>
            Model schema container class for ExternalLibraryFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibraryFile.TypeClass">
            <summary>
            Type class for ExternalLibraryFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibraryFile.Content">
            <summary>
            Content property class of ExternalLibraryFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibraryFile.Platform">
            <summary>
            Platform property class of ExternalLibraryFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLibraryFile.Path">
            <summary>
            Path property class of ExternalLibraryFile
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalLanguage">
            <summary>
            Model schema container class for ExternalLanguage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguage.TypeClass">
            <summary>
            Type class for ExternalLanguage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguage.LanguageName">
            <summary>
            LanguageName property class of ExternalLanguage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguage.Authorizer">
            <summary>
            Authorizer relationship class of ExternalLanguage
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguage.ExternalLanguageFiles">
            <summary>
            ExternalLanguageFiles relationship class of ExternalLanguage
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile">
            <summary>
            Model schema container class for ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.TypeClass">
            <summary>
            Type class for ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.Content">
            <summary>
            Content property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.FileName">
            <summary>
            FileName property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.Path">
            <summary>
            Path property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.Parameters">
            <summary>
            Parameters property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.Platform">
            <summary>
            Platform property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.Model.ExternalLanguageFile.EnvironmentVariables">
            <summary>
            EnvironmentVariables property class of ExternalLanguageFile
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.PackageMetadata">
            <summary>
            Metadata information that describes a package.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageMetadata.Name">
            <summary>
            Package name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageMetadata.Version">
            <summary>
            Package version
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageMetadata.Description">
            <summary>
            Package description
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.PackageOptions">
            <summary>
            Defines advanced options and additional artifacts for package creation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.TreatWarningsAsErrors">
            <summary>
            Indicates whether warnings should be treated as errors during model validation 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.IgnoreValidationErrors">
            <summary>
            Indicates the list of errors that will be ignored during validation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.RefactorLogPath">
            <summary>
            Path to the file to be added as the refactor log content to the .dacpac
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.DeploymentContributors">
            <summary>
            List of contributors that are required in order to deploy the .dacpac
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.ContributorArguments">
            <summary>
            List of contributors that are required in order to deploy the .dacpac
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.PackageOptions.DeploymentContributorConfigurationStreams">
            <summary>
            List of contributors that are required in order to deploy the .dacpac
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.SourceInformation">
            <summary>
            Represents information about an item of interest in the model, 
            for example a <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.SourceInformation.SourceName">
            <summary>
            Name representing the source for the information
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.SourceInformation.StartLine">
            <summary>
            The start line. May be -1 or 0 if the position is not known.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Dac.SourceInformation.StartColumn">
            <summary>
            The start column. May be -1 or 0 if the position is not known.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.SourceInformation.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of a <see cref="T:Microsoft.SqlServer.Dac.SourceInformation"/> object.
            </summary>
            <param name="sourceName">Name representing the source for the information</param>
            <param name="startLine">start line, if known. May be -1 or 0 if the position is not known.</param>
            <param name="startColumn">start column, if known. May be -1 or 0 if the position is not known.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Dac.TSqlModelUtils">
            <summary>
            Provides utility methods for the public model APIs.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.TSqlModelUtils.TryGetFragmentForAnalysis(Microsoft.SqlServer.Dac.Model.TSqlObject,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment@)">
            <summary>
            Tries to get the most suitable <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> for use during the rule analysis process.
            If the TSqlObject was originally built from a scripted source then the original source fragment will be returned.
            
            Otherwise a new AST will be generated from the <paramref name="tSqlObject"/>.
             
            This ensures that when reporting <see cref="T:Microsoft.SqlServer.Dac.CodeAnalysis.SqlRuleProblem"/>s the most accurate source information can be included
            in the error messages. 
            
            Note that a fragment will only be returned if this is
            supported for the <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/>. AST generation is only supported for top-level objects, with certain
            objects such as the <see cref="T:Microsoft.SqlServer.Dac.Model.DatabaseOptions"/> and inline constraints not supporting AST generation even though
            they are top level types.
            </summary>
            <param name="tSqlObject">The <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlObject"/> whose fragment is being requested</param>
            <param name="fragment">The <see cref="T:Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment"/> for the <paramref name="tSqlObject"/>, if it is possible to
            get fragment information for the object</param>
            <returns>true if the fragment was obtained, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Dac.TSqlModelUtils.CalculatePlatformCompatibility(Microsoft.SqlServer.Dac.Model.SqlServerVersion)">
            <summary>
            Maps from a <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/> to the <see cref="T:Microsoft.SqlServer.Dac.Extensibility.TSqlPlatformCompatibility"/> enum that matches it. The
            platform compatibility can be used to filter out extensions that don't support that platform, for instance code analysis
            rules.
            </summary>
            <param name="version">A <see cref="T:Microsoft.SqlServer.Dac.Model.SqlServerVersion"/>, for example the version for a <see cref="T:Microsoft.SqlServer.Dac.Model.TSqlModel"/></param>
            <returns>
            <see cref="T:Microsoft.SqlServer.Dac.Extensibility.TSqlPlatformCompatibility"/> indicating the compatibility level required for extensions. If no specific 
            version was passed into the method then the default will be to use <see cref="F:Microsoft.SqlServer.Dac.Extensibility.TSqlPlatformCompatibility.All"/> so
            that all extensions are loaded. 
            </returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Sql.DesignServices.SingleFileSymbolLocator">
            <summary>
            Finds the symbol occurrences in the primary source file of the element.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.DesignServices.SingleFileSymbolLocator.ComputeUpdateInformation(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlColumn,System.String)">
            <summary>
            Computes update information for the locations that the column name is used in the
            primary file. 
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator.AppendKeyword(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType)">
            <summary>
            Append a keyword such as CREATE, TABLE, or NULL
            </summary>
            <param name="tokenType"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator.AppendDelimiter(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType)">
            <summary>
            Append a collection delimiter
            </summary>
            <param name="tokenType"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator.AppendContextualKeyword(System.String)">
            <summary>
            Append a contextual keyword such as MAX, CONTENT, or DOCUMENT
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator.GenerateKeyword(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType)">
            <summary>
            Utility method to return the text for a keyword based on its token type
            having a central place to generate keywords will facilitate universal process such as changing casing in the future
            </summary>
            <param name="tokenType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator.GenerateKeyword(System.String)">
            <summary>
            Utility method to return the text for a keyword based on its text
            currently the keyword text is returned as is 
            having a central place to generate keywords will facilitate universal process such as changing casing in the future
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.ValidateColumnIndex(System.Int32,System.Int32)">
            <summary>
            Validates that the specified index represents a valid position to insert a column into the specified table.
            If the index is invalid, the method will throw an exception.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.ValidateIdentifier(Microsoft.Data.Tools.Schema.SchemaModel.IModelElement,System.String,System.String)">
            <summary>
            Determines whether the identifier is valid or not. The proposed identifier is validated
            using parser settings based on the specified model element.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.ValidateIdentifier(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParser,System.String,System.String)">
            <summary>
            Determines whether the identifier is valid or not. If the identifier is not valid
            and it cannot be escaped, this method will throw an exception.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.RefactorRenameColumnInTableScope(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlColumn,System.String)">
            <summary>
            Partially resolves the model to find the column references, and
            returns the locations of the given column.
            </summary>
            <param name="column"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.DeletePrimaryKeyConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlPrimaryKeyConstraint)">
            <summary>
            Deletes a Primary Key Constraint
            </summary>
            <param name="constraint">The SqlPrimaryKeyConstraint to delete</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.DeleteForeignKeyConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlForeignKeyConstraint)">
            <summary>
            Deletes a Foreign Key Constraint
            </summary>
            <param name="constraint">The SqlForeignKeyConstraint to delete</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.DeleteDefaultConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlDefaultConstraint)">
            <summary>
            Deletes a Default Constraint
            </summary>
            <param name="constraint">The SqlDefaultConstraint to delete</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.DeleteCheckConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlCheckConstraint)">
            <summary>
            Deletes a Check Constraint
            </summary>
            <param name="constraint">The SqlCheckConstraint to delete</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.DeleteUniqueConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlUniqueConstraint)">
            <summary>
            Deletes a Unique Constraint
            </summary>
            <param name="constraint">The SqlUniqueConstraint to delete</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.InsertColumnSetAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32)">
            <summary>
            Inserts a column set defition at the specified position in the specified table.
            </summary>
            <param name="table">The table where the column should be inserted. Cannot be null.</param>
            <param name="columnName">The unescaped name of the column to be inserted.</param>
            <param name="index">The position where the column should be inserted.</param>
            <returns>
            List of script updates that represent the insertion of the column.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.InsertComputedColumnAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32,System.String)">
            <summary>
            Inserts a computed column defition at the specified position in the specified table.
            </summary>
            <param name="table">The table where the column should be inserted. Cannot be null.</param>
            <param name="columnName">The unescaped name of the column to be inserted.</param>
            <param name="index">The position where the column should be inserted.</param>
            <param name="expression">The expression that represents the computed column definition.</param>
            <returns>
            List of script updates that represent the insertion of the column.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdater.InsertSimpleColumnAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32)">
            <summary>
            Inserts a computed column defition at the specified position in the specified table. The column will have a type of INT
            </summary>
            <param name="table">The table where the column should be inserted. Cannot be null.</param>
            <param name="columnName">The unescaped name of the column to be inserted.</param>
            <param name="index">The position where the column should be inserted.</param>
            <returns>
            List of script updates that represent the insertion of the column.
            </returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterConstants">
            <summary>
            Constants used by model updater, should only add entries in this class if it doesn't exist in CodeGenerationSupporter
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.InsertIntoCollection(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptFragmentGenerator,System.Int32,System.Int32,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptBuilderDelegate,System.Boolean,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlTokenType)">
            <summary>
            insert a comma for a script when necessary if the script is to be inserted into a list
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.CalculateDefinitionLastTokenOffset(Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment)">
            <summary>
            Calculate the length of a definition (column or constraint) to be used when deleting.
            </summary>
            <param name="fragment">The AST subtree of the statement.  Must be a ColumnDefinition or ConstraintDefinition;
            otherwise, an error value will be returned (-1)</param>
            <returns>Returns the last offset used for deleting the definition; on error, return -1</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.FindToken(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},System.Int32,System.Func{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken,System.Boolean},System.Func{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken,System.Boolean},System.Int32@,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken@)">
            <summary>
            Iterate the stoken stream to find the match token 
            until the continueCondition is not satisfied.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.CheckGoAndGetLastToken(Microsoft.Data.Tools.Schema.Sql.SchemaModel.ISqlModelElement,System.Boolean@,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken@)">
            <summary>
            checks if the last significant token is GO and returns the last token (EOF)
            </summary>
            <param name="element"></param>
            <param name="hasGo"></param>
            <param name="lastToken"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.IsInlineColumnConstraint(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlColumn,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlConstraint)">
            <summary>
            Check if the constraint definition is inline with the column definition.
            </summary>
            <param name="column"></param>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlModelUpdaterUtils.GetExtendedPropertyList(Microsoft.Data.Tools.Schema.Sql.SchemaModel.ISqlExtendedPropertyHost,System.String)">
            <summary>
            Return a list of extended property whose name is the inputed property name
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.SetColumnIdentitySeedOrIncrement(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSimpleColumn,System.Data.SqlTypes.SqlDecimal,System.Boolean)">
            <summary>
            generates script changes required to change seed or increment for an identity column
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="isValueSeed">true if value is seed, false if value is increment</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.SetColumnDataType(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSimpleColumn,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlType,System.Boolean@)">
            <summary>
            Generates the script changes required to change a column's data type.
            </summary>
            <returns>The list of changes required to modify the data type</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.SetColumnDataTypeLength(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSimpleColumn,System.Int32,System.Boolean)">
            <summary>
            Sets the length of the column's data type.
            </summary>
            <returns>The list of changes required to modify the data type</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.SetColumnDataTypePrecision(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlSimpleColumn,System.Int32)">
            <summary>
            Sets the precision of the column's data type.
            </summary>
            <returns>The list of changes required to modify the data type</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.GetCollatedDefinitionsForTable(Microsoft.SqlServer.TransactSql.ScriptDom.TableDefinition)">
            <summary>
            Returns a list with the column and constraint definitions in the order
            in which they are defined in the table definition
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.GetCollatedIndexForDefinition``1(System.Int32,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment[])">
            <summary>
            Converts an index that is relative only to definitions of the same kind (ColumnDefinitions vs. TableConstraints)
            into the index that is relative to the order in which all definitions are specified in the table
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.InsertColumnSetAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32)">
            <summary>
            Generates the script changes required to insert a column set at the specified position.
            </summary>
            <returns>The list of changes required to insert the column</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.InsertComputedColumnAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32,System.String)">
            <summary>
            Generates the script changes required to insert a computed column at the specified position.
            </summary>
            <returns>The list of changes required to insert the column</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.InsertSimpleColumnAt(Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlTable,System.String,System.Int32)">
            <summary>
            Generates the script changes required to insert a simple column at the specified position.
            </summary>
            <returns>The list of changes required to insert the column</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdater.InsertIntoDelimitedParenthesesWrappedList(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},System.Int32,Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment[],System.Int32,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.ScriptBuilderDelegate,System.Boolean)">
            <param name="tokenStream">The stream of tokens representing the statement</param>
            <param name="nextTokenIndex">The token representing the position where the collection should be created if one doesn't exist already.</param>
            <param name="collection">An array representing the TSqlFragments that make up the collection</param>
            <param name="index">Position where the element should be inserted.</param>
            <param name="elementBuilder">Delegate that gets called when the actual script needs to be generated</param>
            <param name="multiline"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ElementLocationType">
            <summary>
            Enum to represent type of element(a column or an inline constraint) location in a table
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ElementLocationType.FirstElement">
            <summary>
            First element in a table
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ElementLocationType.MiddleElement">
            <summary>
            A middle element in a table
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ElementLocationType.LastElement">
            <summary>
            Last element in a table
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ElementLocationType.ColumnScopedInlineConstraint">
            <summary>
            Column scoped inline constraint in a table. Example: default constraint from "C1 INT DEFAULT 1"
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.LocateElementTokenIndexes(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Locate deleting table element start and end token index
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.ExpandTokenScopeToIncludeWhiteSpace(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},System.Int32@,System.Int32@)">
            <summary>
            Expand the token scope of the element to be deleted to include preceding and tailing non-newline whitespace
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.RemoveEmptyLine(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},System.Int32,System.Int32,System.Int32@)">
            <summary>
            If the line is empty after delete, remove that empty line
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.AreBothNewLines(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},System.Int32,System.Int32)">
            <summary>
            If precedding and tailing of an element are both newlines
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Sql.SchemaModel.ModelUpdater.SqlScriptUpdaterForTableElementDeletion.RemoveOrphanCommaOrParentheses(System.Collections.Generic.IList{Microsoft.SqlServer.TransactSql.ScriptDom.TSqlParserToken},Microsoft.SqlServer.TransactSql.ScriptDom.TSqlFragment,Microsoft.Data.Tools.Schema.Sql.SchemaModel.SqlServer.ModelUpdater.SqlScriptUpdateItem,System.Boolean)">
            <summary>
            Remove the orphan comma after the table element before it was deleted.
            If the element is the last in the list, it removes the surrounding parentheses, which needs to be done
            in 2 edits, to not overlap with the column delete inside the parentheses.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Tasks.Sql.DesignServices.SqlDatabaseLocation">
            <summary>
            Helper that represents an location of a database.  This struct is useful
            to use as a key in dictionaries
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Tasks.Sql.DesignServices.SqlDatabaseLocation.Matches(Microsoft.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>
            Matches the connection to this server.  A match is made if the instance name and security
            are identical.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Tasks.Sql.DesignServices.SqlDatabaseLocation.SqlDatabaseLocationComparer">
            <summary>
            Helper comparer
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Utilities.Sql.Common.SqlIntegerRange">
            <summary>
            If the ranges have an overlap, they're compared equal, otherwise this class follows regular comparison semantics.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Utilities.Sql.Common.SqlIntegerRangeOverlapComparer">
            <summary>
            If the ranges have an overlap, they're compared equal, otherwise this class follows regular comparison semantics.
            </summary>
        </member>
    </members>
</doc>
