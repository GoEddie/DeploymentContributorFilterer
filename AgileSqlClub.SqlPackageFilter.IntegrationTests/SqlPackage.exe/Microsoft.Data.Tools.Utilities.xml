<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Data.Tools.Utilities</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Data.Tools.Schema.Common.AmbientValue">
            <summary>
            This class is used as value in the stack settings dictionary to ensure that the type of value is correct.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.IAmbientDataDirectAccess">
            <summary>
            This private interface allows pass-through access directly to member data
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StackSettingsData.PopulateSettings(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Provides a way to bulk populate settings from a dictionary
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.ArgumentValidation">
            <summary>
            Common validation routines for argument validation.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForEmptyString(System.String,System.String)">
            <summary>
            Check if the variable is an empty string
            </summary>
            <param name="variable">The value to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForEmptyCollection``1(System.Collections.Generic.ICollection{``0},System.String)">
            <summary>
            Check if the variable is an empty collection
            </summary>
            <param name="variable">The value to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForNullOrWhiteSpaceString(System.String,System.String)">
            <summary>
            Check if the variable is null, an empty string, or a string containing only white space
            </summary>
            <param name="variable">The value to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForAnyNullOrEmptyStringInList(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Check if a list of strings contains any null or empty strings
            </summary>
            <param name="variable">The list of strings to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForNullReference(System.Object,System.String)">
            <summary>
            Check if the variable is null
            </summary>
            <param name="variable">The value to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForInvalidNullNameReference(System.String,System.String)">
            <summary>
            Validates that the input messageName is neither null nor empty
            </summary>
            <param name="name">Parameter name</param>
            <param name="messageName">Parameter value</param>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckExpectedType(System.Object,System.Type)">
            <summary>        
            Check variable to determine if it matches the Type of type
            </summary>
            <param name="variable">The value to check</param>
            <param name="type">The Type expected type of variable</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckEnumeration(System.Type,System.Object,System.String)">
            <summary>
            Check variable to determine if it is a valid defined enumeration for enumType
            </summary>
            <param name="enumType">The expected type of variable</param>
            <param name="variable">The value to check</param>
            <param name="variableName">The name of the variable being checked</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForOutOfRangeException(System.Int64,System.Int64,System.Int64)">
            <summary>
            Check variable to determine if it is within, or equal to, the min and max range.
            </summary>
            <param name="value">The value to check</param>
            <param name="min">'value' must be equal to or greater then this value</param>
            <param name="max">'value' must be equal to or less then this value</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForSignedIntegerPositive(System.Int32,System.String)">
            <summary>
            Check variable to determine if it is a positive number (does not include Zero)
            </summary>
            <param name="value"></param>
            <param name="variableName"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckMaxLength(System.String,System.String,System.Int32)">
            <summary>
            Checks the string to make sure its length is less than or equal to the maxLength.
            A null value will not throw an exception.
            </summary>
            <param name="value">The string to check</param>
            <param name="variableName"></param>
            <param name="maxLength">The length the string must be less than or equal to</param>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForNonnegativeInteger(System.Int32,System.String)">
            <summary>
            Check variable to determine if it is a nonnegative number (positive or zero).
            </summary>
            <param name="value">
            Integer value to check.
            </param>
            <param name="variableName">
            Name of integer variable whose value is specified by <paramref name="value"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is negative.
            </exception>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForSingleBitSet(System.Int32)">
            <summary>
            Determine whether a signed integer contains only a single bit with value 1.
            </summary>
            <param name="i">The integer value to check.</param>
            <returns>Returns true if the binary representation of the signed integer contains a single 1. (e.g. 1000 or 0010)</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.ArgumentValidation.CheckForSingleBitSetAndThrow(System.Int32,System.String)">
            <summary>
            Determine whether a signed integer contains only a single bit with value 1.
            </summary>
            <param name="i">The integer value to check.</param>
            <param name="variableName">
            Name of integer variable whose value is specified by <paramref name="i"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="i"/> contains anything other than a single bit with value 1.
            </exception>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.CollectionUtils.MergeDictionaries``1(System.Collections.Generic.Dictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Merges two dictionaries. If collections have same keys, value of the second collection will be selected.
            </summary>
            <typeparam name="T">Type of the value in the dictionary</typeparam>
            <returns>Merged dictionary</returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.CommonConstants">
            <summary>
            Constants for Common
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.CommonConstants.ConnectionPooling">
            <summary>
            Value of connection pooling for SQL Connections
            We get the value of pooling from Ambient setting only for reliable connections. everywhere else we use this value for now.
            We should verify other places and see if can use ambient setting everywhere but because it causes some failures and need more investigation, we use this value. 
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.CommonConstants.DBVersion">
            <summary>
            Used to specify the database version as an int 100, 90, 80
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.CommonConstants.SqlServerVersion">
            <summary>
            Used to specify the database version
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.CommonConstants.FolderBrowseDialogOptions">
            <summary>
            Maps constants for commdlg.h
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.CommonConstants.MaxIdentifierLength">
            <summary>
            The maximum length of an identifier in Sql Server
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.CommonConstants.SqlProject_DSPAssemblyName">
            <summary>
            This property is used in vstemplates and the registry to identify which
            DSP this assembly/ItemTemplate location it is affinitized to.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.CommonConstants.XmlSerialization_DatabaseRefactoringReportUri">
            <summary>
            Constant strings for XmlSerialization
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.CommonConstants.GeneralConfigFileName">
            <summary>
            Name of the general configuration file.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.CommonResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.AbortDueToFatalError">
            <summary>
              Looks up a localized string similar to A critical error has occurred. The computer is out of memory or system resources. The application must close..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ArgumentParsing_ArgumentValueMissingError">
            <summary>
              Looks up a localized string similar to The argument string is missing the value of one of the arguments..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ArgumentParsing_DoubleQuoteMissingError">
            <summary>
              Looks up a localized string similar to The argument string is missing a closing double quote..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.AssemblySource">
            <summary>
              Looks up a localized string similar to Assembly Source.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ClusteredIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Clustered.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ColumnstoreIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Columnstore.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ConnectionStringParser_InvalidConnectionString">
            <summary>
              Looks up a localized string similar to The connection string could not be parsed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.CopyOfFormatString">
            <summary>
              Looks up a localized string similar to Copy of .
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.CopyOfFormatString2">
            <summary>
              Looks up a localized string similar to Copy ({0}) of .
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DatabaseEncryptionKeyName">
            <summary>
              Looks up a localized string similar to DatabaseKey.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DefaultCaption">
            <summary>
              Looks up a localized string similar to Microsoft Visual Studio.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DefaultRelatedElementTypeDescription">
            <summary>
              Looks up a localized string similar to object.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Deserialize_Relationships">
            <summary>
              Looks up a localized string similar to Deserializing relationships between database objects..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql100Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2008.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql110Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2012.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql120Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2014.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql130Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2016.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql140Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2017.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql150Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2019.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql160Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2022 or Azure SQL Database Managed Instance.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_Sql90Dsp">
            <summary>
              Looks up a localized string similar to SQL Server 2005.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_SqlAzureDsp">
            <summary>
              Looks up a localized string similar to SQL Server Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_SqlAzureV12Dsp">
            <summary>
              Looks up a localized string similar to SQL Server Azure V12.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_SqlDwDsp">
            <summary>
              Looks up a localized string similar to Azure Synapse Dedicated SQL Pool.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.DisplayName_SqlServerlessDsp">
            <summary>
              Looks up a localized string similar to Azure Synapse Serverless SQL Pool.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchError_Exception">
            <summary>
              Looks up a localized string similar to An error occurred while the batch was being processed. The error message is: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchExecutionError_Halting">
            <summary>
              Looks up a localized string similar to An error occurred while the batch was being executed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchExecutionError_Ignoring">
            <summary>
              Looks up a localized string similar to An error occurred while the batch was being executed, but the error has been ignored..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchExecutionInfo_RowsAffected">
             <summary>
               Looks up a localized string similar to 
            ({0} row(s) affected)
            .
             </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchSqlMessageNoLineInfo">
            <summary>
              Looks up a localized string similar to Msg {0}, Level {1}, State {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchSqlMessageNoProcedureInfo">
            <summary>
              Looks up a localized string similar to Msg {0}, Level {1}, State {2}, Line {3}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_BatchSqlMessageWithProcedureInfo">
            <summary>
              Looks up a localized string similar to Msg {0}, Level {1}, State {2}, Procedure {3}, Line {4}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionError_CommandNotSupported">
            <summary>
              Looks up a localized string similar to Command {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionError_InvalidPath">
            <summary>
              Looks up a localized string similar to The following path could not be used because an error occurred:  {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionError_ReadingFile">
            <summary>
              Looks up a localized string similar to The following file could not be read because an error occurred: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionError_VariableNotFound">
            <summary>
              Looks up a localized string similar to The variable {0} could not be found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionInfo_FinalizingLoop">
            <summary>
              Looks up a localized string similar to Execution completed {0} times....
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionInfo_InitilizingLoop">
            <summary>
              Looks up a localized string similar to Starting execution loop of {0} times....
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionInfo_QueryCancelledbyUser">
            <summary>
              Looks up a localized string similar to You cancelled the query..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ExecutionNotYetCompleteError">
            <summary>
              Looks up a localized string similar to The previous execution is not yet complete..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ScriptError_Error">
            <summary>
              Looks up a localized string similar to A scripting error occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ScriptError_FatalError">
            <summary>
              Looks up a localized string similar to A fatal error occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ScriptError_ParsingSyntax">
            <summary>
              Looks up a localized string similar to Incorrect syntax was encountered while {0} was being parsed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.EE_ScriptError_Warning">
            <summary>
              Looks up a localized string similar to Scripting warning..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ErrorString_TooManyErrors">
            <summary>
              Looks up a localized string similar to The maximum number of {0} errors has been reached. {1} total errors, {2} total warnings, and {3} total messages were encountered..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionArrayWithNullOrEmptyString">
            <summary>
              Looks up a localized string similar to The value of &apos;{0}&apos; cannot contain any null or empty strings..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionConditionFailed">
            <summary>
              Looks up a localized string similar to The condition &apos;{0}&apos; evaluated to false..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionEmptyCollection">
            <summary>
              Looks up a localized string similar to The collection &apos;{0}&apos; cannot be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionEmptyString">
            <summary>
              Looks up a localized string similar to The value of &apos;{0}&apos; cannot be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionEnumerationNotDefined">
            <summary>
              Looks up a localized string similar to {0} is not a valid value for {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionExpectedType">
            <summary>
              Looks up a localized string similar to The type is not valid. The type &apos;{0}&apos; was expected..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionIndexOutOfRange">
            <summary>
              Looks up a localized string similar to The value of {0} must be between {1} and {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionInvalidNullNameArgument">
            <summary>
              Looks up a localized string similar to The name for &apos;{0}&apos; cannot be null or an empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionMaxLengthExceeded">
            <summary>
              Looks up a localized string similar to The following value for {1} is longer than {2} characters: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionNullOrWhiteSpaceString">
            <summary>
              Looks up a localized string similar to The value of &apos;{0}&apos; cannot be null, empty or contain only white space..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.ExceptionUnexpected">
            <summary>
              Looks up a localized string similar to An unexpected error occurred..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.FullTextIndexName">
            <summary>
              Looks up a localized string similar to Full-text Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.FunctionBody">
            <summary>
              Looks up a localized string similar to Function Body.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.FunctionImplementation">
            <summary>
              Looks up a localized string similar to Function Implementation.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Import_MergingChildren">
            <summary>
              Looks up a localized string similar to Merging children.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.InlineConstraintOnDisplayName">
            <summary>
              Looks up a localized string similar to on {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.IntegerRange_EndLessThanBegin">
            <summary>
              Looks up a localized string similar to The end value cannot be less than the begin value..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.MasterKeyName">
            <summary>
              Looks up a localized string similar to Master Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.NonClusteredIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Non-Clustered.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.NonUniqueIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Non-Unique.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Not_connected">
            <summary>
              Looks up a localized string similar to An internal error occurred while trying to connect to the design-time validation database..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PartitionSpecification">
            <summary>
              Looks up a localized string similar to Partition Specification.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PartitionValue">
            <summary>
              Looks up a localized string similar to Partition Value.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Permission">
            <summary>
              Looks up a localized string similar to Permission.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployScriptAlreadyDeployed">
            <summary>
              Looks up a localized string similar to Deployment did not occur because the script has already been deployed to the target server..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseCompat">
            <summary>
              Looks up a localized string similar to The database compatibility level of the build script %i does not match the compatibility level of the target database %i. Verify whether your database project settings are correct and whether your build script is up to date..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseExists">
            <summary>
              Looks up a localized string similar to You cannot deploy this update script to target {0}. The database for which this script was built, {1}, does not exist on this server..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseExistsUnknownServer">
            <summary>
              Looks up a localized string similar to You cannot deploy this update script to target server. The database for which this script was built, {0}, does not exist on this server..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseName">
            <summary>
              Looks up a localized string similar to The database name in the build script %s does not match the name of the target database %s. Verify whether your database project settings are correct and  whether your build script is up to date..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseState">
            <summary>
              Looks up a localized string similar to The state of the target database, %s, is not set to ONLINE. To deploy to this database, its state must be set to ONLINE..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyDatabaseWritable">
            <summary>
              Looks up a localized string similar to You cannot deploy this update script because the database for which it was built, %s , is set to READ_ONLY..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyServerName">
            <summary>
              Looks up a localized string similar to The server name in the build script %s does not match the name of the target server %s. Verify whether your database project settings are correct and whether your build script is up to date..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PredeployVerifyServerVersion">
            <summary>
              Looks up a localized string similar to The version of SQL Server in the build script %i does not match the version on the target server, %i. Verify whether your database project settings are correct and whether your build script is up to date..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PrimarySelectiveXML_LabelPart">
            <summary>
              Looks up a localized string similar to Primary Selective XML.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.PrimaryXML_LabelPart">
            <summary>
              Looks up a localized string similar to Primary XML.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Registry_CannotAccessInstallDirKey">
            <summary>
              Looks up a localized string similar to The installation directory for Visual Studio could not be located..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_CannotFoundConstraint">
            <summary>
              Looks up a localized string similar to An expected constraint was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_CannotFoundTrigger">
            <summary>
              Looks up a localized string similar to A trigger was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_ChildWithoutName">
            <summary>
              Looks up a localized string similar to The name of the child constraint was not specified. .
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_NoMultipleConstraintsInOneStatement">
            <summary>
              Looks up a localized string similar to You cannot add multiple constraints in one statement. You must put only one object or child object in each file..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_NoMultipleObjectsInOneFile">
            <summary>
              Looks up a localized string similar to You cannot put more than one object in the same script. You must put only one object or child object in each file..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_NoObjectIDFound">
            <summary>
              Looks up a localized string similar to The object identifier was not found in the script..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_ObjectIsAlreadyCreated">
            <summary>
              Looks up a localized string similar to The object {0} was already created..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Schema_ObjectNotFound">
            <summary>
              Looks up a localized string similar to The object {0} was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SchemaDependencyInfoMessage">
            <summary>
              Looks up a localized string similar to {3} ({2}) depends on {1} ({0}). {1} must be updated..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SchemaDependencyInfoMessage2">
            <summary>
              Looks up a localized string similar to  {1} ({0}) depends on {3} ({2}). {1} must be updated..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SecondarySelectiveXML_LabelPart">
            <summary>
              Looks up a localized string similar to Secondary Selective XML.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SecondaryXML_LabelPart">
            <summary>
              Looks up a localized string similar to Secondary XML.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SelectiveXmlIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Selective Xml Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Serialize_Relationships">
            <summary>
              Looks up a localized string similar to Serializing relationships between database objects.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SettingsRequireSysAdmin">
            <summary>
              Looks up a localized string similar to The database settings for DB_CHAINING or TRUSTWORTHY could not be modified. You must be a SysAdmin to apply these settings..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SignatureName_NoSignable">
            <summary>
              Looks up a localized string similar to Signature for unknown object.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SignatureName_WithSignable">
            <summary>
              Looks up a localized string similar to Signature for &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SolutionExplorer_SchemaObjects">
            <summary>
              Looks up a localized string similar to Schema Objects.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SqlConnectionApplicationName_BuildAndDeploy">
            <summary>
              Looks up a localized string similar to VSDB Build And Deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SqlConnectionApplicationName_Default">
            <summary>
              Looks up a localized string similar to VSDB.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SqlConnectionApplicationName_DesignDatabaseManager">
            <summary>
              Looks up a localized string similar to VSDB DesignDBManager.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SqlConnectionApplicationName_ReverseEngineeringFeature">
            <summary>
              Looks up a localized string similar to VSDB ReverseEngineer.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SqlConnectionApplicationName_SchemaCompare">
            <summary>
              Looks up a localized string similar to VSDB Schema Compare.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.SystemDefinedSqlCmdVariableFound">
            <summary>
              Looks up a localized string similar to Predefined SQLCMD variable found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Threading_InvalidStateChange">
            <summary>
              Looks up a localized string similar to The job state change {0} -&gt; {1} is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Threading_JobAlreadyManaged">
            <summary>
              Looks up a localized string similar to The Job Manager is already managing this job..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Threading_JobListChangedJobName">
            <summary>
              Looks up a localized string similar to JobListChangedJob.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Threading_JobManagerNotInitialized">
            <summary>
              Looks up a localized string similar to The Job Manager was not initialized..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Aggregate">
            <summary>
              Looks up a localized string similar to Aggregate.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ApplicationRole">
            <summary>
              Looks up a localized string similar to Application Role.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Assembly">
            <summary>
              Looks up a localized string similar to Assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_AssemblyFile">
            <summary>
              Looks up a localized string similar to Assembly File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_AsymmetricKey">
            <summary>
              Looks up a localized string similar to Asymmetric Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_BrokerPriority">
            <summary>
              Looks up a localized string similar to Broker Priority.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_BuiltInServerRole">
            <summary>
              Looks up a localized string similar to Built-in ServerRole.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_BuiltInType">
            <summary>
              Looks up a localized string similar to Built-in Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Certificate">
            <summary>
              Looks up a localized string similar to Certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_CheckConstraint">
            <summary>
              Looks up a localized string similar to Check Constraint.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Column">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ColumnEncryptionKey">
            <summary>
              Looks up a localized string similar to Column Encryption Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ColumnEncryptionKeyValue">
            <summary>
              Looks up a localized string similar to Column Encryption Key Value.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ColumnMasterKey">
            <summary>
              Looks up a localized string similar to Column Master Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ColumnSet">
            <summary>
              Looks up a localized string similar to Column Set.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ColumnStoreIndex">
            <summary>
              Looks up a localized string similar to Column Store Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ComputedColumn">
            <summary>
              Looks up a localized string similar to Computed Column.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Contract">
            <summary>
              Looks up a localized string similar to Contract.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Credential">
            <summary>
              Looks up a localized string similar to Credential.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_CryptographicProvider">
            <summary>
              Looks up a localized string similar to Cryptographic Provider.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_CustomErrorMessage">
            <summary>
              Looks up a localized string similar to Custom Error Message.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DatabaseAuditSpecification">
            <summary>
              Looks up a localized string similar to Database Audit Specifications.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DatabaseEncryptionKey">
            <summary>
              Looks up a localized string similar to Database Encryption Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DatabaseOptions">
            <summary>
              Looks up a localized string similar to Database Options.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DatabaseScopedCredential">
            <summary>
              Looks up a localized string similar to Database Scoped Credential.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DataCompressionOption">
            <summary>
              Looks up a localized string similar to Data Compression Option.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Default">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_DefaultConstraint">
            <summary>
              Looks up a localized string similar to Default Constraint.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Endpoint">
            <summary>
              Looks up a localized string similar to Endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_EventNotification">
            <summary>
              Looks up a localized string similar to Event Notification.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_EventSession">
            <summary>
              Looks up a localized string similar to Event Session.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExtendedProperty">
            <summary>
              Looks up a localized string similar to Extended Property.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExternalDataSource">
            <summary>
              Looks up a localized string similar to External Data Source.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExternalFileFormat">
            <summary>
              Looks up a localized string similar to External File Format.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExternalStream">
            <summary>
              Looks up a localized string similar to External Stream.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExternalStreamingJob">
            <summary>
              Looks up a localized string similar to External Streaming Job.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ExternalTable">
            <summary>
              Looks up a localized string similar to External Table.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Filegroup">
            <summary>
              Looks up a localized string similar to Filegroup.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_FileTable">
            <summary>
              Looks up a localized string similar to FileTable.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ForeignKey">
            <summary>
              Looks up a localized string similar to Foreign Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_FullTextCatalog">
            <summary>
              Looks up a localized string similar to Full-text Catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_FullTextIndex">
            <summary>
              Looks up a localized string similar to Full-text Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_FullTextStopList">
            <summary>
              Looks up a localized string similar to Full Text Stoplist.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Index">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_LinkedServer">
            <summary>
              Looks up a localized string similar to Linked Server.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_LinkedServerLogin">
            <summary>
              Looks up a localized string similar to Linked Server Login.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Login">
            <summary>
              Looks up a localized string similar to Login.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_MasterKey">
            <summary>
              Looks up a localized string similar to Master Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_MessageType">
            <summary>
              Looks up a localized string similar to Message Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Parameter">
            <summary>
              Looks up a localized string similar to Parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_PartitionFunction">
            <summary>
              Looks up a localized string similar to Partition Function.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_PartitionScheme">
            <summary>
              Looks up a localized string similar to Partition Scheme.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Permission">
            <summary>
              Looks up a localized string similar to Permission.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_PrimaryKey">
            <summary>
              Looks up a localized string similar to Primary Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Procedure">
            <summary>
              Looks up a localized string similar to Procedure.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_PromotedPathBase">
            <summary>
              Looks up a localized string similar to Promoted path.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Queue">
            <summary>
              Looks up a localized string similar to Queue.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_RemoteServiceBinding">
            <summary>
              Looks up a localized string similar to Remote Service Binding.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Role">
            <summary>
              Looks up a localized string similar to Role.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_RoleMembership">
            <summary>
              Looks up a localized string similar to Role Membership.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Route">
            <summary>
              Looks up a localized string similar to Route.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Rule">
            <summary>
              Looks up a localized string similar to Rule.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ScalarFunction">
            <summary>
              Looks up a localized string similar to Function.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Schema">
            <summary>
              Looks up a localized string similar to Schema.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SearchPropertyList">
            <summary>
              Looks up a localized string similar to Search Property List.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SecurityPolicy">
            <summary>
              Looks up a localized string similar to Security policy.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SecurityPredicate">
            <summary>
              Looks up a localized string similar to Security predicate.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SelectiveXmlIndex">
            <summary>
              Looks up a localized string similar to Selective XML Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Sequence">
            <summary>
              Looks up a localized string similar to Sequence.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ServerAudit">
            <summary>
              Looks up a localized string similar to Server Audit.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ServerAuditSpecification">
            <summary>
              Looks up a localized string similar to Server Audit Specification.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ServerOptions">
            <summary>
              Looks up a localized string similar to Server Options.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ServerRole">
            <summary>
              Looks up a localized string similar to Server Role.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_ServerRoleMembership">
            <summary>
              Looks up a localized string similar to Server Role Membership.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Service">
            <summary>
              Looks up a localized string similar to Service.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Signature">
            <summary>
              Looks up a localized string similar to Signature.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SpatialIndex">
            <summary>
              Looks up a localized string similar to Spatial Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SqlType">
            <summary>
              Looks up a localized string similar to Sql Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Statistic">
            <summary>
              Looks up a localized string similar to Statistic.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_SymmetricKey">
            <summary>
              Looks up a localized string similar to Symmetric Key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Synonym">
            <summary>
              Looks up a localized string similar to Synonym.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Table">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_TableFunction">
            <summary>
              Looks up a localized string similar to Function.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_TableTypeIndex">
            <summary>
              Looks up a localized string similar to Table Type Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_Trigger">
            <summary>
              Looks up a localized string similar to Trigger.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_UniqueConstraint">
            <summary>
              Looks up a localized string similar to Unique Constraint.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_User">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_UserDefinedDataType">
            <summary>
              Looks up a localized string similar to User-Defined Data Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_UserDefinedTableType">
            <summary>
              Looks up a localized string similar to User-Defined Table Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_UserDefinedType">
            <summary>
              Looks up a localized string similar to User-Defined Type.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_View">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_XmlIndex">
            <summary>
              Looks up a localized string similar to XML Index.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_XmlNamespace">
            <summary>
              Looks up a localized string similar to XML Namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.TypeDescription_XmlSchemaCollection">
            <summary>
              Looks up a localized string similar to XML Schema Collection.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.UniqueIndex_LabelPart">
            <summary>
              Looks up a localized string similar to Unique.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.Unnamed">
            <summary>
              Looks up a localized string similar to &lt;unnamed&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.UnnamedChildDisplayName">
            <summary>
              Looks up a localized string similar to {0} on {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.UnnamedRoleAssignmentDisplayName">
            <summary>
              Looks up a localized string similar to {0} for {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlIndex_Path">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlIndex_Property">
            <summary>
              Looks up a localized string similar to Property.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlIndex_Value">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_CannotDeserializeType">
            <summary>
              Looks up a localized string similar to The type {0} could not be deserialized..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_CannotGetValidType">
            <summary>
              Looks up a localized string similar to The type {0} could not be deserialized because no valid type was found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_CannotParseToEnum">
            <summary>
              Looks up a localized string similar to The value {0} for enumeration {1} could not be parsed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_CannotToAttribute">
            <summary>
              Looks up a localized string similar to {0} could not be serialized to an XML attribute..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_DuplicateAttribute">
            <summary>
              Looks up a localized string similar to Multiple XmlElement or XmlAttribute attributes cannot be applied to the same field..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_DuplicateKey">
            <summary>
              Looks up a localized string similar to The key {0} was duplicated in the dictionary..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_DuplicateXmlInclude">
            <summary>
              Looks up a localized string similar to Duplicate declaration of XmlInclude type &apos;{0}&apos; on class &apos;{1}&apos; definition..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_EmptyContent">
            <summary>
              Looks up a localized string similar to The content is empty..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_IncompatiableType">
            <summary>
              Looks up a localized string similar to Type {0} is incompatible with type {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_InvalidEnumValue">
            <summary>
              Looks up a localized string similar to The enumeration value cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_InvalidXmlReaderPosition">
            <summary>
              Looks up a localized string similar to The XmlReader should be positioned at the start of an element, but it is at {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_KeyIsNull">
            <summary>
              Looks up a localized string similar to The key is null..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_NameReserved">
            <summary>
              Looks up a localized string similar to {0} is reserved. Use XmlAttributeAttribute to specify a different name..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_ReuseNames">
            <summary>
              Looks up a localized string similar to {0}.{1} and {2}.{3} use the same name, {4}. Use XmlElementAttribute or XmlAttributeAttribute to specify a different name..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.CommonResource.XmlSerialization_WrongType">
            <summary>
              Looks up a localized string similar to Expecting {1}; actual {0}..
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.CommonResourceUtil.GetString(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.IVsSqlDebuggingSupport.GetDebuggableServers(System.String@)">
            <summary>
            Get the list of SQL servers marked as debuggable.
            This will loop through all server explorer connections and return
            those for which the "Enable Debugging" option is selected.  This
            will be used by the debugger at app debugging (F5) time.
            The returned string is a list of servers separated by embedded
            NULLs, e.g. "rollin\0burrito\0sqldbg_yukon".
            </summary>
            <param name="strDebuggableServers"></param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.IVsSqlDebuggingSupport.GetDebugStatus(System.String,System.UInt32@)">
            <summary>
            Get the debug status for a specified server name.  When in DDD mode,
            this will assert that the specified server is the same one on which
            DDD is running and return the debug status for the connection being
            used.  When in app debugging mode, this will loop through server explorer
            connections until it finds one with the specified server name and the
            "Enable Debugging" option is set, and return the debug status for this
            connection.
            </summary>
            <param name="strServer"></param>
            <param name="debugStatus"></param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.IVsSqlDebuggingSupport.SetDebugStatus(System.IntPtr,System.UInt32)">
            <summary>
            Set the debug status for a specified connection.  The debugger will
            call this method when the user sets a breakpoint in a document
            loaded from the data explorer or a SQL/CLR project.  They will get
            the connection by asking the data explorer or project hierarchy that
            owns the document for the connection it is using.
            </summary>
            <param name="unkConnection"></param>
            <param name="dwDebugStatus"></param>
            <returns>HRESULT</returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Diagnostics.WindowsEventTracingLevel">
            <summary>
            Enumeration of event levels predefined by ETW.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.EnvironmentSettings">
            <summary>
            Singleton class includes helper properties for any features that controlled by environment variables 
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.EnvironmentSettings.ConnectionPoolEnvVar">
            <summary>
            The environment variable used to enable connection pooling
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.EnvironmentSettings.TelemetryOptoutEnvVar">
            <summary>
            The environment variable used for opting out of telemetry
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.EnvironmentSettings.ConnectionPoolingEnabled">
            <summary>
            Returns true if connection pooling is enabled
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.EnvironmentSettings.TelemetryOptout">
            <summary>
            Returns true if telemetry is opt-out. Default is false
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.EventUtils">
            <summary>
            Utility class to wrap the common code used to raise events.
            The method(s) in the class are static.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.EventUtils.Raise``1(System.Object,System.EventHandler{``0},``0)">
            <summary>
            Raises given event with given EventArgs dervived class T.
            </summary>
            <remarks>
            The is a slight performance penalty to be aware of.  The caller
            much always new up a new event args object prior to the which
            may not get used if there are no listeners to the event.
            </remarks>
            <typeparam name="T">
            EventArgs derived type.
            </typeparam>
            <param name="sender">
            Sender of the event.
            </param>
            <param name="eventObject">
            Event to raise.
            </param>
            <param name="e">
            EventArgs derived class object.
            </param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Exceptions.DalPermissionDeniedException">
            <summary>
            Thrown by the Dal layer when a SqlException is thrown that indicates that
            the user did not have adequete permissions to perform the action
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Exceptions.ExceptionUtils.IsIrrecoverableException(System.Exception)">
            <summary>
            Returns true if the exception indicates that something beyond the operation that was underway at the time might be screwed up.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Exceptions.ExceptionUtils.IsCriticalException(System.Exception)">
            <summary>
             Gets whether exception is a critical one and can't be ignored with corrupting
             AppDomain state.
             </summary>
             <param name="ex">Exception to test.</param>
             <returns>True if exception should not be swallowed.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Exceptions.ExceptionUtils.ConnectionHasEncryptionSettings(Microsoft.Data.SqlClient.SqlConnectionEncryptOption,System.Boolean)">
            <summary>
            Returns true if the connection has encryption settings that can cause encryption errors
            </summary>
            <param name="encryptOption">Encrypt option in connection</param>
            <param name="trustServerCertificate">Trust Server Certificate in connection</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Exceptions.ExceptionUtils.IsEncryptError(Microsoft.Data.SqlClient.SqlException)">
            <summary>
            Returns true if the SQL Error is related to encrypt errors
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Exceptions.SqlStudioException.AddData(System.Exception,System.Object,System.Object)">
            <summary>
            Adds data to the exception
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Exceptions.UnexpectedException">
            <summary>
            Represents the exception thrown when an unexpected error occurs.  Why
            the .NET framework does not have this baffles me.  It is a standard
            COM error code.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.FileUtils">
            <summary>
            Used to create temporary files.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.FileUtils._invalidCharsRegex">
            <summary>
            Not to be referenced directly - use <see cref="P:Microsoft.Data.Tools.Schema.Common.FileUtils.InvalidFileCharsRegex"/> property instead 
            as this auto-initializes the field
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.FileUtils.DefaultIntermediateOutputPath">
            <summary>
            Default path generally used as base directory for files generated during build process.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.FileUtils.InvalidFileCharsRegex">
            <summary>
            Regex pattern for invalid characters in file names including control characters
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateUniqueFilename(System.String,System.String,System.String@)">
            <summary>
            Creates a unique filename based on the users
            document directory and the input extension
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateUniqueFilename(System.String,System.String,System.String,System.Boolean,System.String@)">
            <summary>
            Creates a unique filename based on the users
            document directory and the input extension
            </summary>
            <param name="fileNamePrefix">
            The file prefix
            </param>
            <param name="fileExtension">
            The file extension.  Should start with a dot.
            </param>
            <param name="indexSeparator">
            If this routine must supply an index then this is the separator.
            For example '_' will produce myfile_1.txt, myfile_2.txt.  If the
            separator is string.Empty then myfile1.txt and myfile2.txt will
            be produced.
            </param>
            <param name="alwaysUseSeparator">
            Flag indicating that separator should always be used even for the
            first unique name.
            </param>
            <param name="tempFileName">
            the returned temporary filename
            </param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.AppendAllTextAndNormalizeLineEndings(System.String,System.String)">
            <summary>
            Append the given text to the specified file
            IOException should be caught and handled by the calling object
            </summary>
            <param name="filePath">Path to the file</param>
            <param name="text">text to write to the file</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.WriteAllTextAndNormalizeLineEndings(System.String,System.String)">
            <summary>
            Write the given text to the specified file
            IOException should be caught and handled by the calling object
            </summary>
            <param name="filePath">Path to the file</param>
            <param name="text">text to write to the file</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.BufferedCopy(System.IO.BinaryReader,System.IO.FileInfo,System.Int64,System.Int32)">
            <summary>
            Copies from the reader to the file in binary chunks.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.BufferedCopy(System.IO.BinaryReader,System.IO.BinaryWriter,System.Int64,System.Int32)">
            <summary>
            Copies from the reader to the writer in binary chunks.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SetFileReadWrite(System.String)">
            <summary>
            Turns off the read-only attribute for this file
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.IsUnderDirectory(System.String,System.String)">
            <summary>
            Returns true if the child directory is under the parent
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.ReplaceBasePathWithAnother(System.String,System.String,System.String)">
            <summary>
            Given a path this routine will replace the base path 'oldBasePath' with 'newBasePath' if
            the 'pathToReplace' argument is under 'oldBasePath'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.MakeRelative(System.String,System.String)">
            <summary>
            Takes a parent directory and a child and returns the relative of the child directory.  string.empty
            is returned if the child is not under the parent.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.IsSamePath(System.String,System.String)">
            <devdoc>
            This is the approved method coming from mpf, copied here since we can't take
            that dependency.
            </devdoc>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.PathsAreEqual(System.String,System.String)">
            <summary>
            Returns true if the paths are equal
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Data.Tools.Schema.Common.FileUtils.ReplaceIllegalNtfsCharacters(System.String,System.Boolean,System.Boolean)" -->
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.IsFilePartInvalid(System.String,System.Boolean)">
            <summary>
            Checks whether a file part contains valid characters. The file part can be any part of a non rooted path.
            </summary>
            <param name="filePart"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Copies a directory from one location to another.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CompareTwoPaths(System.String,System.String)">
            <summary>
            Comparison routine that matches Comparison(string, string) signature for use in
            Sorting lists of paths.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.TryCreateDirectory(System.String)">
            <summary>
            Creates a directory if it doesn't already exist.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateDirectory(System.String)">
            <summary>
            Creates a directory if it doesn't already exist.
            </summary>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:System.Security.SecurityException"/>
            <exception cref="T:System.UnauthorizedAccessException"/>
            <param name="fullPath">The directory to create</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.EnsureNoBackslash(System.String)">
            <summary>
            Make sure the full path does not end in a backslash
            </summary>
            <param name="fullPath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.EnsureBackslash(System.String)">
            <summary>
            Returns a given path with a backslash at the end, if not already there.
            </summary>
            <param name="path">The path to add a backslash to.</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.ArraysAreEqual(System.Byte[],System.Byte[])">
            <summary>
            Are the arrays equal? (used for MD5 calculations)
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.TryGetFileSize(System.String,System.Int64@)">
            <summary>
            Returns the size of the file.
            </summary>
            <param name="fullFileName"></param>
            <param name="fileSize">The size of the file in bytes</param>
            <returns>False if the file size could not be retrieved.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.GetHashAlgorithm">
            <summary>
            Returns the hash algorithm used by the project system and dacpacs
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.TryCalculateHashValue(System.String,System.Byte[]@)">
            <summary>
            Calculates the SHA-1 hash for a file
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.HasExtension(System.String,System.String)">
            <summary>
            Does the filename have the argument extension?
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateCopyOfName(System.String)">
            <summary>
            Create a unique name
            MyFolder -> Copy of MyFolder, Copy (1) of MyFolder,...
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.GetTwoPartExtension(System.String)">
            <summary>
            Returns the two part extension from a fileName
            </summary>
            <param name="fileName">The file name like MyTable.table.sql</param>
            <returns>".table.sql"</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateUniqueTwoPartFilename(System.String)">
            <summary>
            Looks on disk and creates a unique two part filename
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CreateUniqueThreePartFilename(System.String)">
             <summary>
             Looks on disk and creates a unique filename for a model element.
            
             This routine will check max path and my end up truncating the filename.
             </summary>
             <returns>a filename that won't overwrite any on disk</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.VerifyAgainstMaxPath(System.String)">
            <summary>
            Reduces the fullFileName to the max length acceptible by the filesystem.
            If this is not possible, the minimum returned will contain the original directory path
            and the extension.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CanonicalizeFileName(System.String)">
            <summary>
            Canonicalize filenames so they can be used in dictionaries as keys.  Note
            that this canonicalization assumes you have a case-insensitive filesystem
            because part of the canonicalization is to upcase.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.TrySetFileReadWrite(System.String)">
            <summary>
            Attempt to clear the readonly bit from the file.
            </summary>
            <param name="fullFileName">The full path to the file</param>
            <returns>True if it succeeded</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.EnsureDirectoryExists(System.String)">
            <summary>
            Creates a directory if it doesn't already exist.
            </summary>
            <exception cref="T:System.IO.IOException"></exception>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CanonicalizeDirectoryName(System.String)">
            <summary>
            Canonicalize folders so they can be used in dictionaries as keys.  Note
            that this canonicalization assumes you have a case-insensitive filesystem
            because part of the canonicalization is to upcase.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SpinDelete(System.String)">
            <summary>
            Try to delete a file, sleep for up to 5 seconds in total
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeFileExists(System.String)">
            <summary>
            Determines whether the specified file exists.
            </summary>
            <param name="path">The file to check.</param>
            <returns>
            true if the caller has the required permissions and path contains the name
            of an existing file; otherwise, false. This method also returns false if
            path is null, an invalid path, or a zero-length string. If the caller does
            not have sufficient permissions to read the specified file, no exception
            is thrown and the method returns false regardless of the existence of path.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeIsPathRooted(System.String)">
            <summary>
            Returns true if the path is rooted.  False if the
            path is malformed or not rooted.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeGetFullPath(System.String)">
            <summary>
            Returns the full path (trimming quotes).  Empty if the
            path is malformed or not rooted.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeGetFile(System.String)">
            <summary>
            Constructs a FileInfo object using the given path.
            </summary>
            <param name="path">The file to check.</param>
            <returns>
            A FileInfo object or null if path is invalid.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeDirectoryExists(System.String)">
            <summary>
            Determines whether the specified directory exists.
            </summary>
            <param name="path">The directory to check.</param>
            <returns>
            true if the caller has the required permissions and path contains the name
            of an existing file; otherwise, false. This method also returns false if
            path is null, an invalid path, or a zero-length string. If the caller does
            not have sufficient permissions to read the specified file, no exception
            is thrown and the method returns false regardless of the existence of path.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.SafeIsUnderDirectory(System.String,System.String)">
            <summary>
            Returns true if the child directory is under the parent
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.CanonicalizeFileNameOrDirectoryImpl(System.String,System.Boolean)">
            <summary>
            Internal implementation of the Canonicalization routine.  Note
            that this canonicalization assumes you have a case-insensitive filesystem
            because part of the canonicalization is to upcase.
            </summary>
            <param name="path"></param>
            <param name="pathIsDir"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.GetDirectoryWithCorrectCase(System.IO.DirectoryInfo)">
            <summary>
            Returns the directory 'info' with the correct case.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.EnsureIsDelimited(System.String)">
            <summary>
            Adds the $() around the database/variable names
            </summary>
            <param name="name">The name to delimit as $(name)</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.EnsureIsDelimited(System.String,System.Boolean,System.Boolean@)">
            <summary>
            Adds the $() around the database/variable names
            Invalid characters are defined at http://msdn.microsoft.com/en-us/library/ms188714.aspx as
            'Variable names must not contain white space characters or quotation marks'
            </summary>
            <param name="name">The name to delimit as $(name)</param>
            <param name="doReplacementOfInvalidChars">Should this routine replace invalid characters with 'IllegalNtfsReplacementChar'?</param>
            <param name="foundInvalidCharacters">True if we found invalid characters</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.IsFileNameAllGivenCharacter(System.Char,System.String)">
            <summary>>
            Checks if the file name is all the given character.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.FileUtils.MakeFullPath(System.String,System.String)">
            <summary>
            If the file is a relative path, this method uses the current top-of-stack
            file to generate a complete path to the file.  If the file is rooted full path
            the path is cannonicalized and returned
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.UiHostLocale">
            <summary>
            Provides access to the UI Locale information of the host
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsTextManager">
            <summary>
            Provides general management functionality for text views and buffers
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.TrackSelection">
            <summary>
            Allows a VSPackage to inform the environment of a change
            in the selection container of a window's selection context
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsTrackSelectionEx">
            <summary>
            Allows a VSPackage to inform the environment of a change in any part of a window's selection context
            and returns information about the current selection
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsRegisterPriorityCommandTarget">
            <summary>
            Allows a VSPackage to register priority command routing
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsShellDebugger">
            <summary>
            VS shell debugger service
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.SqlDebugEngine">
            <summary>
            VS shell Sql debugger engine
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.TextEditorFactory">
            <summary>   
            guid of the standard editor factory
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferIsDiskFile">
            <summary>
            VT_BOOL
            VARIANT_TRUE if buffer is a file on disk
            You cannot set this property. 
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferEncoding">
             <summary>
             VT_UI4  
            
             Obsolete- Should use GUID_VsBufferEncodingVSTFF
            
             CHARFMT in the low word, codepage in the high word
            
             CHARFMT charfmt; // CHARFMT_UNI, CHARFMT_UNI_SWAP, CHARFMT_MBCS, CHARFMT_UTF8
             UINT codepage;   // Affects persistence format only when charfmt == CHARFMT_MBCS
             DWORD dwBufferEncoding;
            
             dwBufferEncoding = MAKELONG(charfmt,codepage); // to create
             codepage = HIWORD(dwBufferEncoding);           // to extract codepage
             charfmt = (CHARFMT)LOWORD(dwBufferEncoding);   // to extract CHARFMT
            
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferEncodingVsTff" -->
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferEncodingPromptOnLoad">
             <summary>
               VT_UI4  
            
             Contact editor team with questions if you think you may want to use this.
             This data is only for a set purpose.  You cannot get the value of this back.
             This should only be used by editor factories that want to specify a codepage on loading from the openwith dialog.
            
             DWORD dwPromptOnLoadFlag;  PROMPTONLOADFLAGS: Set to codepageNoPrompt = 0x000000000 to detect or codepagePrompt = 0x000000001 to prompt for encoding on load
            
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferDetectCharSet" -->
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.VsBufferDetectLangId">
             <summary>
               VT_BOOL  
            
             When DetectLangSid is VARIANT_TRUE, a change to the buffer's moniker will cause the buffer
             to change the language service based on the moniker when the moniker is believed to
             represent a disk file.  By default this is VARIANT_TRUE.
            
             </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.PropertyBrowserId">
            <summary>
              VT_BSTR  
            
            This property will be used to set the SEID_PropertyBrowserSID element of the selection
            for text views.  This is only used if you have a custom property browser.  If this
            property is not set, the standard property browser will be associated with the view.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.UserReadOnlyErrorString">
            <summary>
              VT_BSTR  
            
            This property is used to allow the buffer to provide specific rich error info in the
            case where the buffer originates the BUFFER_E_READONLY error.  Set this BSTR to be
            the (localized) text you want displayed by the UI.  Note that the buffer itself doesn't
            put up UI, but only sets rich error info so that the calling UI can do so.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.BufferStorage">
            <summary>
              VT_UNKNOWN
            
            This property is used to get access to the buffer's storage object.  The returned
            pointer can be QI'd for IVsTextStorage and IVsPersistentTextImage.  This is a get-only
            property.  To set the storage, use the buffer's InitializeContentEx method.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.PropertyOleSql">
            <summary>
            VT_BOOL
            
            This property is used to enable/disable ole sql support in text buffer
            ATTENTION: Guid is generated by Komodo and duplicated in sqlwb\LanguageService\Core\src\LService.h
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.PropertySqlVersion">
            <summary>
            VT_I4
            
            This property is used to set version sql server onces connection is established
            ATTENTION: Guid is generated by Komodo and duplicated in sqlwb\LanguageService\Include\LangServiceSQL.h
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.PropertyBatchSeparator">
            <summary>
            VT_BSTR 
            
            This property is used to set custom batch separator
            ATTENTION: Guid is generated by Komodo and duplicated in sqlwb\LanguageService\Include\LangServiceSQL.h
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.IntelliSenseEnabled">
            <summary>
            VT_BOOL
            
            This property is used to notify user changes to the per-window intellisense state
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.DatabaseChanged">
            <summary>
            VT_STRING
            
            This property is used to notify changes to the active database associated with a QE window
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.PropertyDisableXmlEditorPropertyWindowIntegration">
            <summary>
            NOTE: this is property that we negotiated with XML editor team. Specifying it while calling IVsUserData.SetData
            on the text buffer hooked up with XML language service [and specifying "true" as its value] results in XML
            editor turning off its Property window integration and allowing the hosted editor to do it
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.LangDefault">
            <summary>
            Default VS editor Guid
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.FontAndColorCategoryStandardTextEditor">
            <summary>
            category guid for Color and Font settings for core VS editor that corresponds to the
            settings that are customized via Tools->Options->Fonts and Colors->Text editor category
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.FontAndColorService">
            <summary>
            guid for the IVsFontAndColorDefaultsProvider service that the editor package proffers
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.FontAndColorCategoryTextResults">
            <summary>
            Guid of font and color category of text results
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.FontAndColorCategoryGridResults">
            <summary>
            Guid of font and color category of grid results
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.FontAndColorCategoryShowplan">
            <summary>
            Guid of font and color category of showplan
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.MarkerService">
            <summary>
            QE text marker service
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.MarkerError">
            <summary>
            "Error Message" marker
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.GuidList.MarkerTemplateParam">
            <summary>
            "QE Tempate Param" marker
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.HashLog.Format(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Exactly like string.Format, with no hashing done on <paramref name="args"/>.
            </summary>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="stringFormat">A composite format string passed to string.Format().</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of <paramref name="stringFormat"/> in which the format items have been replaced by 
            the string representation of the corresponding objects in <paramref name="args"/>.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.HashLog.FormatHashed(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Identical to string.Format() when HashObjectNamesInLogs is not set.
            Otherwise, strings and sensitive <seealso cref="T:Microsoft.Data.Tools.Diagnostics.LogObject"/> types in <paramref name="args"/> 
            will be replaced with a hash value when generating formatted string.
            </summary>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="stringFormat">A composite format string passed to string.Format().</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of <paramref name="stringFormat"/> in which the format items have been replaced by 
            the string representation (or hash values) of the corresponding objects in <paramref name="args"/>.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.HashLog.Join(System.String,System.Object[])">
            <summary>
            Similar to string.Join(), however if HashObjectNamesInLogs is set, LogObjects in <paramref name="args"/>
            will be replaced with a hash value.
            </summary>
            <param name="separator">The string to use as a separator. 
            <paramref name="separator"/> is included in the returned string only if value has more than one element.</param>
            <param name="args">An array of objects to concatenate.</param>
            <returns>A string that consists of the elements or hash values delimited by the <paramref name="separator"/>.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.HashLog.FormatObjectName(System.String)">
            <summary>
            When HashObjectNamesInLogs is set, <paramref name="objectName"/> will be replaced by a hash string.
            </summary>
            <param name="objectName">The original name of the object that should be masked.</param>
            <returns>A hash value or the original <paramref name="objectName"/>.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.HashLog.FormatFileName(System.String)">
            <summary>
            When HashObjectNamesInLogs is set, the path of the fileName will be replaced by a hash string.
            For example: DirectoryName\TestFile.txt will be converted to [HashValue]\TestFile.txt.
            </summary>
            <param name="fileName">The name of the file, with or without the full path.</param>
        </member>
        <member name="E:Microsoft.Data.Tools.Schema.Common.IHostShutdownService.HostShuttingDown">
            <summary>
            Event raised when VS begins it's shutdown phase
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.IHostShutdownService.IsZombie">
            <summary>
            Is VS shutting down?
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.IHostShutdownService.RequestWait">
            <summary>
            Requests that shutdown pause
            </summary>
            <returns>The cookie that should be passed to WaitNoLonger when
            shutdown can continue</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.IHostShutdownService.WaitNoLonger(System.Int32)">
            <summary>
            Tells the shutdown service to no longer wait on this cookie.  Shutdown
            will continue if there are no cookies left to be wated on
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.IntegerRange">
            <summary>
            If the ranges have an overlap, they're compared equal, otherwise this class follows regular comparison semantics.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.IntegerRangeOverlapComparer">
            <summary>
            If the ranges have an overlap, they're compared equal, otherwise this class follows regular comparison semantics.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.IStackLogSettingsContext">
            <summary>
            This interface controls the lifetime of settings created as part of the
            top-of-stack API.  Changes made to this context's AmbientData instance will
            flow to lower in the stack while this object is not disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.LoginUtils.IsValidAzureV12UserSid(System.String)">
            <summary>
            Returns true if AzureV12 UserSid is Valid.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.LogSettings.HashedObjectsCache">
            <summary>
            A cache to store object names previously hashed by calls to HashLog.FormatHashed()
            Key is original object name and value is its hash
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.LogSettings.LogSettingsData.TraceSettings">
            <summary>
            Logs the Log Settings
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.LogSettings.StackConfiguration">
            <summary>
            This class encapsulated the concept of configuration that is set on the stack and
            flows across multiple threads as part of the logical call context
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.RuntimeUtils.IsWindows">
            <summary>
            Returns true if running in Windows environment.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.ExecutionHelper.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.ExecutionHelper.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.Data.CommandBehavior)">
            <summary>
            Sends the CommandText to the Connection, and builds a SqlDataReader using one of the CommandBehavior values. 
            </summary>
            <param name="command">Command to be used</param>
            <param name="behavior">Provides a description of the results of the query and its effect on the database</param>
            <remarks>
            When the CommandType property is set to StoredProcedure, the 
            CommandText property should be set to the name of the stored procedure. 
            The command executes this stored procedure when you call ExecuteReader.
            When you use versions of SQL Server before SQL Server 2005, while the 
            SqlDataReader is being used, the associated SqlConnection is busy serving the 
            SqlDataReader. 
            While in this state, no other operations can be performed on the 
            SqlConnection other than closing it. 
            This is the case until the Close method of the SqlDataReader is called. 
            Starting with SQL Server 2005, the multiple active result set (MARS) feature 
            allows for multiple actions using the same connection.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.ExecutionHelper.TranslateException(Microsoft.Data.SqlClient.SqlException,System.Data.IDbConnection)">
            <summary>
            Matches a SqlException type with a Dal Exception.
            </summary>
            <remarks>
            If a match succeeded, a new exception type is thrown
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.ExecutionHelper.StandardExceptionHandler(System.Exception)">
            <summary>
            Handles the exceptions typically thrown when a SQLConnection is being opened
            </summary>
            <returns>True if the exception was handled</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlClientExtensionMethods.SetAccessToken(Microsoft.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Sets the access token in connection
            </summary>
            <param name="connection">The SqlConnection instance.</param>
            <param name="accessToken">The access token to use.</param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory">
            <summary>
            An immutable factory for creating SqlConnection instances.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.WithObserver(System.Action{Microsoft.Data.SqlClient.SqlConnection})">
            <summary>
            Creates and returns a new SqlConnectionFactory instance with the attached Action<paramref name="onSqlConnectionCreated"/> callback.
            </summary>
            <param name="onSqlConnectionCreated">The callback invoked when a new SqlConnection instance is instantiated.</param>
            <returns>The new SqlConnectionFactory instance.</returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.SqlSecureString">
            <summary>
            String class replacement that keeps its data encrypted in memory
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.SqlSecureString.#ctor(System.String)">
            <summary>
            Constructor for strings
            </summary>
            <param name="str">The string to encrypt</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.SqlSecureString.#ctor(System.Security.SecureString)">
            <summary>
            Constructpr for SecureStrings
            </summary>
            <param name="secureString">The SecureString to copy</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.SqlSecureString.GetUnsecureValue">
            <summary>
            Gets a System.String containing the decrypted text of this instance.
            Callers should set the string object receiving the plaintext secret to
            null as soon as possible after they are done using the data.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory.SqlSecureString.Dispose">
            <summary>
            Deletes the value and frees the resources of this object
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionStringParser.MakeSafeToPersist(System.String,System.String,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionStringParser.MakeSafeToPersist(Microsoft.Data.Tools.Schema.Common.SqlClient.SqlConnectionFactory,System.String,System.Boolean)" -->
        <member name="T:Microsoft.Data.Tools.Schema.Common.SqlErrorNumbers">
            <summary>
            Constants for SQL Error numbers
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.StripCR(System.String)">
            <summary>
            Strip CR from a string, returning a copy.
            </summary>
            <param name="str">The input string.  Must not be null.</param>
            <returns>A copy of the input, with CR characters removed.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.MultiLineCompare(System.String,System.String,System.StringComparison)">
            <summary>
            Compare two strings, treating LF and CRLF as equivalent.
            </summary>
            <param name="x">The first string.  Must not be null.</param>
            <param name="y">The second string.  Must not be null.</param>
            <param name="mode">The comparison mode.</param>
            <returns>
            Less than zero if x less than y
            Zero if x equals y
            Greater than zero if x greater than y
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.MultiLineEquals(System.String,System.String,System.StringComparison)">
            <summary>
            Test two strings for equality, treating LF and CRLF as equivalent.
            </summary>
            <param name="x">The first string.  Must not be null.</param>
            <param name="y">The second string.  Must not be null.</param>
            <param name="mode">The comparison mode.</param>
            <returns>True if the strings are equal, otherwise false</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.EmptyOrSpace(System.String)">
            <summary>
             Checks to see if the String is empty or null or only contains spaces
            </summary>
            <returns>
              true if the String is not empty and not null
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.NotEmptyAfterTrim(System.String)">
            <summary>
                 Check the String is empty or null
            </summary>
            <returns>
                  true if the String is not empty and not null
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.EqualValue(System.String,System.String)">
            <summary>
             Compare two strings with invariant culture and case sensitive 
             Also consider the null cases 
            </summary>
            <returns>
                true if the have the same value
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.CommentOut(System.String)">
            <summary>
            Comment out a string using SQL syntax
            </summary>
            <param name="str">string to comment out</param>
            <returns>comment out string</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.IsSqlVariable(System.String)">
            <summary>
            Reports if the input is in Sql variable format.
            </summary>
            <param name="variable"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.ExtractNameOfVariable(System.String)">
            <summary>
            Strips the $( in the beginning and ) at the end.
            </summary>
            <param name="variable"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.GetVariablesFromString(System.String)">
            <summary>
            Parse the literal string, get all the variables defined in that string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.TryToParseCommandLineArguments(System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}@,System.String@)">
            <summary>
            Returns the parameters in the same order as they appear.
            If a parameter contains space, it must be wrapped around in commas.
            </summary>
            <param name="arguments"></param>
            <param name="parameters"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.ConvertHexStringToByteArray(System.String)">
            <summary>
            Converts a hex string into a stream of bytes.  The string
            can optionally contain the leading 0x characters.
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.GeneratePassword(System.String)">
            <summary>
            Use crypto to generate a random set of bytes, then convert those to a string.  Also makes sure
            the user name is not a substring in the password.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.GeneratePassword">
            <summary>
            Use crypto to generate a random set of bytes, then
            convert those to a string.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.StripOffBrackets(System.String)">
            <summary>
            Removes the [] from around the argument name
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.HasMsBuildDelimiters(System.String)">
            <summary>
            Does this name have $() as delimiters?
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.StripOffMsBuildDelimiters(System.String)">
            <summary>
            Removes the $() from around the argument name
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.StringUtils.EnsureIsMsBuildDelimited(System.String)">
            <summary>
            Adds the $() around the database/variable names
            </summary>
            <param name="name">The name to delimit as $(name)</param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration">
            <summary>
            Tracks duration for telemetry events
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.#ctor(Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession,Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryEventName)">
            <summary>
            Creates and starts a duration
            </summary>
            <param name="telemetrySession"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.StopAndSend(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Stops the duration and sends the telemetry event
            </summary>
            <param name="telemetryProperties"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.AddPropertiesAndMeasurements(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Adds telemetry properties
            </summary>
            <param name="telemetryProperties"></param>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.TelemetryMeasurements">
            <summary>
            Telemetry Measurements
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.TelemetryProperties">
            <summary>
            Telemetry Properties
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryDuration.Dispose">
            <summary>
            Stops and sends the telemetry event
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryError.ElementType">
            <summary>
            SQL Element type (e.g SQLProcedure, SQLTable ...)
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryError.ToString">
            <summary>
            Returns a string format of the class to store in telemetry events
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession">
            <summary>
            Provides facility to send telemetry events.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.InitializeTelemetry(System.Boolean,System.String,System.Version)">
            <summary>
            Initializes telemetry
            </summary>
            <param name="enabled">When true telemetry will be enabled</param>
            <param name="applicationName">Application Name</param>
            <param name="applicationVersion">Application Version</param>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.Enabled">
            <summary>
            Returns true if telemetry is enabled 
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.CreateNewSession">
            <summary>
            Creates a new telemetry instance and session
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.StartSession">
            <summary>
            Creates a new telemetry session. Sessions are created for each DacFx operations (Import, Export, Extract, Publish ...)
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.TrackEvent(Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryEventName,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Sends a telemetry event to telemetry client  
            </summary>
            <param name="eventName">Event Name</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
            <param name="measurements">Measurements associated with this event.</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.TrackException(Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySourceName,System.Exception,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Sends a telemetry event for an exception  
            </summary>
            <param name="sourceName">Exception source name</param>
            <param name="exception">Exception to track</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
            <param name="measurements">Measurements associated with this event.</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySession.EndSession">
            <summary>
            End the telemetry session
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryEventName">
            <summary>
            Telemetry Event Names
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetryMeasureName">
            <summary>
            Names used for measures in a telemetry event
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Telemetry.TelemetrySourceName">
            <summary>
            Telemetry names for the source of exceptions
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler">
            <summary>
            A helper class that encapsulates the marshalling of delegate calls from multiple
            threads to a UI thread.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler.EventMarshalContext">
            <summary>
            The synchronization context used by the EventMarshaler.  If an application needs to leverage the
            context it can access it here and be correct in using the context's methods to marshal to the
            correct context; however, the goal is that clients will use the more convient helper methods on this 
            class for correct marshalling behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler.RaiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            A strongly typed helper method for raising/marshalling events onto the correct UI thread for processing.
            This method can be used for any server component that exposes events to UI-based consumers.
            </summary>
            <typeparam name="TEventArgs">
            The type event arguments class
            </typeparam>
            <param name="eventToRaise">
            The event/delegate to call on the UI thread
            </param>
            <param name="sender">
            The sender argument of the event delegate
            </param>
            <param name="args">
            The event's args instance
            </param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler.DoCallback(System.Delegate,System.Object[])">
            <summary>
            A general purpose, loosely typed helper method for marshalling delegate invocations to the appropriate
            UI thread for execution.  
            
            This method posts events to the UI thread.  This means that the server can continue processing without
            blocking waiting for consumers to complete.  In the event that no synchronization context has been defined
            the delegate will be executed on a ThreadPool thread and not block the caller.
            
            Although this method could be used to raise events, the RaiseEvent method is prefered for marshaled event
            handling because it is strongly typed.  This method does not validate that the arguments provided in the
            args[] are the appropriate number or type required for correct execution of the callback.
            </summary>
            <param name="callback">
            The delegate to execute in the appropriate context
            </param>
            <param name="args">
            Arguments to the delegate.
            </param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler.Invoke(System.Delegate,System.Object[])">
            <summary>
            Helper method to actually invoke the delegate and handle any exceptions
            that could occur
            </summary>
            <param name="method"></param>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.EventMarshaler.MarshaledMethodState">
            <summary>
            This class encapsulates the event state that is being posted to the correct context
            for execution
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus">
            <summary>
            This interfaces exposes a way for consumers of SimpleJob to communicate
            progress information back to code that is waiting for the job to complete.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.CallbackArg">
            <summary>
            The original argument/state supplied to WaitCallback
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.IncrementProgress">
            <summary>
            Increments the progress by one, and is meant to facilitate heartbeat mode job-status reporting.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.IncrementProgress(System.Int32)">
            <summary>
            Increments the progress by progressDelta.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.IncrementProgress(System.Int32,System.String)">
            <summary>
            Increments the progress by progressDelta and also sets the new status line.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.InitializeProgress(System.Int32,System.Int32,System.String)">
            <summary>
            Initialize the progress for the job
            </summary>
            <param name="progressTowardsGoal"></param>
            <param name="progressGoal"></param>
            <param name="statusLine"></param>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus.State">
            <summary>
            Returns the state of the Job.  Useful if the callback wants to know if it has been
            canceled
            </summary>
        </member>
        <member name="E:Microsoft.Data.Tools.Schema.Common.Threading.Job.StatusChanged">
            <summary>
            The StatusChanged event is raised each time the job's status is changed.  
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.Name">
            <summary>
            A user friendly identifier for an instance of the Job.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.StartTime">
            <summary>
            StartTime is the "time" when the Job was started by the JobManager.  
            This is before the Initialize() is called.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.Visible">
            <summary>
            Defaults to true        
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.Cancelable">
            <summary>
            Defaults to true
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.ProgressGoal">
            <summary>
            A number indicating the number CurrentProgress is expected to equal 
            when the Job is finished.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.CurrentProgress">
            <summary>
            The current progress of the Job.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.IsHeartbeatMode">
            <summary>
            The status reporting mode the Job is in.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.Job.StatusLog">
            <summary>
            A copy of the log of all messages raised from the Job to the consumer.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.Initialize">
            <summary>
            Initialize is an opportunity for the Job to perform any work that it needs to
            do on the thread the Job was submitted on prior to actual execution.  An example would be
            a Job performing some UI work during initialization.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.Run">
            <summary>
            Where the work is done.  Run can be called mutltiple times based on the threading model
            requested.type of work.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.InitializeProgress(System.Int32,System.Int32,System.String)">
            <summary>
            Set's job progress goal, current progress value, and current status. Usually called from your initialize implementation. Can be
            called multiple times for a given job -- calling more than once would normally mean that you are changing reporting state from 
            heartbeat to progress mode.
            </summary>
            <param name="progressTowardsGoal">The current relative progress value.</param>
            <param name="progressGoal">The progress goal value (0 if in heartbeat mode)</param>
            <param name="statusLine">String representing current status</param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.IncrementProgress">
            <summary>
            Increments the progress by one, and is meant to facilitate heartbeat mode job-status reporting.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.IncrementProgress(System.Int32)">
            <summary>
            Increments the progress by progressDelta.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.IncrementProgress(System.Int32,System.String)">
            <summary>
            Increments the progress by progressDelta and also sets the new status line.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.RaiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Helper method to marshal event back to the UI thread
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="eventToRaise"></param>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.DoCallback(System.Delegate,System.Object[])">
            <summary>
            Helper method to marshal call execution back to the UI thread
            </summary>
            <param name="callback"></param>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.Job.OnStatusChange(Microsoft.Data.Tools.Schema.Common.Threading.JobEventArgs)">
            <summary>
            Raise the StatusChange event if we have a marshaler to do it for us
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobEventArgs">
            <summary>
            This class represents the change is status for one Job instance.  Instances of this class are snap-shots of
            the Job's state at the time the event was fired.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobEventArgs.PercentCompleted">
            <summary>
            Returns the percentage completed or 
            PercentInvalidHeartbeatMode if in heartbeat mode
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs">
            <summary>
            This class is used by the JobManager class to communicate Job events to clients.  
            
            It is expected that there will be one standard "uber" control that will "know" how to listen
            to and manage displaying all jobs that are currently being managed by the job manager.  This
            control will delegate to a "known" control that knows how to display the status of one job.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs.JobState">
            <summary>
            The job's state at the time the event was raised
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedJob">
            <summary>
            This Job is a "resident" job that is created by the JobManager.  
            Because it is created by the JobManager there should only be one
            instance per JobManager.
            
            The purpose of this job is to process JobListChanged events in the order that they
            are added to the job.  In effect, an instance of this Job acts as a 
            JobListChanged event serializer to ensure that events are processed
            in the order they occur. 
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedJob.AddMessage(System.EventHandler{Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs},Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs)">
            <summary>
            Add a message for this Job
            </summary>
            <param name="listener"></param>
            <param name="job"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedJob.RemoveMessages(System.EventHandler{Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs})">
            <summary>
            Removed any messages in the list that are for the specified listener.  This method
            is implemented to support a listener removing itself from listening for events
            </summary>
            <param name="listener"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedJob.QueuedJobListChangeMessage">
            <summary>
            Used to store a JobListChanged message that should be returned to the 
            listener.
            </summary>
        </member>
        <member name="E:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobListChanged">
            <summary>
            This event is raised in the following events:
            * Job-newly added to the list
            * Job-ceased management by JobManager after removed from the list
            
            It is meant to be usable by UI code to maintain a running list of active
            jobs in a given JobManager instance.
            
            This event will also be raised for any Jobs that are already "in flight" when
            a new listener is added to the event
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.Marshaler">
            <summary>
            The marshaler used by the JobManager to marshal events in the appropriate context
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.CurrentCulture">
            <summary>
            The current culture captured when the JobManager was initialized
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.CurrentUICulture">
            <summary>
            The current UI culture captured when the JobManager was initialized
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.Initialize">
            <summary>
            Initialize the instance of the JobManager.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.StartJob(Microsoft.Data.Tools.Schema.Common.Threading.Job)">
            <summary>
            Starts a job-derived object asynchronously using a thread "managed" by JobManager.
            </summary>        
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.StartJobOnCurrentThread(Microsoft.Data.Tools.Schema.Common.Threading.Job)">
            <summary>
            Unlike JobManager.Start, this method starts the job using the current thread.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.RequestCancelJob(Microsoft.Data.Tools.Schema.Common.Threading.Job)">
            <summary>
            Requests cancellation of a currently running job.
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.RunIdleCooperatively">
            <summary>
            This method is called by the owner of a JobManager (usually the app itself, in host-level logic), and should
            be called repeatedly when there are no UI messages to process (idle processing). The job manager, will then
            call any jobs which have registered for idle execution.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.RunBackgroundScheduled(Microsoft.Data.Tools.Schema.Common.Threading.JobManager.IManageableJob)">
            <summary>
            Run the specified job using the Job manager's background processing scheduling.  If an
            exception occurs while queueing the work item the job is removed from 
            the managed jobs list
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.RunCurrentThread(Microsoft.Data.Tools.Schema.Common.Threading.JobManager.IManageableJob)">
            <summary>
            Run the managed job on the current thread.  Because we are calling RunImpl directly
            RunImpl will handle any exceptions that occur during actual execution and will
            remove the job from the JobManager
            </summary>
            <param name="imj"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.AddJob(Microsoft.Data.Tools.Schema.Common.Threading.Job)">
            <summary>
            Handle adding the managed Job to the managed jobs list
            </summary>
            <param name="imj"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.AddJobIdleProcessing(Microsoft.Data.Tools.Schema.Common.Threading.JobManager.IManageableJob)">
            <summary>
            Register the specified Job for processing on the JobManager's idle processing loop
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.Remove(Microsoft.Data.Tools.Schema.Common.Threading.JobManager.IManageableJob)">
            <summary>
            This method is called in the case of an exception when actually
            running a job or by JobBase's DoSetRunState() when a job has finished
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.InitializeManagedJob(Microsoft.Data.Tools.Schema.Common.Threading.Job)">
            <summary>
            Setup the specified job to be managed by the JobManager.  Returns an IManagedJob
            interface reference to signify that from this point on, we will be managing
            this job through the interface
            </summary>
            <param name="jobToManage"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.CheckInitialized">
            <summary>
            Checks that the JobManager is in an intialized state
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.OnJobListChanged(Microsoft.Data.Tools.Schema.Common.Threading.JobListChangedEventArgs)">
            <summary>
            Raise the event to all registered listeners.  It is assumed that this method is
            called within a transaction so that we can meet our list change notification
            guarrentees
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase">
            <summary>
            This is the ultimate base class for Job-derived objects.  We use this class as an inner class
            to allow us to "hook" into it using the IManagedJob interface which is "known" only to
            JobManager.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.Manager">
            <summary>
            Returns the instance of the JobManager managing a particular Job-derived object.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.State">
            <summary>
            Returns the current state of the Job.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.CancelRequestedEvent">
            <summary>
            A mechanism for the consumer to block on other processing or receive
            notification that the job was canceled
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.Initialize">
            <summary>
            Initialize is called on the thread that the job is submitted on
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.SetRunState(Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult)">
            <summary>
            SetRunState is used by Job implementations that self schedule.  
            Because these Job implementations are no longer hosted by the 
            JobManager (from a threading perspective) it is
            up to these implementations to signal to the manager that they are completed
            or want to once again be hosted by the manager's threading.  It is up to the
            Job implementation to make the first call to reschedule itself while executing
            and then (if self scheduling) a second call to schedule itself again.
            
            It is possible that this method can be called multiple times during a job's execution
            or race condition with the execution thread to actually set the next runstate of the 
            job.  Because of the potential race condition, we use the mechanism below to ensure that
            the setting of the run-state is serialized correctly.
            </summary>
            <param name="runState"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.Microsoft#Data#Tools#Schema#Common#Threading#JobManager#IManageableJob#RunImpl(System.Object)">
            <summary>
            RunImpl is called by the JobManager to run the Job.  This method can be called 
            multiple times as the Job changes Run State.  For instance, the Job could move
            between different host execution 
            states - i.e. background -> idle processing -> background etc.
            </summary>
            <param name="dummyArg"></param>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.Microsoft#Data#Tools#Schema#Common#Threading#JobManager#IManageableJob#IsLowPriority">
            <summary>
            Is this a low priority job?
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.IsLowPriorityImpl">
            <summary>
            By default all jobs are default (normal) priority
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.OnCompleted(System.EventArgs)">
            <summary>
            Raise the completed event
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.ChangeRunState(Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult)">
            <summary>
            Handles run state changes that can occur during run execution.  This 
            method should always be called while holding the job run state sync lock
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.JobBase.ChangeJobState(Microsoft.Data.Tools.Schema.Common.Threading.JobState)">
            <summary>
            Change the Job's state.  This method performs its own synchronization through the use
            of InterlockedCompareExchange
            </summary>
            <param name="newState"></param>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.JobManager.IManageableJob">
            <summary>
            Interface constract between JobManager and all jobs it controls.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult.Undefined">
            <summary>
            Not to be used by Job implementations, only used by the Job infrastructure
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult.Finished">
            <summary>
            The job is finished and will be removed from the JobManager
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult.ContinueWithIdleScheduling">
            <summary>
            The job should not be registered for idle processing on the application's message loop.  
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult.ContinueWithSelfScheduling">
            <summary>
            The job will continue processing using its own hosting/threading model.
            The job will call SetRunState(...) when it "wants" to change its 
            state (possible to another hosting model like Idle Processing) 
            and/or to signal that it is completed
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Threading.JobRunResult.ContinueWithBackgroundScheduling">
            <summary>
            Call Run again hosted on a background thread
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.SimpleJob">
            <summary>
            SimpleJob is a concrete implementation of Job meant to make it easy for
            features that use ThreadPool.QueueUserWorkItem or Thread.Start to port over to the 
            new Job infrastructure.  
            
            To switch over to the Job infrastructure, the developer:
            <list type="">
            <item>Creates an instance of SimpleJob</item>
            <item>In the case of ThreadPool based delegates, modifies the signature to 
            take an instance of a class that implements ISimpleJobStatus.</item>
            <item>Registers for any events (such as the Finished event)</item>
            <item>Submit the job to the JobManager</item>
            </list> 
            
            Migrating to this infrastructure will eliminate
            custom completion synchronization logic and make that logic consistent.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.SimpleJob.#ctor(System.Threading.ThreadStart)">
            <summary>
            Use this constructor to supply the necessary information to the SimpleJob
            to execute the parameterless method when the job is executed.
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.SimpleJob.#ctor(System.Action{Microsoft.Data.Tools.Schema.Common.Threading.ISimpleJobStatus},System.Object)">
            <summary>
            Use this constructor to supply the necessary information to the SimpleJob to
            execute the callback when the job is run.
            </summary>
            <param name="sjc"></param>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.Threading.SimpleJob.Run">
            <summary>
            For SimpleJob, this is the method that will call the Delegate supplied
            in the constructor.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.Threading.SimpleJob.SimpleJobStatus">
            <summary>
            The SimpleJobStatus wraps the SimpleJob and exposed it's statistics methods
            to consumers who construct a SimpleJob using the SimpleJobCallback delegate
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.VersionUtils.ExtractVersionNumbers(System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Extracts the file version parts out of the argument string.  The
            string is assumed to be of the form
            major.minor.build.private
            </summary>
            <returns>true if we were able to parse the incoming version string</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.VersionUtils.GetVersionNumber">
            <summary>
            Returns the version number of this assembly.
            </summary>
            <returns>The string for the Data assembly version</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.VersionUtils.GetVersionNumber(System.Type)">
            <summary>
            Returns the version number of passed in type's assembly.
            </summary>
            <returns>The string for the passed in type's assembly version</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.VersionUtils.IsVarDecimalSupported(System.String)">
            <summary>
            VarDecimal Support added in 9.00.3xxxx version (SQL2005 SP2)
            </summary>
            <param name="dbVersionNumber"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Win32.DataUtilitiesNativeMethods.VK_LBUTTON">
            <summary>
            Handles the low level work of connecting to a COM based event.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Schema.Common.Win32.DataUtilitiesNativeMethods.VK_RBUTTON">
            <summary>
            Handles the low level work of connecting to a COM based event.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.XmlUtilities">
            <summary>
            Utility class for Xml functions
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.RemoveAllXmlNodes(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Remove all nodes that match the argument xpath expression
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.TryGetAttribute(System.Xml.XmlNode,System.String,System.Xml.XmlAttribute@)">
            <summary>
            Attempts to get an attribute from the argument node.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.TryGetAttributeAsString(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            Attempts to get an attribute from the argument node.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.GetAttributeAsBool(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            Returns an attribute as a bool
            </summary>
            <param name="node">The node to receive the attribute from</param>
            <param name="attrName">The name of the attribute</param>
            <param name="defaultValue"></param>
            <returns>The value to return if the attribute was not found</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.HasXmlAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            Does the XmlNode have this attribute?
            </summary>
            <param name="node"></param>
            <param name="attrName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.GetUniqueConfigDependentNodes(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            This method will return the uniquely defined config dependent nodes. Be warned that if user has split
            configuration section into multiple property groups, than it will just pickup the ones coming first
            while traversing the .sqlproj xml, and will exclude the ones coming next.
            </summary>
            <param name="doc"></param>
            <param name="nsmgr"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.GetAllConfigDependentNodes(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            This method will return all the config dependent nodes.
            </summary>
            <param name="doc"></param>
            <param name="nsmgr"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.GetAllConfigIndependentNodes(System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            This method will return all config independent nodes from .sqlproj file
            </summary>
            <param name="doc"></param>
            <param name="nsmgr"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.AddChild(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Creates a new XmlElement under 'parent' and returns that new element
            </summary>
            <param name="parent"></param>
            <param name="childName"></param>
            <param name="namespaceUri"></param>
            <param name="childInnerText"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.CreateAttribute(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Creates an attribute on the argument node.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.LoadWithProhibitDtd(System.IO.Stream,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads a stream into an XDocument, failing if the xml has a dtd.  The default behavior for XDocument.Load(Stream) 
            is to parse DTDs.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.LoadWithNonNormalizingProhibitDtd(System.IO.Stream,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads a stream into an XDocument using non-normalizing XmlTextReader that preserves whitespace as significant.  Per security
            requirements, fail if a dtd in encountered in the xml.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.LoadXmlWithProhibitDtd(System.Xml.XmlDocument,System.String)">
            <summary>
            Loads xml into the passed in XmlDocument, failing if the xml has a dtd.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.LoadWithProhibitDtd(System.Xml.XmlDocument,System.String)">
            <summary>
            Loads xml from a file into the passed in XmlDocument, failing if the xml has a dtd.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.LoadWithProhibitDtd(System.Xml.XmlDocument,System.IO.Stream)">
            <summary>
            Loads xml from a stream into the passed in XmlDocument, failing if the xml has a dtd.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.XmlUtilities.GetXmlReaderSettings">
            <summary>
            Creates a default XmlReaderSettings instance that is hardened for security
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Common.LanguageNameLcidConversionUtils">
            <summary>
            Utility class to provide language conversion functionalities
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.Common.LanguageNameLcidConversionUtils.GetNormalizedLanguage(System.String)">
            <summary>
            Converts an SQL language name to its alias if it is an SQL language name
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatforms">
            <summary>
            An enumeration of the T-SQL platforms that contribute to the SqlModel.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatformNames">
            <summary>
            Name of the SqlPlatform values.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatformsUtil.IsInSet(Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatforms,Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatforms)">
            <summary>
            Finds whether a platform is part of a set of platforms.
            For example, SqlPlatforms.SqlAzure.IsInSet(SqlPlatforms.Cloud).
            </summary>
            <param name="platform">Platform(s) to look for in the platformsSet</param>
            <param name="platformsSet">A set of platforms</param>
            <returns>True if platformsSet &amp; platform == platform. False otherwise.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatformsUtil.GetSqlPlatformByName(System.String,System.Boolean)">
            <summary>
            Gets the SqlPlatforms enum value by name.
            </summary>
            <param name="name">The name</param>
            <param name="throwIfNotSupported">Whether to throw exception when the name is not recognized.</param>
            <returns>The matching SqlPlatforms enum value.</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatformsUtil.GetSqlPlatformName(Microsoft.Data.Tools.Schema.SchemaModel.SqlPlatforms,System.Boolean)">
            <summary>
            Gets the name of the SqlPlatforms enum
            </summary>
            <param name="platform">The platform enum value</param>
            <param name="throwIfNotSupported">Whether to throw an exception when the platform doesn't have a name.</param>
            <returns>The name of the platform</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Schema.ProductLocations.GetSqlDBInstallPath">
            <summary>
            Returns the complete path to the SqlDB product installation directory.
            </summary>
            <returns>
            Complete path to SqlDB versioned product directory or null if not installed
            </returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Schema.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.AzureStorageBlobEndpointSecured">
            <summary>
              Looks up a localized string similar to Azure Storage blob endpoint must be valid and must use TLS (SSL)..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.AzureStorageContainerNeeded">
            <summary>
              Looks up a localized string similar to Specify a valid container in your Azure Storage account..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.AzureStorageKeyAndSASTokenBothNull">
            <summary>
              Looks up a localized string similar to Specify either an Azure storage key or a SAS token. Both cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.AzureStorageNoSasKeyAllowed">
            <summary>
              Looks up a localized string similar to Provided value for {0} option should not contain Azure Storage SAS token..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.AzureStorageRootPathNeeded">
            <summary>
              Looks up a localized string similar to Specify the azure storage path under container name. This path will be created if it does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.BigDataExtractParameterErrorMessage">
            <summary>
              Looks up a localized string similar to Mismatched parameters passed for extracting a Synapse database using external parquet files to store data. To use this feature, Azure storage blob endpoint, Azure storage container name, Azure storage key, and optionally the folder path are required..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.BigDataPublishParameterErrorMessage">
            <summary>
              Looks up a localized string similar to Mismatched parameters passed for publishing a Synapse database with data stored in external parquet files. To use this feature, Azure storage blob endpoint, Azure storage container name, Azure storage key or SAS token, and the folder path are required..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ConnectionPropertyNotSet">
            <summary>
              Looks up a localized string similar to Connection property has not been initialized..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.DataOperationStateProviderOperationIdNeeded">
            <summary>
              Looks up a localized string similar to The data operation state provider OperationId property cannot be null or empty and must be 6 characters in length..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.DeveloperInstance_CouldNotSetup">
            <summary>
              Looks up a localized string similar to The developer instance could not be created to host your sandbox database.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.DuplicateNameInNameValuePairs">
            <summary>
              Looks up a localized string similar to The name {0} is a duplicate.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.EmptyCommandText">
            <summary>
              Looks up a localized string similar to Command text should not be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ExportSplitDataUsingHistogramFailed">
            <summary>
              Looks up a localized string similar to Failed to split data using histogram for table {0}. Export will continue without splitting data..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ExtractBigDataOperationCleanupFailed">
            <summary>
              Looks up a localized string similar to The data extraction succeeded but dropping {0}, {1} and {2} failed. Please drop these objects..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.FailedToCleanupStorage">
            <summary>
              Looks up a localized string similar to Cleanup of the Azure storage for table step {0} failed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.InvalidCommandType">
            <summary>
              Looks up a localized string similar to Unsupported command object.  Use SqlCommand or ReliableSqlCommand..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.InvalidConnectionType">
            <summary>
              Looks up a localized string similar to Unsupported connection object.  Use SqlConnection or ReliableSqlConnection..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.InvalidNameValuePairFormat">
            <summary>
              Looks up a localized string similar to Name value format is Name=Value &apos;{0}&apos; is in the wrong format.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.OnlyReliableConnectionSupported">
            <summary>
              Looks up a localized string similar to Connection property can only be set to a value of type ReliableSqlConnection..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.OnlySqlTransactionSupported">
            <summary>
              Looks up a localized string similar to DbTransaction property can only be set to a value of type SqlTransaction..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ParameterizationBinaryLiteralErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to convert {0} to a Microsoft.Data.SqlClient.SqlParameter object. The specified literal cannot be converted to {1} (Microsoft.Data.SqlDbType), as prefix 0x is expected for a binary literals. Literal value: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ParameterizationDateTimeErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to convert {0} to a Microsoft.Data.SqlClient.SqlParameter object. The specified literal cannot be converted to {1} (Microsoft.Data.SqlDbType), as it used an unsupported date/time format. Use one of the supported date/time formats. Literal value: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ParameterizationDetails">
            <summary>
              Looks up a localized string similar to {0} will be converted to a Microsoft.Data.SqlClient.SqlParameter object with the following properties: SqlDbType = {1}, Size = {2}, Precision = {3}, Scale = {4}, SqlValue = {5}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.ParameterizationErrorMessage">
            <summary>
              Looks up a localized string similar to Unable to convert {0} to a Microsoft.Data.SqlClient.SqlParameter object. The specified literal cannot be converted to {1} (Microsoft.Data.SqlDbType). Literal value: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.RetryLimitExceeded">
            <summary>
              Looks up a localized string similar to The action has exceeded its defined retry limit..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.TaskHostWorkLoadDescription">
            <summary>
              Looks up a localized string similar to Analyzing database schema. Your database projects will be ready after {0} operations are completed..
            </summary>
        </member>
        <member name="P:Microsoft.Data.Tools.Schema.Resources.UnsupportedConnectionStringArgument">
            <summary>
              Looks up a localized string similar to The connection string argument {0} is not supported.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.LogComplianceLevel">
            <summary>
            Represents the compliance level of log messages
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Diagnostics.LogComplianceLevel.Untagged">
            <summary>
            Default value for data that has not been tagged or does not contain any sensitive information.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Diagnostics.LogComplianceLevel.Masked">
            <summary>
            Denotes that the LogObject has been previously masked by HashLog.
            </summary>
        </member>
        <member name="F:Microsoft.Data.Tools.Diagnostics.LogComplianceLevel.SensitiveData">
            <summary>
            Object names (tables, columns, etc.), database names, connection strings, file names, etc.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.LogObject">
            <summary>
            Represents an object within a message string that has a name and its associated Compliance Level.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.LogObject.ShouldMask">
            <summary>
            Returns true if this LogObject's name should be hashed according to its LogComplianceLevel.
            Currently only SensitiveData should be masked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.LogObject.Max(Microsoft.Data.Tools.Diagnostics.LogComplianceLevel,Microsoft.Data.Tools.Diagnostics.LogComplianceLevel)">
            <summary>
            Returns the higher LogComplianceLevel between <paramref name="a"/> and <paramref name="b"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.PerfTracer">
            <summary>
            Provides facility to trace code execution through calls to Trace* methods.
            </summary>
            <remarks>
            The primary API of this class is the TraceEvent method. 
            
            For error tracing the TraceException and TraceHResult methods are provided.
            
            If a caller needs to perform some non-trivial work before writing a trace, 
            the ShouldTrace method can be called to determine if the Tracer is logging at a particular verbosity level.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.PerfTracer.TraceEvent(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.PerfTraceIds,System.String)">
            <summary>
            Write a trace event message to the underlying trace source.
            </summary>
            <param name="verbosity">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">String message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
            <remarks>
            The primary API of this class is the TraceEvent method. 
            
            For error tracing the TraceException and TraceHResult methods are provided.
            
            If a caller needs to perform some non-trivial work before writing a trace, 
            the ShouldTrace method can be called to determine if the Tracer is logging at a particular verbosity level.
            
            The return value will return true if the entire message was written. If ETW is disabled for the 
            event or if the entire message was not successfully written, false will be returned. With messages that exceed the
            max payload of an individual ETW, the Tracer splits the payload accross multiple events. If any of the event writes fail,
            the method will return false.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceDuration.CreateNew(Microsoft.Data.Tools.Diagnostics.PerfTraceIds,System.String,System.String)">
            <summary>
            Creates a new TraceDuration and starts the timer. Default verbosity is TraceEventType.Information.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceDuration.CreateNew(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.PerfTraceIds,System.String,System.String)">
            <summary>
            Creates a new TraceDuration and starts the timer.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.TraceId">
            <summary>
            Enumeration of values used as trace event identifiers that semantically represent the major categories of product features.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.Tracer">
            <summary>
            Provides facility to trace code execution through calls to Trace* methods.
            </summary>
            <remarks>
            The primary API of this class is the TraceEvent method. 
            
            For error tracing the TraceException and TraceHResult methods are provided.
            
            If a caller needs to perform some non-trivial work before writing a trace, 
            the ShouldTrace method can be called to determine if the Tracer is logging at a particular verbosity level.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.ShouldTrace(System.Diagnostics.TraceEventType)">
            <summary>
            Determine if tracing at a given verbosity level is being logged.
            </summary>
            <param name="eventType">
            A <see cref="T:System.Diagnostics.TraceEventType"/> enumeration value that specifies the desired verbosity level.
            </param>
            <returns>
            True if tracing at the specified verbosity level is being logged; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceEvent(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId)">
            <summary>
            Write a trace event with an empty, zero-length message to the underlying trace source.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceEvent(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.String)">
            <summary>
            Write a trace event message to the underlying trace source.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">String message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
            <remarks>
            The primary API of this class is the TraceEvent method. 
            
            For error tracing the TraceException and TraceHResult methods are provided.
            
            If a caller needs to perform some non-trivial work before writing a trace, 
            the ShouldTrace method can be called to determine if the Tracer is logging at a particular verbosity level.
            
            The return value will return true if the entire message was written. If ETW is disabled for the 
            event or if the entire message was not successfully written, false will be returned. With messages that exceed the
            max payload of an individual ETW, the Tracer splits the payload accross multiple events. If any of the event writes fail,
            the method will return false.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.WithTimestamp(System.String)">
            <summary>
            Return a message with prefix timestapm
            </summary>
            <param name="message">Message to add to trace</param>
            <returns>Message with timestamp</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceEvent(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.String,System.Object[])">
            <summary>
            Write a formatted trace event message to the underlying trace source.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">Format string of the message to be traced along with the event.</param>
            <param name="args">Object array containing zero or more objects to format.</param>
            <returns>True if event was successfully written</returns>
            <remarks>If any of the arguments contains PII (object names, file names, etc.), please use the TraceEventHashed overload.</remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceEventHashed(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.String,System.Object[])">
            <summary>
            Write a formatted trace event message to the underlying trace source.
            Objects in <paramref name="args"/> will be hashed accordingly by <seealso cref="T:Microsoft.Data.Tools.Schema.Common.HashLog"/>.
            Wrap strings with <seealso cref="M:Microsoft.Data.Tools.Diagnostics.LogObject.CreateUntagged(System.String)"/> to display them as is.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">Format string of the message to be traced along with the event.</param>
            <param name="args">Object array containing zero or more objects to format.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceException(Microsoft.Data.Tools.Diagnostics.TraceId,System.Exception)">
            <summary>
            Write an Error trace event with exception details to the underlying trace source.
            </summary>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="exception">The exception to be logged.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceException(Microsoft.Data.Tools.Diagnostics.TraceId,System.Exception,System.String)">
            <summary>
            Write an Error trace event with a message and exception details to the underlying trace source.
            </summary>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="exception">The exception to be logged.</param>
            <param name="message">String message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceException(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.Exception,System.String)">
            <summary>
            Write a trace event with a message and exception details to the underlying trace source.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="exception">The exception to be logged.</param>
            <param name="message">String message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceHResult(Microsoft.Data.Tools.Diagnostics.TraceId,System.Int32)">
            <summary>
            Write an Error trace event with HRESULT details to the underlying trace source
            if the supplied HRESULT value represents a failure code.
            </summary>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="hr">HRESULT error value</param>
            <returns>True if event was successfully written</returns>
            <remarks>
            If the HRESULT value represents a failure, it is mapped to an exception, and the exception details are logged.
            If the HRESULT value does not represent a failure, no tracing is performed.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.TraceHResult(Microsoft.Data.Tools.Diagnostics.TraceId,System.Int32,System.String)">
            <summary>
            Write an Error trace event with HRESULT details along with a message to the underlying trace source
            if the supplied HRESULT value represents a failure code.
            </summary>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="hr">HRESULT error value</param>
            <param name="message">String message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
            <remarks>
            If the HRESULT value represents a failure, it is mapped to an exception, and the exception details are logged.
            If the HRESULT value does not represent a failure, no tracing is performed.
            </remarks>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.DebugTraceEvent(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.String)">
            <summary>
            Write a formatted trace event message to the underlying trace source and issue a Debug.Fail() with
            the same message.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">Message to be output via Debug.Fail() and traced along with the event.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.AssertTraceEvent(System.Boolean,System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.String)">
            <summary>
            Write a formatted trace event message to the underlying trace source and issue a Debug.Fail() call
            if condition is false.
            </summary>
            <param name="condition">Must be false for Debug or Trace event to be issued.</param>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="message">Message to be output via Debug.Fail() and traced along with the event.</param>
            <returns>True if event was successfully written or the condition was true</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.DebugTraceException(System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.Exception,System.String)">
            <summary>
            Write a trace event with a message and exception details to the underlying trace source and issue a
            Debug.Fail() call with the same message.
            </summary>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="exception">The exception to be logged.</param>
            <param name="message">Message to be traced along with the event.</param>
            <returns>True if event was successfully written</returns>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.Tracer.AssertTraceException(System.Boolean,System.Diagnostics.TraceEventType,Microsoft.Data.Tools.Diagnostics.TraceId,System.Exception,System.String)">
            <summary>
            Write a trace event with a message and exception details to the underlying trace source and issue a
            Debug.Fail() call if the condition is false.
            </summary>
            <remarks>
            Note: often the fact that an exception has been thrown by itself is enough to determine that the message
            should be logged. If so please use DebugTraceException() instead. This method is for if the exception should
            only be logged if some additional condition is also false.
            </remarks>
            <param name="condition">Must be false for Debug or Trace event to be issued.</param>
            <param name="eventType">Event type that specifies the verbosity level of the trace.</param>
            <param name="traceId">The category of the caller's product feature.</param>
            <param name="exception">The exception to be logged.</param>
            <param name="message">Message to be traced along with the event.</param>
            <returns>True if event was successfully written or the condition was true</returns>
        </member>
        <member name="T:Microsoft.Data.Tools.Diagnostics.TraceUtils">
            <summary>
            Provides utility methods for formatting Trace strings
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceUtils.FormatEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Formats an enumerable collection of objects into a string, calling the converter delegate on each to get a string
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceUtils.FormatNamedEnumerable``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>
            Formats an enumerable collection of objects into a string, calling the converter delegate on each to get a string,
            with a name and a count of the objects prepended
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceUtils.FormatDictionary``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.String},System.Func{``1,System.String},System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Formats a dictionary of key-value pairs into a string, calling the appropriate converter delegate
            on each key and value to get a string
            </summary>
        </member>
        <member name="M:Microsoft.Data.Tools.Diagnostics.TraceUtils.FormatNamedDictionary``2(System.String,System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.String},System.Func{``1,System.String},System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Formats a dictionary of key-value pairs into a string, calling the appropriate converter delegate
            on each key and value to get a string with a name and a count of the objects prepended
            </summary>
        </member>
    </members>
</doc>
